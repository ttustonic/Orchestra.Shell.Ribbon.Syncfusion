<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:orchestra="clr-namespace:Orchestra.Controls"
                    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
                    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                    xmlns:converters="http://schemas.wildgums.com/orchestra"
                    xmlns:orccontrols="http://schemas.wildgums.com/orc/controls"
                    xmlns:sf="http://schemas.syncfusion.com/wpf"
                    mc:Ignorable="d">

    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="/Orchestra.Shell.Ribbon.Syncfusion;component/Themes/Ribbon.xaml"/>
        <ResourceDictionary Source="/Orchestra.Shell.Ribbon.Syncfusion;component/Themes/Colors.xaml"/>
    </ResourceDictionary.MergedDictionaries>

    <Style x:Key="RibbonBorderStyle" TargetType="Border">
        <Setter Property="Margin" Value="6" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="BorderBrush" Value="Gray" />
        <Setter Property="VerticalAlignment" Value="Stretch" />
        <Setter Property="HorizontalAlignment" Value="Stretch" />
    </Style>

    <Style x:Key="InnerBackstageGridStyle" TargetType="Grid">
        <Setter Property="Margin" Value="36,16,36,36" />
    </Style>

    <Style x:Key="InnerBackstageTabItemGridStyle" TargetType="Grid">
        <Setter Property="Margin" Value="24,0,24,24" />
    </Style>

    <Style x:Key="RibbonBackstageHeaderLabelStyle" TargetType="Label">
        <Setter Property="Margin" Value="-8,0,6,16" />
        <Setter Property="FontSize" Value="40" />
        <Setter Property="FontWeight" Value="Light" />
    </Style>

    <Style x:Key="RibbonBackstageSubHeaderLabelStyle" TargetType="Label">
        <Setter Property="Margin" Value="0,0,6,0" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="FontSize" Value="18" />
        <Setter Property="FontWeight" Value="Normal" />
    </Style>

    <Style x:Key="RibbonBackstageTabItemHeaderLabelStyle" TargetType="Label">
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="FontSize" Value="18" />
        <Setter Property="FontWeight" Value="Normal" />
    </Style>

    <Style x:Key="RibbonBackstageTabItemHeaderImageStyle" TargetType="Image">
        <Setter Property="Width" Value="24" />
        <Setter Property="Height" Value="24" />
        <Setter Property="HorizontalAlignment" Value="Center" />
        <Setter Property="VerticalAlignment" Value="Center" />
    </Style>

    <ControlTemplate x:Key="RibbonBackstageButtonControlTemplate" TargetType="{x:Type orchestra:RibbonBackstageButton}">
        <Grid x:Name="grid">
            <Border x:Name="border" BorderThickness="{TemplateBinding ShowBorder, Converter={converters:BooleanToThicknessConverter}}" Margin="0" Background="Transparent" BorderBrush="{orccontrols:ThemeColorBrush ThemeColorStyle=BorderColor}">
                <ContentPresenter x:Name="contentPresenter" ContentSource="Content" SnapsToDevicePixels="True"/>
            </Border>
        </Grid>

        <ControlTemplate.Triggers>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Opacity" TargetName="contentPresenter" Value="0.5"/>
                <!--<Setter Property="Effect" TargetName="contentPresenter">
                    <Setter.Value>
                        <fluent:GrayscaleEffect />
                    </Setter.Value>
                </Setter>-->
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="BorderBrush" TargetName="border" Value="#FFC8C8C9"/>
            </Trigger>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" TargetName="border" Value="{DynamicResource Fluent.Ribbon.Brushes.Button.MouseOver.Background}"/>
                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource Fluent.Ribbon.Brushes.Button.MouseOver.BorderBrush}"/>
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource Fluent.Ribbon.Brushes.Button.Pressed.BorderBrush}" />
                <Setter Property="Background" TargetName="border" Value="{DynamicResource Fluent.Ribbon.Brushes.Button.Pressed.Background}"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style TargetType="{x:Type orchestra:RibbonBackstageButton}">
        <Setter Property="Template" Value="{DynamicResource RibbonBackstageButtonControlTemplate}"/>
        <Setter Property="Height" Value="NaN" />
        <Setter Property="Width" Value="Auto" />
        <Setter Property="HorizontalAlignment" Value="Stretch" />
    </Style>

    <Style x:Key="AutoHidingRibbonBackstageButtonStyle" TargetType="{x:Type orchestra:RibbonBackstageButton}" BasedOn="{StaticResource {x:Type orchestra:RibbonBackstageButton}}">
        <Setter Property="Visibility" Value="Hidden" />
        <Style.Triggers>
            <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType={x:Type orchestra:RibbonBackstageButton}}, Path=IsMouseOver}" Value="true">
                <Setter Property="Visibility" Value="Visible" />
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="{x:Type orchestra:RibbonBackstageTabItem}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type orchestra:RibbonBackstageTabItem}">
                    <Grid Background="Transparent" Margin="0,3">
                        <Border x:Name="border1" BorderBrush="Transparent"
                                BorderThickness="1" Background="Transparent">
                            <ContentPresenter Margin="5,5,50,5" ContentSource="Header" />
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="Selector.IsSelected" Value="True">
                            <Setter Property="BorderBrush" TargetName="border1" Value="{DynamicResource Fluent.Ribbon.Brushes.Button.Pressed.BorderBrush}"/>
                            <Setter Property="Background" TargetName="border1" Value="{DynamicResource Fluent.Ribbon.Brushes.Button.Pressed.Background}"/>
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True"/>
                                <Condition Property="Selector.IsSelected" Value="False"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="BorderBrush" TargetName="border1" Value="{DynamicResource Fluent.Ribbon.Brushes.Button.MouseOver.Background}"/>
                            <Setter Property="Background" TargetName="border1" Value="{DynamicResource Fluent.Ribbon.Brushes.Button.MouseOver.BorderBrush}"/>
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type orchestra:RibbonBackstageTabControl}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type orchestra:RibbonBackstageTabControl}">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>

                        <Border BorderThickness="0,0,1,0" HorizontalAlignment="Stretch" Margin="0" VerticalAlignment="Stretch">
                            <Border.BorderBrush>
                                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                    <GradientStop Offset="1" Color="#00D2D3D4" />
                                    <GradientStop Color="#7FD2D3D4" />
                                    <GradientStop Color="#FFD2D3D4" Offset="0.246" />
                                    <GradientStop Color="#FFD2D3D4" Offset="0.797" />
                                </LinearGradientBrush>
                            </Border.BorderBrush>
                        </Border>

                        <StackPanel Grid.Column="0" HorizontalAlignment="Left" Margin="0" VerticalAlignment="Top" IsItemsHost="True" />
                        <Grid Grid.Column="1" Margin="18,0,36,36" Background="Transparent">
                            <ContentPresenter x:Name="PART_SelectedContentHost" VerticalAlignment="Stretch" ContentSource="SelectedContent" />
                        </Grid>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>
