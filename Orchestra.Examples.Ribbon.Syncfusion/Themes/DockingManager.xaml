<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:Microsoft_Windows_Aero="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Aero"
    xmlns:Sync_Resources="clr-namespace:Syncfusion.Windows.Tools.Controls.Resources;assembly=Syncfusion.Tools.WPF"
    xmlns:pc="clr-namespace:System.Windows;assembly=PresentationCore"
    xmlns:pf="clr-namespace:System.Windows;assembly=PresentationFramework"
    xmlns:shared_resources="clr-namespace:Syncfusion.Windows.Shared.Resources;assembly=Syncfusion.Shared.WPF"
    xmlns:syncfusion="http://schemas.syncfusion.com/wpf"
    xmlns:sys="clr-namespace:System;assembly=mscorlib"
    
    xmlns:tools_resources="clr-namespace:Syncfusion.Windows.Tools.Controls.Resources;assembly=Syncfusion.Tools.WPF"
    xmlns:tools_controls="clr-namespace:Syncfusion.Windows.Tools.Controls;assembly=Syncfusion.Tools.WPF"
    xmlns:windows_shared="clr-namespace:Syncfusion.Windows.Shared;assembly=Syncfusion.Shared.WPF">

    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="pack://application:,,,/Orchestra.Shell.Ribbon.Syncfusion;component/Themes/Colors.xaml"/>
    </ResourceDictionary.MergedDictionaries>

	 <Geometry x:Key="Checkmark_Tab">M 0,5.1 L 1.7,5.2 L 3.4,7.1 L 8,0.4 L 9.2,0 L 3.3,10.8 Z</Geometry>
    <tools_resources:ResourceWrapper x:Key="ResourceWrapperKey_Tab"/>

    <Geometry x:Key="RightArrow_Tab">M 0,0 L 4,3.5 L 0,7 Z</Geometry>
    <Thickness x:Key="TabControlExt.Aero.TabPanelPadding" Left="0" Top="0" Right="0" Bottom="0" />
    <Thickness x:Key="TabControlExt.Aero.TabPanelMargin" Left="2" Top="2" Right="4" Bottom="0" />
    <Thickness x:Key="TabControlExt.Aero.ContentPanelBorderThickness" Left="0" Top="0" Right="0" Bottom="0" />
    <CornerRadius x:Key="TabControlExt.Aero.ContentPanelBorderCornerRadius" TopLeft="2" TopRight="2" BottomRight="2" BottomLeft="2" />
    <Thickness x:Key="TabControlExt.Aero.ContentPanelInnerBorderThickness" Left="1" Top="1" Right="1" Bottom="1" />
    <Thickness x:Key="TabControlExt.Aero.ContentPanelInnerBorderMargin" Left="3" Top="3" Right="3" Bottom="3" />
    <Thickness x:Key="TabControlExt.Aero.ContentPanelOuterBorderThickness" Left="1" Top="1" Right="1" Bottom="1" />
    <Thickness x:Key="TabControlExt.Aero.TabItemBorderThickness" Left="1" Top="1" Right="1" Bottom="1" />
    <!--<SolidColorBrush x:Key="Aero.ContentPanelBackgroundBrush" Color="#D2E6FA"/>-->
    <tools_controls:ImageAlignmentToDockConverter x:Key="TabControlExtImageAlignmentToDockConverter"/>

    <DataTemplate x:Key="TabControlExtHeaderDataTemplate" DataType="{x:Type tools_controls:TabItemExt}">
        <TextBlock Focusable="False" Text="{Binding FallbackValue=''}" TextTrimming="CharacterEllipsis" 
				   IsHitTestVisible="False" Padding="1,0,0,1" />
    </DataTemplate>

    <DataTemplate x:Key="TabControlExtEditableDataTemplate" DataType="{x:Type tools_controls:TabItemExt}">
        <TextBox x:Name="EditableHeader" Focusable="True" Style="{Binding Path=EditHeaderItemStyle, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type tools_controls:TabControlExt}}}"
				 Text="{Binding Path=Header, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type tools_controls:TabItemExt}}, Mode=TwoWay}"  
				 IsReadOnly="False" Padding="4,1,4,1" />
    </DataTemplate>


    <ControlTemplate TargetType="{x:Type TabItem}" 
                                     x:Key="TabControlExtnewtabitem">
        <Border BorderThickness="0" 
                Margin="2,0,0,0"  Name="Bd"
                BorderBrush="{DynamicResource ActiveBorderBrush}" 
                Background="{DynamicResource BackgroundBrush}"
                CornerRadius="5,5,0,0">
        </Border>
    </ControlTemplate>


    <tools_controls:CloseButtonTypeToVisibilityConverter x:Key="TabControlExtCloseButtonTypeToVisibilityConverter"/>
    <windows_shared:BooleanToVisibilityConverterEx x:Key="TabControlExtBooleanToVisibilityConverterEx"/>

    <ControlTemplate x:Key="TabPanelCloseButtonTemplate" TargetType="{x:Type ToggleButton}">
        <Border x:Name="brdBack" BorderThickness="0"
                BorderBrush="{DynamicResource BorderBrush}">
            <Path Name="pathButton" SnapsToDevicePixels="True"
				Stroke="{DynamicResource GlyphBrush}" Fill="{DynamicResource GlyphBrush}"
				StrokeThickness="0.5"
                Data="M1,1 L7,7 M1,7 L7,1"
				HorizontalAlignment="Center" VerticalAlignment="Center"
				Width="8" Height="8"/>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="windows_shared:SkinStorage.EnableTouch" Value="true">
                <Setter Property="Height" Value="13" TargetName="pathButton"/>
                <Setter Property="Width" Value="13" TargetName="pathButton"/>
                <Setter Property="Data" Value="M1,1 L12,12 M1,12 L12,1" TargetName="pathButton"/>
                <Setter Property="StrokeThickness" Value="2.5" TargetName="pathButton"/>

            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter TargetName="brdBack" Property="Background" Value="{DynamicResource ActiveBackgroundBrush}"/>
                <Setter TargetName="brdBack" Property="BorderBrush" Value="{DynamicResource ActiveBorderBrush}"/>
                <Setter TargetName="brdBack" Property="BorderThickness" Value="1"/>
                <Setter TargetName="pathButton" Property="Fill" Value="{DynamicResource ActiveGlyphBrush}" />
                <Setter TargetName="pathButton" Property="Stroke" Value="{DynamicResource ActiveGlyphBrush}" />
            </Trigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition  Property="IsPressed" Value="false"/>
                    <Condition  Property="IsMouseOver" Value="True"/>
                    <Condition Property="windows_shared:SkinStorage.EnableTouch" Value="true"/>
                </MultiTrigger.Conditions>
                <Setter TargetName="brdBack" Property="Background" Value="{DynamicResource HoverBackgroundBrush}"/>
                <Setter TargetName="brdBack" Property="BorderBrush" Value="{DynamicResource HoverBorderBrush}"/>
                <Setter TargetName="pathButton" Property="Stroke" Value="{DynamicResource HoverGlyphBrush}" />
                <Setter TargetName="pathButton" Property="Fill" Value="{DynamicResource HoverGlyphBrush}" />
                <Setter TargetName="brdBack" Property="BorderThickness" Value="1"/>
            </MultiTrigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition  Property="IsPressed" Value="false"/>
                    <Condition  Property="IsMouseOver" Value="True"/>
                    <Condition Property="windows_shared:SkinStorage.EnableTouch" Value="false"/>
                </MultiTrigger.Conditions>
                <Setter TargetName="brdBack" Property="Background" Value="{DynamicResource HoverBackgroundBrush}"/>
                <Setter TargetName="brdBack" Property="BorderBrush" Value="{DynamicResource HoverBorderBrush}"/>
                <Setter TargetName="pathButton" Property="Stroke" Value="{DynamicResource HoverGlyphBrush}" />
                <Setter TargetName="pathButton" Property="Fill" Value="{DynamicResource HoverGlyphBrush}" />
                <Setter TargetName="brdBack" Property="BorderThickness" Value="1"/>
            </MultiTrigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Opacity" Value="0.5"/>
            </Trigger>
        </ControlTemplate.Triggers>

    </ControlTemplate>


    <ControlTemplate x:Key="CloseButtonTemplate" TargetType="{x:Type ToggleButton}">
        <Border x:Name="brdBack" BorderThickness="0"
                BorderBrush="{DynamicResource BorderBrush}">
            <Path Name="pathButton" SnapsToDevicePixels="True"
				Stroke="{DynamicResource GlyphBrush}" Fill="{DynamicResource GlyphBrush}"
				StrokeThickness="0.5"
                Data="M1,1 L7,7 M1,7 L7,1"
				HorizontalAlignment="Center" VerticalAlignment="Center"
				Width="8" Height="8"/>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="windows_shared:SkinStorage.EnableTouch" Value="true">
                <Setter Property="Height" Value="13" TargetName="pathButton"/>
                <Setter Property="Width" Value="13" TargetName="pathButton"/>
                <Setter Property="Data" Value="M1,1 L12,12 M1,12 L12,1" TargetName="pathButton"/>
                <Setter Property="StrokeThickness" Value="2.5" TargetName="pathButton"/>



            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter TargetName="brdBack" Property="Background" Value="{DynamicResource ActiveBackgroundBrush}"/>
                <Setter TargetName="brdBack" Property="BorderBrush" Value="{DynamicResource ActiveBorderBrush}"/>
                <Setter TargetName="brdBack" Property="BorderThickness" Value="1"/>
                <Setter TargetName="pathButton" Property="Fill" Value="{DynamicResource ActiveGlyphBrush}" />
                <Setter TargetName="pathButton" Property="Stroke" Value="{DynamicResource ActiveGlyphBrush}" />
            </Trigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition  Property="IsPressed" Value="false"/>
                    <Condition  Property="IsMouseOver" Value="True"/>
                    <Condition Property="windows_shared:SkinStorage.EnableTouch" Value="true"/>
                </MultiTrigger.Conditions>
				<Setter TargetName="brdBack" Property="Background" Value="{DynamicResource HoverBackgroundBrush}"/>
                <Setter TargetName="brdBack" Property="BorderBrush" Value="{DynamicResource HoverBorderBrush}"/>
                <Setter TargetName="pathButton" Property="Stroke" Value="{DynamicResource HoverGlyphBrush}" />
                <Setter TargetName="pathButton" Property="Fill" Value="{DynamicResource HoverGlyphBrush}" />
                <Setter TargetName="brdBack" Property="BorderThickness" Value="1"/>
            </MultiTrigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition  Property="IsPressed" Value="false"/>
                    <Condition  Property="IsMouseOver" Value="True"/>
                    <Condition Property="windows_shared:SkinStorage.EnableTouch" Value="false"/>
                </MultiTrigger.Conditions>
                <Setter TargetName="brdBack" Property="Background" Value="{DynamicResource HoverBackgroundBrush}"/>
                <Setter TargetName="brdBack" Property="BorderBrush" Value="{DynamicResource HoverBorderBrush}"/>
                <Setter TargetName="pathButton" Property="Stroke" Value="{DynamicResource HoverGlyphBrush}" />
                <Setter TargetName="pathButton" Property="Fill" Value="{DynamicResource HoverGlyphBrush}" />
                <Setter TargetName="brdBack" Property="BorderThickness" Value="1"/>
            </MultiTrigger>
            <DataTrigger Binding="{Binding Path=IsSelected,RelativeSource={RelativeSource AncestorType={x:Type tools_controls:TabItemExt}}}" Value="True">
                <Setter TargetName="pathButton" Property="Stroke" Value="{Binding Path=TabItemSelectedForeground, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type tools_controls:TabControlExt}},FallbackValue=Transparent}"/>
                <Setter TargetName="pathButton" Property="Fill" Value="{Binding Path=TabItemSelectedForeground, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type tools_controls:TabControlExt}},FallbackValue=Transparent}"/>
            </DataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding Path=IsSelected,RelativeSource={RelativeSource AncestorType={x:Type tools_controls:TabItemExt}}}" Value="True"/>
                    <Condition Binding="{Binding Path=IsMouseOver, RelativeSource={RelativeSource Self}}" Value="True"/>
                </MultiDataTrigger.Conditions>
                <Setter TargetName="brdBack" Property="Background" Value="{Binding Path=TabItemSelectedBackground, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type tools_controls:TabControlExt}},FallbackValue=Transparent}"/>
                <Setter TargetName="brdBack" Property="BorderBrush" Value="{Binding Path=TabItemSelectedForeground, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type tools_controls:TabControlExt}},FallbackValue=Transparent}"/>
            </MultiDataTrigger>			
            <Trigger Property="IsEnabled" Value="False">
		          <Setter Property="Opacity" Value="0.5"/>
		        </Trigger>
        </ControlTemplate.Triggers>
		
    </ControlTemplate>

    <ControlTemplate x:Key="PinButtonTemplate" TargetType="{x:Type ToggleButton}">
        <StackPanel HorizontalAlignment="Center" Height="14" Width="15" VerticalAlignment="Center">
            <windows_shared:Border3D x:Name="brdBack" Height="14" Width="15" BorderBrush="Transparent" BorderThickness="1">
                <Canvas x:Name="canvas" Height="14" Width="15">
                    <Rectangle Name="AwlBtnImg" Stroke="{TemplateBinding ToggleButton.Foreground}" StrokeThickness="1" Width="5" Height="7" Canvas.Top="2" Canvas.Left="4" />
                    <Path Name="AwlInnerShadowBtnImg" SnapsToDevicePixels="True" Stroke="{TemplateBinding ToggleButton.Foreground}" Fill="{TemplateBinding ToggleButton.Foreground}" Data="M 7.5 9 L 7.5 2" />
                    <Path Name="AwlLineBtnImg"  Stroke="{TemplateBinding ToggleButton.Foreground}" Fill="{TemplateBinding ToggleButton.Foreground}" Data="M 2 8.5 L 11 8.5" />
                    <Path Name="AwlBottomLineBtnImg" SnapsToDevicePixels="True" Stroke="{TemplateBinding ToggleButton.Foreground}" Fill="{TemplateBinding ToggleButton.Foreground}" Data="M 6.5 9 L 6.5 12" />
                </Canvas>
            </windows_shared:Border3D>
        </StackPanel>

        <ControlTemplate.Triggers>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition  Property="IsPressed" Value="false"/>
                    <Condition  Property="IsMouseOver" Value="True"/>
                    <Condition Property="windows_shared:SkinStorage.EnableTouch" Value="true"/>
                </MultiTrigger.Conditions>
                <Setter TargetName="brdBack" Property="Background" Value="{DynamicResource HoverBackgroundBrush}"/>
                <Setter TargetName="brdBack" Property="BorderBrush" Value="{DynamicResource HoverBorderBrush}"/>
                <Setter TargetName="AwlBtnImg" Property="Stroke" Value="{DynamicResource HoverGlyphBrush}" />
                <Setter TargetName="AwlInnerShadowBtnImg" Property="Stroke" Value="{DynamicResource HoverGlyphBrush}" />
                <Setter TargetName="AwlLineBtnImg" Property="Stroke" Value="{DynamicResource HoverGlyphBrush}" />
                <Setter TargetName="AwlBottomLineBtnImg" Property="Stroke" Value="{DynamicResource HoverGlyphBrush}" />

                <Setter TargetName="AwlBtnImg" Property="Fill" Value="{DynamicResource HoverGlyphBrush}" />
                <Setter TargetName="AwlInnerShadowBtnImg" Property="Fill" Value="{DynamicResource HoverGlyphBrush}" />
                <Setter TargetName="AwlLineBtnImg" Property="Fill" Value="{DynamicResource HoverGlyphBrush}" />
                <Setter TargetName="AwlBottomLineBtnImg" Property="Fill" Value="{DynamicResource HoverGlyphBrush}" />
            </MultiTrigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition  Property="IsPressed" Value="false"/>
                    <Condition  Property="IsMouseOver" Value="True"/>
                    <Condition Property="windows_shared:SkinStorage.EnableTouch" Value="false"/>
                </MultiTrigger.Conditions>
                <Setter TargetName="brdBack" Property="Background" Value="{DynamicResource HoverBackgroundBrush}"/>
                <Setter TargetName="brdBack" Property="BorderBrush" Value="{DynamicResource HoverBorderBrush}"/>
                
                <Setter TargetName="AwlBtnImg" Property="Stroke" Value="{DynamicResource HoverGlyphBrush}" />
                <Setter TargetName="AwlInnerShadowBtnImg" Property="Stroke" Value="{DynamicResource HoverGlyphBrush}" />
                <Setter TargetName="AwlLineBtnImg" Property="Stroke" Value="{DynamicResource HoverGlyphBrush}" />
                <Setter TargetName="AwlBottomLineBtnImg" Property="Stroke" Value="{DynamicResource HoverGlyphBrush}" />

                <Setter TargetName="AwlBtnImg" Property="Fill" Value="{DynamicResource HoverGlyphBrush}" />
                <Setter TargetName="AwlInnerShadowBtnImg" Property="Fill" Value="{DynamicResource HoverGlyphBrush}" />
                <Setter TargetName="AwlLineBtnImg" Property="Fill" Value="{DynamicResource HoverGlyphBrush}" />
                <Setter TargetName="AwlBottomLineBtnImg" Property="Fill" Value="{DynamicResource HoverGlyphBrush}" />
            </MultiTrigger>
            <DataTrigger Binding="{Binding Path=IsSelected, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=tools_controls:TabItemExt}}" Value="True">
                <Setter TargetName="AwlBtnImg" Property="Stroke" Value="{Binding Path=TabItemSelectedForeground, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type tools_controls:TabControlExt}},FallbackValue=Transparent}"/>
                <Setter TargetName="AwlInnerShadowBtnImg" Property="Stroke" Value="{Binding Path=TabItemSelectedForeground, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type tools_controls:TabControlExt}},FallbackValue=Transparent}"/>
                <Setter TargetName="AwlLineBtnImg" Property="Stroke" Value="{Binding Path=TabItemSelectedForeground, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type tools_controls:TabControlExt}},FallbackValue=Transparent}"/>
                <Setter TargetName="AwlBottomLineBtnImg" Property="Stroke" Value="{Binding Path=TabItemSelectedForeground, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type tools_controls:TabControlExt}},FallbackValue=Transparent}"/>
            </DataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding Path=IsSelected, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=tools_controls:TabItemExt}}" Value="True"/>
                    <Condition Binding="{Binding Path=IsMouseOver, RelativeSource={RelativeSource Self}}" Value="True"/>
                </MultiDataTrigger.Conditions>
                <Setter TargetName="brdBack" Property="Background" Value="{Binding Path=TabItemSelectedBackground, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type tools_controls:TabControlExt}},FallbackValue=Transparent}"/>
                <Setter TargetName="brdBack" Property="BorderBrush" Value="{Binding Path=TabItemSelectedForeground, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type tools_controls:TabControlExt}},FallbackValue=Transparent}"/>
            </MultiDataTrigger>
            <Trigger Property="IsChecked" Value="True">
                <Setter Property="RenderTransform">
                    <Setter.Value>
                        <RotateTransform Angle="0" CenterX="7.5" CenterY="7.5" />
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="IsChecked" Value="False">
                <Setter Property="RenderTransform">
                    <Setter.Value>
                        <RotateTransform Angle="90" CenterX="7.5" CenterY="7.5" />
                    </Setter.Value>
                </Setter>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <ControlTemplate x:Key="MenuButtonTemplate" TargetType="{x:Type ToggleButton}">
        <Border x:Name="brdBack" BorderThickness="0"
                BorderBrush="{DynamicResource BorderBrush}">
            <Path Name="pathButton" SnapsToDevicePixels="True"
				Fill="{DynamicResource GlyphBrush}"
				HorizontalAlignment="Center" VerticalAlignment="Center"
				Width="8" Height="8">
                <Path.Data>
                    <GeometryGroup>
                        <PathGeometry>
                            <PathFigure StartPoint="0,1" IsFilled="True" IsClosed="True">
                                <LineSegment Point="8,1"/>
                                <LineSegment Point="8,3"/>
                                <LineSegment Point="0,3"/>
                            </PathFigure>
                        </PathGeometry>
                        <PathGeometry>
                            <PathFigure StartPoint="0,4" IsFilled="True" IsClosed="True">
                                <LineSegment Point="4,8"/>
                                <LineSegment Point="8,4"/>
                            </PathFigure>
                        </PathGeometry>
                    </GeometryGroup>
                </Path.Data>
            </Path>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger Property="windows_shared:SkinStorage.EnableTouch" Value="true">
                <Setter Property="Height" Value="13" TargetName="pathButton"/>
                <Setter Property="Width" Value="13" TargetName="pathButton"/>

                <Setter TargetName="pathButton" Property="Data">
                    <Setter.Value>
                        <GeometryGroup>
                            <PathGeometry>
                                <PathFigure StartPoint="0,1" IsFilled="True" IsClosed="True">
                                    <LineSegment Point="12,1"/>
                                    <LineSegment Point="12,4"/>
                                    <LineSegment Point="0,4"/>
                                </PathFigure>
                            </PathGeometry>
                            <PathGeometry>
                                <PathFigure StartPoint="0,6" IsFilled="True" IsClosed="True">
                                    <LineSegment Point="6,12"/>
                                    <LineSegment Point="12,6"/>
                                </PathFigure>
                            </PathGeometry>
                        </GeometryGroup>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions >
                    <Condition Binding="{Binding Path=IsAllItemsVisible,RelativeSource={RelativeSource TemplatedParent}}" Value="True"/>
                    <Condition Binding="{Binding Path=(windows_shared:SkinStorage.EnableTouch),RelativeSource={RelativeSource AncestorType={x:Type tools_controls:TabControlExt}},FallbackValue=false}" Value="false"/>
                </MultiDataTrigger.Conditions>

                <Setter TargetName="pathButton" Property="Data" Value="M0,4 L4,8 L8,4 z"/>
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions >
                    <Condition Binding="{Binding Path=IsAllItemsVisible,RelativeSource={RelativeSource TemplatedParent}}" Value="True"/>
                    <Condition Binding="{Binding Path=(windows_shared:SkinStorage.EnableTouch),RelativeSource={RelativeSource AncestorType={x:Type tools_controls:TabControlExt}},FallbackValue=false}" Value="true"/>
                </MultiDataTrigger.Conditions>
                <Setter Property="Width" Value="14" TargetName="pathButton"/>
                <Setter TargetName="pathButton" Property="Data" Value="M0,4 L8,12 L14,4 z"/>
            </MultiDataTrigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition  Property="IsPressed" Value="True"/>
                    <Condition Property="windows_shared:SkinStorage.EnableTouch" Value="true"/>
                </MultiTrigger.Conditions>
                <Setter TargetName="brdBack" Property="Background" Value="{DynamicResource ActiveBackgroundBrush}"/>
                <Setter TargetName="brdBack" Property="BorderBrush" Value="{DynamicResource ActiveBorderBrush}"/>
                <Setter TargetName="pathButton" Property="Stroke" Value="{DynamicResource ActiveGlyphBrush}" />
                <Setter TargetName="pathButton" Property="Fill" Value="{DynamicResource ActiveGlyphBrush}" />
                <Setter TargetName="brdBack" Property="BorderThickness" Value="1"/>
            </MultiTrigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition  Property="IsPressed" Value="True"/>
                    <Condition Property="windows_shared:SkinStorage.EnableTouch" Value="false"/>
                </MultiTrigger.Conditions>
                <Setter TargetName="brdBack" Property="Background" Value="{DynamicResource ActiveBackgroundBrush}"/>
                <Setter TargetName="brdBack" Property="BorderBrush" Value="{DynamicResource ActiveBorderBrush}"/>
                <Setter TargetName="pathButton" Property="Stroke" Value="{DynamicResource ActiveGlyphBrush}" />
                <Setter TargetName="pathButton" Property="Fill" Value="{DynamicResource ActiveGlyphBrush}" />
                <Setter TargetName="brdBack" Property="BorderThickness" Value="1"/>
            </MultiTrigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>

                    <Condition  Property="IsPressed" Value="false"/>
                    <Condition  Property="IsMouseOver" Value="True"/>
                    <Condition Property="windows_shared:SkinStorage.EnableTouch" Value="true"/>
                </MultiTrigger.Conditions>
				<Setter TargetName="brdBack" Property="Background" Value="{DynamicResource HoverBackgroundBrush}"/>
                <Setter TargetName="brdBack" Property="BorderBrush" Value="{DynamicResource HoverBorderBrush}"/>
                <Setter TargetName="pathButton" Property="Fill" Value="{DynamicResource HoverGlyphBrush}" />
                <Setter TargetName="pathButton" Property="Stroke" Value="{DynamicResource HoverGlyphBrush}" />
                <Setter TargetName="brdBack" Property="BorderThickness" Value="1"/>
            </MultiTrigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition  Property="IsPressed" Value="false"/>
                    <Condition  Property="IsMouseOver" Value="True"/>
                    <Condition Property="windows_shared:SkinStorage.EnableTouch" Value="false"/>
                </MultiTrigger.Conditions>
                <Setter TargetName="brdBack" Property="Background" Value="{DynamicResource HoverBackgroundBrush}"/>
                <Setter TargetName="brdBack" Property="BorderBrush" Value="{DynamicResource HoverBorderBrush}"/>
                <Setter TargetName="pathButton" Property="Fill" Value="{DynamicResource HoverGlyphBrush}" />
                <!--<Setter TargetName="pathButton" Property="Stroke" Value="{DynamicResource HoverGlyphBrush}" />-->
                <Setter TargetName="brdBack" Property="BorderThickness" Value="1"/>
            </MultiTrigger>
        <Trigger Property="IsEnabled" Value="False">
		    <Setter Property="Opacity" Value="0.5"/>
		</Trigger>
		</ControlTemplate.Triggers>
    </ControlTemplate>

    <Style x:Key="TabScrollingButton" TargetType="{x:Type Button}">
        <Setter Property="Visibility" Value="Collapsed"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <windows_shared:Border3D x:Name="PART_Border" VerticalAlignment="Center" HorizontalAlignment="Center"
				Margin="1,0,0,0"
                Padding="1"
                Width="15"
                Height="15"
                Background="{DynamicResource BackgroundBrush}"
                BorderThickness="1"
                BorderBrush="{DynamicResource BorderBrush}"
				Opacity="{TemplateBinding Opacity}"
				IsEnabled="{TemplateBinding IsEnabled}"
				SnapsToDevicePixels="True"
				CornerRadius="0">
                        <Canvas Width="8" Height="7" x:Name="canvas" VerticalAlignment="Center" HorizontalAlignment="Center" >
                            <Path Data="M0,0L4,3.5 0,7" HorizontalAlignment="Center" Stroke="{DynamicResource GlyphBrush}" Fill="{DynamicResource GlyphBrush}" Name="PART_Path1" VerticalAlignment="Center"/>
                            <Path Data="M4,0L8,3.5 4,7" HorizontalAlignment="Center" Stroke="{DynamicResource GlyphBrush}" Fill="{DynamicResource GlyphBrush}" Name="PART_Path2" VerticalAlignment="Center"/>
                            <Path Data="M5,0L5,7" HorizontalAlignment="Center" Stroke="{DynamicResource GlyphBrush}" Fill="{DynamicResource GlyphBrush}" Name="PART_Path3" VerticalAlignment="Center" Visibility="Collapsed"/>
                        </Canvas>
                    </windows_shared:Border3D>
                    <ControlTemplate.Triggers>
                        <Trigger Property="windows_shared:SkinStorage.EnableTouch" Value="true">
                            <Setter Property="Data" TargetName="PART_Path1" Value="M0,0 L8,6 0,12"/>
                            <Setter Property="Height" TargetName="PART_Border" Value="24"/>
                            <Setter Property="Width" TargetName="PART_Border" Value="24"/>
                            <Setter Property="Data" TargetName="PART_Path2" Value="M4,0L12,6 4,12"/>
                            <Setter Property="Margin" TargetName="canvas" Value="0,0,0,4"/>
                        </Trigger>

                        <MultiTrigger >
                            <MultiTrigger.Conditions>
                                <Condition Property="windows_shared:SkinStorage.EnableTouch" Value="false"/>
                                <Condition Property="Tag" Value="LastTab"/>
                            </MultiTrigger.Conditions>
                            <Setter TargetName="PART_Path2" Property="Visibility" Value="Collapsed"/>
                            <Setter TargetName="PART_Path3" Property="Visibility" Value="Visible"/>
                        </MultiTrigger>
                        <MultiTrigger >
                            <MultiTrigger.Conditions>
                                <Condition Property="windows_shared:SkinStorage.EnableTouch" Value="true"/>
                                <Condition Property="Tag" Value="LastTab"/>
                            </MultiTrigger.Conditions>
                            <Setter TargetName="PART_Path3" Property="Data" Value="M9,0L9,12"/>

                            <Setter TargetName="PART_Path3" Property="StrokeThickness" Value="2"/>
                            <Setter TargetName="PART_Path2" Property="Visibility" Value="Collapsed"/>
                            <Setter TargetName="PART_Path3" Property="Visibility" Value="Visible"/>
                        </MultiTrigger>
                        <MultiTrigger >
                            <MultiTrigger.Conditions>
                                <Condition Property="windows_shared:SkinStorage.EnableTouch" Value="false"/>
                                <Condition Property="Tag" Value="FirstTab"/>
                            </MultiTrigger.Conditions>
                            <Setter TargetName="PART_Path2" Property="Data" Value="M8,0L4,3.5 8,7"/>
                            <Setter TargetName="PART_Path3" Property="Data" Value="M2,0L2,7"/>
                            <Setter TargetName="PART_Path1" Property="Visibility" Value="Collapsed"/>
                            <Setter TargetName="PART_Path3" Property="Visibility" Value="Visible"/>
                        </MultiTrigger>
                        <MultiTrigger >
                            <MultiTrigger.Conditions>
                                <Condition Property="windows_shared:SkinStorage.EnableTouch" Value="true"/>
                                <Condition Property="Tag" Value="FirstTab"/>
                            </MultiTrigger.Conditions>
                            <Setter TargetName="PART_Path2" Property="Data" Value="M12,0L4,5.5 12,11"/>
                            <Setter Property="Margin" TargetName="canvas" Value="0,0,4,5"/>
                            <Setter TargetName="PART_Path3" Property="Data" Value="M2,0L2,12"/>
                            <Setter TargetName="PART_Path3" Property="StrokeThickness" Value="2"/>
                            <Setter TargetName="PART_Path1" Property="Visibility" Value="Collapsed"/>
                            <Setter TargetName="PART_Path3" Property="Visibility" Value="Visible"/>
                        </MultiTrigger>
                        <MultiTrigger >
                            <MultiTrigger.Conditions>
                                <Condition Property="windows_shared:SkinStorage.EnableTouch" Value="false"/>
                                <Condition Property="Tag" Value="PrevPage"/>
                            </MultiTrigger.Conditions>

                            <Setter TargetName="PART_Path1" Property="Data" Value="M4,0L0,3.5 4,7"/>
                            <Setter TargetName="PART_Path2" Property="Data" Value="M8,0L4,3.5 8,7"/>
                        </MultiTrigger>
                        <MultiTrigger >
                            <MultiTrigger.Conditions>
                                <Condition Property="windows_shared:SkinStorage.EnableTouch" Value="true"/>
                                <Condition Property="Tag" Value="PrevPage"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Margin" TargetName="canvas" Value="0,0,4,5"/>

                            <Setter TargetName="PART_Path1" Property="Data" Value="M8,0L0,6 8,11"/>
                            <Setter TargetName="PART_Path2" Property="Data" Value="M12,0L4,6 12,11"/>
                        </MultiTrigger>
                        <MultiTrigger >
                            <MultiTrigger.Conditions>
                                <Condition Property="windows_shared:SkinStorage.EnableTouch" Value="true"/>
                                <Condition Property="Tag" Value="NextPage"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Margin" TargetName="canvas" Value="0,0,4,5"/>
                        </MultiTrigger>
                        <MultiTrigger >
                            <MultiTrigger.Conditions>
                                <Condition Property="windows_shared:SkinStorage.EnableTouch" Value="false"/>
                                <Condition Property="Tag" Value="PrevTab"/>
                            </MultiTrigger.Conditions>


                            <Setter TargetName="PART_Path1" Property="Data" Value="M4,0L0,4 4,8"/>
                            <Setter TargetName="PART_Path2" Property="Visibility" Value="Collapsed"/>
                        </MultiTrigger>
                        <MultiTrigger >
                            <MultiTrigger.Conditions>
                                <Condition Property="windows_shared:SkinStorage.EnableTouch" Value="true"/>
                                <Condition Property="Tag" Value="PrevTab"/>
                            </MultiTrigger.Conditions>


                            <Setter TargetName="PART_Path1" Property="Data" Value="M8,0L0,6 8,12"/>
                            <Setter TargetName="PART_Path2" Property="Visibility" Value="Collapsed"/>
                        </MultiTrigger>
                        <Trigger Property="Tag" Value="NextTab">
                            <Setter TargetName="PART_Path2" Property="Visibility" Value="Collapsed"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="PART_Border" Property="IsInverted" Value="True"/>
                            <Setter Property="Content" Value="1,1,-1,-1"/>
                            <Setter Property="Background" TargetName="PART_Border" Value="{DynamicResource ActiveBackgroundBrush}"/>
                            <Setter Property="BorderBrush" TargetName="PART_Border" Value="{DynamicResource ActiveBorderBrush}"/>
                            <Setter Property="Stroke" TargetName="PART_Path1" Value="{DynamicResource ActiveGlyphBrush}"/>
                            <Setter Property="Fill" TargetName="PART_Path1" Value="{DynamicResource ActiveGlyphBrush}"/>
                            <Setter Property="Stroke" TargetName="PART_Path2" Value="{DynamicResource ActiveGlyphBrush}"/>
                            <Setter Property="Fill" TargetName="PART_Path2" Value="{DynamicResource ActiveGlyphBrush}"/>
                            <Setter Property="Stroke" TargetName="PART_Path3" Value="{DynamicResource ActiveGlyphBrush}"/>
                            <Setter Property="Fill" TargetName="PART_Path3" Value="{DynamicResource ActiveGlyphBrush}"/>
                        </Trigger>
                        <MultiTrigger >
                            <MultiTrigger.Conditions>
                                <Condition Property="windows_shared:SkinStorage.EnableTouch" Value="true"/>
                                <Condition Property="IsMouseOver" Value="True"/>
                            </MultiTrigger.Conditions>
							<Setter Property="Background" TargetName="PART_Border" Value="{DynamicResource HoverBackgroundBrush}"/>
                            <Setter Property="BorderBrush" TargetName="PART_Border" Value="{DynamicResource HoverBorderBrush}"/>
                            <Setter Property="Stroke" TargetName="PART_Path1" Value="{DynamicResource HoverGlyphBrush}"/>
                            <Setter Property="Fill" TargetName="PART_Path1" Value="{DynamicResource HoverGlyphBrush}"/>
                            <Setter Property="Stroke" TargetName="PART_Path2" Value="{DynamicResource HoverGlyphBrush}"/>
                            <Setter Property="Fill" TargetName="PART_Path2" Value="{DynamicResource HoverGlyphBrush}"/>
                            <Setter Property="Stroke" TargetName="PART_Path3" Value="{DynamicResource HoverGlyphBrush}"/>
                            <Setter Property="Fill" TargetName="PART_Path3" Value="{DynamicResource HoverGlyphBrush}"/>
                        </MultiTrigger>

                        <MultiTrigger >
                            <MultiTrigger.Conditions>
                                <Condition Property="windows_shared:SkinStorage.EnableTouch" Value="false"/>
                                <Condition Property="IsMouseOver" Value="True"/>
                            </MultiTrigger.Conditions>
                         	<Setter Property="Background" TargetName="PART_Border" Value="{DynamicResource HoverBackgroundBrush}"/>
                            <Setter Property="BorderBrush" TargetName="PART_Border" Value="{DynamicResource BorderBrush}"/>
                            <Setter Property="Stroke" TargetName="PART_Path1" Value="{DynamicResource HoverBackgroundBrush}"/>
                            <Setter Property="Fill" TargetName="PART_Path1" Value="{DynamicResource HoverBackgroundBrush}"/>
                            <Setter Property="Stroke" TargetName="PART_Path2" Value="{DynamicResource HoverBackgroundBrush}"/>
                            <Setter Property="Fill" TargetName="PART_Path2" Value="{DynamicResource HoverBackgroundBrush}"/>
                            <Setter Property="Stroke" TargetName="PART_Path3" Value="{DynamicResource HoverBackgroundBrush}"/>
                            <Setter Property="Fill" TargetName="PART_Path3" Value="{DynamicResource HoverBackgroundBrush}"/>
                        </MultiTrigger>
						    <Trigger Property="IsEnabled" Value="False">
						      <Setter Property="Opacity" Value="0.5"/>
						    </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="TabPanelAdvStyle" TargetType="{x:Type tools_controls:TabPanelAdv}">
        <Setter Property="Padding" Value="0,0,0,0"/>
        <Setter Property="Margin" Value="2,2,4,1"/>
        <Setter Property="SnapsToDevicePixels" Value="True"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type tools_controls:TabPanelAdv}">
                    <Border Name="Bord" Background="{Binding  TabPanelBackground,RelativeSource={RelativeSource FindAncestor,AncestorType={x:Type tools_controls:TabControlExt}},FallbackValue=Transparent}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
							Padding="{TemplateBinding Padding}"
                            Margin="{TemplateBinding Margin}"
							CornerRadius="{TemplateBinding CornerRadius}"
                            HorizontalAlignment="Stretch" VerticalAlignment="Top">

                        <DockPanel LastChildFill="True">
                            <Border Name="BottomBorder" Height="0" DockPanel.Dock="Bottom" Background="{DynamicResource BackgroundBrush}" />


                            <ContentPresenter x:Name="PART_CustomItems"  AllowDrop="False" ContentSource="TabPanelItem"
                                              MaxHeight="{Binding Path=ActualHeight, ElementName=PART_TabItems}" Margin="2,0,0,0" DockPanel.Dock="Right" 
                                              Content="{Binding Path=TabPanelItem, Mode=OneWay, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type tools_controls:TabControlExt}},FallbackValue=''}">

                            </ContentPresenter>
                            <tools_controls:NewTabLayout>
                                <ContentPresenter x:Name="PART_ToolBarTray" Content="{Binding Path=ToolBarTray, Mode=OneWay, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type tools_controls:TabControlExt}},FallbackValue=''}" />
                                <tools_controls:TabItemExt BorderThickness="80" Name="PART_NewTab" DockPanel.Dock="Top" IsNewTab="True" />
                            </tools_controls:NewTabLayout>
                            <ToggleButton Name="PART_CloseButton" Width="14" Height="14" 
                                  DockPanel.Dock="Right"
                                  Focusable="False" 
                                  AllowDrop="False"
                                  Visibility="{Binding Path=CloseButtonType, Converter={StaticResource TabControlExtCloseButtonTypeToVisibilityConverter}, Mode=OneWay, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type tools_controls:TabControlExt}},FallbackValue=Collapsed}"
							      Template="{StaticResource CloseButtonTemplate}"
                                  Command="tools_controls:TabControlCommands.CloseCurrentTabItem"  >
                                <ToggleButton.ToolTip>
                                    <ToolTip Name="tooltip" >
                                        <TextBlock Name="tooltipText"  Text="{Binding Source={StaticResource ResourceWrapperKey_Tab}, Path=CloseButtonTooltipText}"/>
                                    </ToolTip>
                                </ToggleButton.ToolTip>
                            </ToggleButton>

                            <ToggleButton Name="PART_MenuButton" Width="14" Height="14" 
                                  DockPanel.Dock="Right"
                                  AllowDrop="False"
                                  Focusable="False"
                                  Visibility="{Binding Path=ShowTabListContextMenu, Converter={StaticResource TabControlExtBooleanToVisibilityConverterEx}, Mode=OneWay, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type tools_controls:TabControlExt}},FallbackValue=Collapsed}"
							      Template="{StaticResource MenuButtonTemplate}"
                                  Command="tools_controls:TabControlCommands.OpenContextMenu"
                                  >
                                <ToggleButton.ToolTip>
                                    <ToolTip Name="PART_ContextMenuButtonTooltip" >
                                        <TextBlock Name="PART_ContextMenuButtonTooltipText"   Text="{Binding Source={StaticResource ResourceWrapperKey_Tab}, Path=ContextMenuButtonTooltipText}" />
                                    </ToolTip>
                                </ToggleButton.ToolTip>
                            </ToggleButton>

                            <Button Name="PART_LastTab" Focusable="False" DockPanel.Dock="Right" Tag="LastTab" Visibility="Collapsed" Style="{StaticResource TabScrollingButton}"/>
                            <Button Name="PART_NextTab" Focusable="False" DockPanel.Dock="Right" Tag="NextTab" Visibility="Collapsed" Style="{StaticResource TabScrollingButton}"/>
                            <Button Name="PART_PrevTab" Focusable="False" DockPanel.Dock="Right" Tag="PrevTab" Visibility="Collapsed" Style="{StaticResource TabScrollingButton}"/>
                            <Button Name="PART_NextPage" Focusable="False" DockPanel.Dock="Right" Tag="NextPage" Visibility="Collapsed" Style="{StaticResource TabScrollingButton}"/>
                            <Button Name="PART_PrevPage" Focusable="False" DockPanel.Dock="Right" Tag="PrevPage" Visibility="Collapsed" Style="{StaticResource TabScrollingButton}"/>
                            <Button Name="PART_FirstTab" Focusable="False" DockPanel.Dock="Right" Tag="FirstTab" Visibility="Collapsed" Style="{StaticResource TabScrollingButton}"/>
                            
                            <ContentPresenter x:Name="PART_TabItems" ContentSource="TabItems" 
                                              DockPanel.Dock="Right" Margin="0,0,0,-1"
                                              Content="{TemplateBinding Content}"/>
                        </DockPanel>
                    </Border>
                    <ControlTemplate.Triggers>
					    <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value="0.5"/>
                        </Trigger>
                        <Trigger Property="windows_shared:SkinStorage.EnableTouch" Value="true">
                            <Setter Property="Height" TargetName="PART_MenuButton" Value="24"/>
                            <Setter Property="Width" TargetName="PART_MenuButton" Value="24"/>
                            <Setter Property="Height" TargetName="PART_CloseButton" Value="24"/>
                            <Setter Property="Width" TargetName="PART_CloseButton" Value="24"/>
                        </Trigger>
                        <DataTrigger Binding="{Binding Path=TabStripPlacement,RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type TabControl}},FallbackValue=Top}" Value="Bottom">
                            <Setter Property="LayoutTransform" TargetName="PART_CustomItems">
                                <Setter.Value>
                                    <RotateTransform Angle="-180"/>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="LayoutTransform" TargetName="PART_CloseButton">
                                <Setter.Value>
                                    <RotateTransform Angle="-180"/>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="LayoutTransform" TargetName="PART_MenuButton">
                                <Setter.Value>
                                    <RotateTransform Angle="-180"/>
                                </Setter.Value>
                            </Setter>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Path=IsAllTabsClosed,RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type tools_controls:TabControlExt}},FallbackValue=false}" Value="True">
                            <Setter TargetName="PART_CloseButton" Property="Visibility" Value="Hidden"/>
                            <Setter TargetName="PART_MenuButton" Property="Visibility" Value="Hidden"/>
                            <Setter TargetName="BottomBorder" Property="Height" Value="0"/>
                        </DataTrigger>
			<MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding Path=Items.Count,RelativeSource={RelativeSource FindAncestor,AncestorType={x:Type tools_controls:TabControlExt}},FallbackValue=0}" Value="1" />
                                <Condition Binding="{Binding Path=HideHeaderOnSingleChild,RelativeSource={RelativeSource FindAncestor,AncestorType={x:Type tools_controls:TabControlExt}}}" Value="True" />
                                <Condition Binding="{Binding Path=ShowTabListContextMenu,RelativeSource={RelativeSource FindAncestor,AncestorType={x:Type tools_controls:TabControlExt}}}" Value="False" />
                                <Condition Binding="{Binding ElementName=PART_CloseButton, Path=Visibility}"  Value="Collapsed"/>
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="Bord" Property="Visibility" Value="Collapsed"/>
                        </MultiDataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="VS2008DragMarkerStyle" TargetType="{x:Type windows_shared:TemplatedAdornerInternalControl}">
        <Setter Property="MinWidth" Value="15"/>
        <Setter Property="MinHeight" Value="15"/>
        <Setter Property="HorizontalAlignment" Value="Left"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="SnapsToDevicePixels" Value="False"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type windows_shared:TemplatedAdornerInternalControl}">
                    <DockPanel x:Name="PART_DockPanel" Height="{Binding Path=MinHeight,RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type tools_controls:DragMarkerAdorner}}}" LastChildFill="True">
                        <Canvas x:Name="PART_Top" HorizontalAlignment="Left" VerticalAlignment="Top" Height="2" Width="5" DockPanel.Dock="Top">
                            <Path Data="M0,0L2.5,3 5,0L0,0L2.5,3" Fill="{Binding Path=MarkerColor,RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type tools_controls:DragMarkerAdorner}}}" Stroke="{Binding Path=MarkerColor,RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type tools_controls:DragMarkerAdorner}}}"/>
                        </Canvas>
                        <Border x:Name="PART_Center" MinHeight="{Binding Path=ActualHeight, ElementName=PART_DockPanel}" VerticalAlignment="Top" Margin="2,0,-3,0" HorizontalAlignment="Center" BorderThickness="1,0,0,0" BorderBrush="{Binding Path=MarkerColor,RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type tools_controls:DragMarkerAdorner}}}">
                        </Border>
                        <Canvas x:Name="PART_Bottom" Height="2" Width="5" HorizontalAlignment="Left" VerticalAlignment="Bottom" DockPanel.Dock="Bottom">
                            <Path Data="M0,3L2.5,0 5,3L0,3L2.5,0" Fill="{Binding Path=MarkerColor,RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type tools_controls:DragMarkerAdorner}}}" Stroke="{Binding Path=MarkerColor,RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type tools_controls:DragMarkerAdorner}}}"/>
                        </Canvas>
                    </DockPanel>
                    <ControlTemplate.Triggers>
					  <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value="0.5"/>
                        </Trigger>
                        <!--Top-->
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding Path=TabStripPlacement,RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type tools_controls:DragMarkerAdorner}},FallbackValue=Top}" Value="Top"/>
                                <Condition Binding="{Binding Path=AdornerAlignment,RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type tools_controls:DragMarkerAdorner}}}" Value="LeftSide"/>
                            </MultiDataTrigger.Conditions>
                            <Setter Property="RenderTransform" TargetName="PART_Top">
                                <Setter.Value>
                                    <TranslateTransform X="6" Y="-3"/>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="RenderTransform" TargetName="PART_Center">
                                <Setter.Value>
                                    <TranslateTransform Y="-3" X="8"/>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="RenderTransform" TargetName="PART_Bottom" >
                                <Setter.Value>
                                    <TranslateTransform X="0"/>
                                </Setter.Value>
                            </Setter>
                        </MultiDataTrigger>

                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding Path=TabStripPlacement,RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type tools_controls:DragMarkerAdorner}},FallbackValue=Top}" Value="Top"/>
                                <Condition Binding="{Binding Path=AdornerAlignment,RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type tools_controls:DragMarkerAdorner}}}" Value="RightSide"/>
                            </MultiDataTrigger.Conditions>
                            <Setter Property="RenderTransform" TargetName="PART_Top">
                                <Setter.Value>
                                    <TranslateTransform X="-3.5" Y="-3"/>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="RenderTransform" TargetName="PART_Center">
                                <Setter.Value>
                                    <TranslateTransform X="-1.5" Y="-2"/>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="RenderTransform" TargetName="PART_Bottom">
                                <Setter.Value>
                                    <TranslateTransform X="-4.5"/>
                                </Setter.Value>
                            </Setter>
                        </MultiDataTrigger>
                        <!--End Top-->

                        <!--Bottom-->
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding Path=TabStripPlacement,RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type tools_controls:DragMarkerAdorner}},FallbackValue=Top}" Value="Bottom"/>
                                <Condition Binding="{Binding Path=AdornerAlignment,RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type tools_controls:DragMarkerAdorner}}}" Value="LeftSide"/>
                            </MultiDataTrigger.Conditions>
                            <Setter Property="RenderTransform" TargetName="PART_Top">
                                <Setter.Value>
                                    <TranslateTransform X="8.5" Y="-2"/>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="RenderTransform" TargetName="PART_Center">
                                <Setter.Value>
                                    <TranslateTransform Y="-2" X="10.5"/>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="RenderTransform" TargetName="PART_Bottom">
                                <Setter.Value>
                                    <TranslateTransform X="7.5"/>
                                </Setter.Value>
                            </Setter>
                        </MultiDataTrigger>

                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding Path=TabStripPlacement,RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type tools_controls:DragMarkerAdorner}},FallbackValue=Top}" Value="Bottom"/>
                                <Condition Binding="{Binding Path=AdornerAlignment,RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type tools_controls:DragMarkerAdorner}}}" Value="RightSide"/>
                            </MultiDataTrigger.Conditions>
                            <Setter Property="RenderTransform" TargetName="PART_Top">
                                <Setter.Value>
                                    <TranslateTransform X="-3" Y="-2"/>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="RenderTransform" TargetName="PART_Center">
                                <Setter.Value>
                                    <TranslateTransform X="-1" Y="-2"/>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="RenderTransform" TargetName="PART_Bottom">
                                <Setter.Value>
                                    <TranslateTransform X="-4"/>
                                </Setter.Value>
                            </Setter>
                        </MultiDataTrigger>
                        <!--End Bottom-->

                        <!--Left-->
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding Path=TabStripPlacement,RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type tools_controls:DragMarkerAdorner}},FallbackValue=Top}" Value="Left"/>
                                <Condition Binding="{Binding Path=AdornerAlignment,RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type tools_controls:DragMarkerAdorner}}}" Value="RightSide"/>
                            </MultiDataTrigger.Conditions>
                            <Setter Property="RenderTransform" TargetName="PART_Top">
                                <Setter.Value>
                                    <TranslateTransform X="-2" Y="-3"/>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="RenderTransform" TargetName="PART_Center">
                                <Setter.Value>
                                    <TranslateTransform X="0" Y="-3"/>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="RenderTransform" TargetName="PART_Bottom">
                                <Setter.Value>
                                    <TranslateTransform X="-3" Y="0"/>
                                </Setter.Value>
                            </Setter>
                        </MultiDataTrigger>

                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding Path=TabStripPlacement,RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type tools_controls:DragMarkerAdorner}},FallbackValue=Top}" Value="Left"/>
                                <Condition Binding="{Binding Path=AdornerAlignment,RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type tools_controls:DragMarkerAdorner}}}" Value="LeftSide"/>
                            </MultiDataTrigger.Conditions>
                            <Setter Property="RenderTransform" TargetName="PART_Top">
                                <Setter.Value>
                                    <TranslateTransform X="9" Y="-3"/>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="RenderTransform" TargetName="PART_Center">
                                <Setter.Value>
                                    <TranslateTransform X="11" Y="-3"/>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="RenderTransform" TargetName="PART_Bottom">
                                <Setter.Value>
                                    <TranslateTransform X="8"/>
                                </Setter.Value>
                            </Setter>
                        </MultiDataTrigger>
                        <!--End Left-->

                        <!--Right-->
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding Path=TabStripPlacement,RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type tools_controls:DragMarkerAdorner}},FallbackValue=Top}" Value="Right"/>
                                <Condition Binding="{Binding Path=AdornerAlignment,RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type tools_controls:DragMarkerAdorner}}}" Value="RightSide"/>
                            </MultiDataTrigger.Conditions>
                            <Setter Property="RenderTransform" TargetName="PART_Top">
                                <Setter.Value>
                                    <TranslateTransform X="-3" Y="-3"/>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="RenderTransform" TargetName="PART_Center">
                                <Setter.Value>
                                    <TranslateTransform X="-1" Y="-3"/>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="RenderTransform" TargetName="PART_Bottom">
                                <Setter.Value>
                                    <TranslateTransform X="-4" Y="0"/>
                                </Setter.Value>
                            </Setter>
                        </MultiDataTrigger>

                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding Path=TabStripPlacement,RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type tools_controls:DragMarkerAdorner}},FallbackValue=Top}" Value="Right"/>
                                <Condition Binding="{Binding Path=AdornerAlignment,RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type tools_controls:DragMarkerAdorner}}}" Value="LeftSide"/>
                            </MultiDataTrigger.Conditions>
                            <Setter Property="RenderTransform" TargetName="PART_Top">
                                <Setter.Value>
                                    <TranslateTransform X="6.5" Y="-3"/>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="RenderTransform" TargetName="PART_Center">
                                <Setter.Value>
                                    <TranslateTransform X="8.5" Y="-3"/>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="RenderTransform" TargetName="PART_Bottom">
                                <Setter.Value>
                                    <TranslateTransform X="5.5"/>
                                </Setter.Value>
                            </Setter>
                        </MultiDataTrigger>
                        <!--End Right-->
                        <!--RotateTextWhenVertical = true-->
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding Path=RotateTextWhenVertical,RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type tools_controls:DragMarkerAdorner}},FallbackValue=false}" Value="True"/>
                                <Condition Binding="{Binding Path=AdornerAlignment,RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type tools_controls:DragMarkerAdorner}}}" Value="RightSide"/>
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="PART_DockPanel" Property="Height" Value="{Binding Path=MinWidth,RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type tools_controls:DragMarkerAdorner}}}"/>
                            <Setter Property="LayoutTransform" TargetName="PART_DockPanel">
                                <Setter.Value>
                                    <RotateTransform Angle="90"/>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="RenderTransform" TargetName="PART_Top">
                                <Setter.Value>
                                    <TranslateTransform X="-6" Y="0"/>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="RenderTransform" TargetName="PART_Center">
                                <Setter.Value>
                                    <TranslateTransform X="-4" Y="0"/>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="RenderTransform" TargetName="PART_Bottom">
                                <Setter.Value>
                                    <TranslateTransform X="-7" Y="3"/>
                                </Setter.Value>
                            </Setter>
                        </MultiDataTrigger>

                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding Path=RotateTextWhenVertical,RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type tools_controls:DragMarkerAdorner}},FallbackValue=false}" Value="True"/>
                                <Condition Binding="{Binding Path=AdornerAlignment,RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type tools_controls:DragMarkerAdorner}}}" Value="LeftSide"/>
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="PART_DockPanel" Property="Height" Value="{Binding Path=MinWidth,RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type tools_controls:DragMarkerAdorner}}}"/>
                            <Setter Property="LayoutTransform" TargetName="PART_DockPanel">
                                <Setter.Value>
                                    <RotateTransform Angle="90"/>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="RenderTransform" TargetName="PART_Top">
                                <Setter.Value>
                                    <TranslateTransform X="-4" Y="0"/>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="RenderTransform" TargetName="PART_Center">
                                <Setter.Value>
                                    <TranslateTransform X="0" Y="0"/>
                                </Setter.Value>
                            </Setter>
                            <Setter Property="RenderTransform" TargetName="PART_Bottom">
                                <Setter.Value>
                                    <TranslateTransform X="-4" Y="3"/>
                                </Setter.Value>
                            </Setter>
                        </MultiDataTrigger>
                        <!--End Right-->
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <sys:Double x:Key="TabControlExtNanValue">
        NaN
    </sys:Double>
    <ControlTemplate x:Key="TabControlSeparatorTemplate">
        <Border Background="{TemplateBinding Background}">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="26" />
                    <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>
                <Border Name="lineBorder" Height="{TemplateBinding BorderThickness}" 
                        BorderThickness="{TemplateBinding BorderThickness}" 
						Grid.Column="1" Margin="2"                        
                        BorderBrush="{TemplateBinding BorderBrush}" />
            </Grid>
        </Border>
    </ControlTemplate>
    <ControlTemplate x:Key="TabControlCustomMenuItemTemplate"
                     TargetType="MenuItem">
        <Grid SnapsToDevicePixels="true" x:Name="MainGrid">
            <Rectangle Name="Bg"
                       Fill="{TemplateBinding MenuItem.Background}"
                       Stroke="{TemplateBinding MenuItem.BorderBrush}"
                       StrokeThickness="1"
                       RadiusX="2"
                       RadiusY="2"/>
            <Rectangle x:Name="InnerBorder"
                       Margin="1"
                       RadiusX="2"
                       RadiusY="2"/>
            <Rectangle Height="0" Fill="{DynamicResource BackgroundBrush}"  x:Name="BottomBorder" VerticalAlignment="Bottom" Margin="-2,0,-2,0"/>
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition MinWidth="24"
                                      Width="Auto"
                                      SharedSizeGroup="MenuItemIconColumnGroup"/>
                    <ColumnDefinition Width="4"/>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="37"/>
                    <ColumnDefinition Width="Auto"
                                      SharedSizeGroup="MenuItemIGTColumnGroup"/>
                    <ColumnDefinition Width="17"/>
                </Grid.ColumnDefinitions>
                <ContentPresenter x:Name="Icon"
                                  Margin="1"
                                  VerticalAlignment="Center"
                                  ContentSource="Icon"
                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                <Border x:Name="GlyphPanel"
                        Background="{DynamicResource BackgroundBrush}"
                        BorderBrush="{DynamicResource BorderBrush}"
                        BorderThickness="1"
                        CornerRadius="3"
                        Margin="1"
                        Visibility="Hidden"
                        Width="22" 
                        Height="22">
                    <Path Name="Glyph"
                          Width="9"
                          Height="11"
                          Fill="{DynamicResource GlyphBrush}"
                          FlowDirection="LeftToRight"
                          Data="{StaticResource Checkmark_Tab}"/>
                </Border>
                <ContentPresenter Grid.Column="2"
                                  ContentSource="Header"
                                  Margin="{TemplateBinding MenuItem.Padding}"
                                  RecognizesAccessKey="True"
                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                <TextBlock Grid.Column="4"
                           Text="{TemplateBinding MenuItem.InputGestureText}"
                           Margin="{TemplateBinding MenuItem.Padding}"/>
            </Grid>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="windows_shared:SkinStorage.EnableTouch" Value="true">
                <Setter Property="FontSize" Value="18"/>
                <Setter Property="Fill" TargetName ="BottomBorder" Value="{DynamicResource BorderBrush}"/>
                <Setter Property="Margin" TargetName="Icon" Value="10,0,0,0"/>
            </Trigger>
            <Trigger Property="Icon"
                     Value="{x:Null}">
                <Setter TargetName="Icon"
                        Property="Visibility"
                        Value="Collapsed"/>
            </Trigger>
            <Trigger Property="IsChecked"
                     Value="true">
                <Setter TargetName="GlyphPanel"
                        Property="Visibility"
                        Value="Visible"/>
                <Setter TargetName="Icon"
                        Property="Visibility"
                        Value="Collapsed"/>
            </Trigger>
            <MultiTrigger >
                <MultiTrigger.Conditions>
                    <Condition Property="IsHighlighted"
                     Value="true"/>
                    <Condition Property="windows_shared:SkinStorage.EnableTouch" Value="false"/>
                </MultiTrigger.Conditions>
                <Setter TargetName="Bg"
                        Property="Fill"
                        Value="{DynamicResource HoverBackgroundBrush}"/>
                <Setter TargetName="Bg"
                        Property="Stroke"
                        Value="{DynamicResource HoverBackgroundBrush}"/>
                <Setter TargetName="InnerBorder"
                        Property="Stroke"
                        Value="{DynamicResource HoverBackgroundBrush}"/>
                <Setter Property="Foreground"
                Value="{DynamicResource HoverForegroundBrush}"/>
            </MultiTrigger>
            <MultiTrigger >
                <MultiTrigger.Conditions>
                    <Condition Property="IsHighlighted"
                     Value="true"/>
                    <Condition Property="windows_shared:SkinStorage.EnableTouch" Value="true"/>
                </MultiTrigger.Conditions>
                <Setter TargetName="Bg"
                        Property="Fill"
                        Value="{DynamicResource HoverBackgroundBrush}"/>
                <Setter TargetName="Bg"
                        Property="Stroke"
                        Value="{DynamicResource HoverBackgroundBrush}"/>
                <Setter TargetName="InnerBorder"
                        Property="Stroke"
                        Value="{DynamicResource HoverBackgroundBrush}"/>
                <Setter Property="Foreground"
                Value="{DynamicResource HoverForegroundBrush}"/>

            </MultiTrigger>
            <MultiTrigger >
                <MultiTrigger.Conditions>
                    <Condition Property="IsPressed"
                     Value="true"/>
                    <Condition Property="windows_shared:SkinStorage.EnableTouch" Value="true"/>
                </MultiTrigger.Conditions>
                <Setter TargetName="MainGrid"
                        Property="Background"
                        Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                <Setter Property="Foreground"
                        Value="{DynamicResource ActiveForegroundBrush}"/>
            </MultiTrigger>
            <Trigger Property="IsEnabled"
                     Value="False">
                <Setter Property="Foreground"
                        Value="{DynamicResource ForegroundBrush}"/>
                <Setter Property="Opacity"
                        Value="0.5"/>
                <Setter TargetName="GlyphPanel"
                        Property="Background"
                        Value="{DynamicResource BackgroundBrush}"/>
                <Setter TargetName="GlyphPanel"
                        Property="BorderBrush"
                        Value="{DynamicResource BorderBrush}"/>
                <Setter TargetName="Glyph"
                        Property="Fill"
                        Value="{DynamicResource GlyphBrush}"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <Style TargetType="MenuItem" x:Key="CustomMenuItem">
        <Setter Property="HorizontalContentAlignment"
                Value="{Binding Path=HorizontalContentAlignment,RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}},FallbackValue=Stretch}"/>
        <Setter Property="VerticalContentAlignment"
                Value="{Binding Path=VerticalContentAlignment,RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}},FallbackValue=Stretch}"/>
        <Setter Property="Background"
                Value="{DynamicResource ContentBackgroundBrush}"/>
        <Setter Property="Foreground"
                Value="{DynamicResource ContentForegroundBrush}"/>
        <Setter Property="Template" Value="{DynamicResource TabControlCustomMenuItemTemplate}"/>
        <Style.Triggers>
            <Trigger Property="Role"
                     Value="TopLevelItem">
                <Setter Property="Padding"
                        Value="7,2,8,3"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate 
                     TargetType="MenuItem">
                            <Grid SnapsToDevicePixels="true">
                                <Rectangle x:Name="OuterBorder"
                       RadiusX="2"
                       RadiusY="2"/>
                                <Rectangle Name="Bg"
                       Margin="1"
                       Fill="{TemplateBinding MenuItem.Background}"
                       Stroke="{TemplateBinding MenuItem.BorderBrush}"
                       StrokeThickness="1"
                       RadiusX="1"
                       RadiusY="1"/>
                                <Rectangle x:Name="InnerBorder"
                       Margin="2"/>
                                <DockPanel>
                                    <ContentPresenter x:Name="Icon"
                                  Margin="4,0,6,0"
                                  VerticalAlignment="Center"
                                  ContentSource="Icon"
                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                    <Path x:Name="GlyphPanel"
                      Margin="7,0,0,0"
                      Visibility="Collapsed"
                      VerticalAlignment="Center"
                      Fill="{DynamicResource GlyphBrush}"
                      FlowDirection="LeftToRight"
                      Data="{StaticResource Checkmark_Tab}"/>
                                    <ContentPresenter ContentSource="Header"
                                  Margin="{TemplateBinding MenuItem.Padding}"
                                  RecognizesAccessKey="True"
                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                </DockPanel>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="Icon"
                     Value="{x:Null}">
                                    <Setter TargetName="Icon"
                        Property="Visibility"
                        Value="Collapsed"/>
                                </Trigger>
                                <Trigger Property="IsChecked"
                     Value="true">
                                    <Setter TargetName="GlyphPanel"
                        Property="Visibility"
                        Value="Visible"/>
                                    <Setter TargetName="Icon"
                        Property="Visibility"
                        Value="Collapsed"/>
                                </Trigger>
                                <Trigger Property="IsHighlighted"
                     Value="true">
                                    <Setter TargetName="Bg"
                        Property="Stroke"
                        Value="{DynamicResource HoverBackgroundBrush}"/>
                                    <Setter TargetName="OuterBorder"
                        Property="Stroke"
                        Value="{DynamicResource HoverBorderBrush}"/>
                                    <Setter TargetName="InnerBorder"
                        Property="Stroke"
                        Value="{DynamicResource HoverBorderBrush}"/>
                                    <Setter Property="Foreground"
                Value="{DynamicResource HoverForegroundBrush}"/>

                                </Trigger>
                                <Trigger Property="IsKeyboardFocused"
                     Value="true">
                                    <Setter TargetName="Bg"
                        Property="Stroke"
                        Value="{DynamicResource ActiveBorderBrush}"/>
                                    <Setter TargetName="Bg"
                        Property="Fill"
                        Value="{DynamicResource ActiveBackgroundBrush}"/>
                                    <Setter TargetName="InnerBorder"
                        Property="Stroke"
                        Value="{DynamicResource ActiveBorderBrush}"/>
                                </Trigger>
                                <Trigger Property="IsEnabled"
                     Value="false">
					 <Setter Property="Opacity"
                        Value="0.5"/>
                                    <Setter Property="Foreground"
                        Value="{DynamicResource ForegroundBrush}"/>
                                    <Setter TargetName="GlyphPanel"
                        Property="Fill"
                        Value="{DynamicResource BackgroundBrush}"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="Role"
                     Value="SubmenuHeader">
                <Setter Property="Padding"
                        Value="8,3,8,3"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate 
                     TargetType="MenuItem">
                            <Grid SnapsToDevicePixels="true">
                                <Rectangle Name="Bg"
                       Fill="{TemplateBinding MenuItem.Background}"
                       Stroke="{TemplateBinding MenuItem.BorderBrush}"
                       StrokeThickness="1"
                       RadiusX="2"
                       RadiusY="2"/>
                                <Rectangle x:Name="InnerBorder"
                       Margin="1"
                       Stroke="{DynamicResource BackgroundBrush}"
                       StrokeThickness="1"
                       RadiusX="2"
                       RadiusY="2"/>
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition MinWidth="24"
                                      Width="Auto"
                                      SharedSizeGroup="MenuItemIconColumnGroup"/>
                                        <ColumnDefinition Width="4"/>
                                        <ColumnDefinition Width="*"/>
                                        <ColumnDefinition Width="37"/>
                                        <ColumnDefinition Width="Auto"
                                      SharedSizeGroup="MenuItemIGTColumnGroup"/>
                                        <ColumnDefinition Width="17"/>
                                    </Grid.ColumnDefinitions>
                                    <ContentPresenter x:Name="Icon"
                                  Margin="1"
                                  VerticalAlignment="Center"
                                  ContentSource="Icon"
                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                    <Border x:Name="GlyphPanel"
                        Background="{DynamicResource BackgroundBrush}"
                        BorderBrush="{DynamicResource BorderBrush}"
                        BorderThickness="1"
                        CornerRadius="3"
                        Margin="1"
                        Visibility="Hidden"
                        Width="22" 
                        Height="22">
                                        <Path Name="Glyph"
                          Width="9"
                          Height="11"
                          Fill="{StaticResource GlyphBrush}"
                          FlowDirection="LeftToRight"
                          Data="{StaticResource Checkmark_Tab}"/>
                                    </Border>
                                    <ContentPresenter Grid.Column="2"
                                  ContentSource="Header"
                                  Margin="{TemplateBinding MenuItem.Padding}"
                                  RecognizesAccessKey="True"
                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                    <TextBlock Grid.Column="4"
                           Text="{TemplateBinding MenuItem.InputGestureText}"
                           Margin="{TemplateBinding MenuItem.Padding}"
                           Visibility="Collapsed"/>
                                    <Path Grid.Column="5"
                      VerticalAlignment="Center"
                      Margin="4,0,0,0"
                      Fill="{TemplateBinding MenuItem.Foreground}"
                      Data="{StaticResource RightArrow_Tab}"/>
                                </Grid>
                                <Popup x:Name="PART_Popup"
                   AllowsTransparency="true"
                   Placement="Right"
                   VerticalOffset="-3"
                   HorizontalOffset="-2"
                   IsOpen="{Binding Path=IsSubmenuOpen,RelativeSource={RelativeSource TemplatedParent}}"
                   Focusable="false"
                   PopupAnimation="{DynamicResource {x:Static SystemParameters.MenuPopupAnimationKey}}">
                                    <Microsoft_Windows_Aero:SystemDropShadowChrome Name="Shdw"
                                              Color="{Binding Path=Color,Source={StaticResource ActiveBorderBrush}}">
                                        <ContentControl Name="SubMenuBorder"
                                    Template="{StaticResource {ComponentResourceKey TypeInTargetAssembly={x:Type FrameworkElement}, ResourceId=SubmenuContent}}"
                                    IsTabStop="false">
                                            <ScrollViewer CanContentScroll="true"
                                     VerticalScrollBarVisibility="Auto" HorizontalScrollBarVisibility="Auto">
                                                <ItemsPresenter Margin="2"
                                            KeyboardNavigation.TabNavigation="Cycle"
                                            KeyboardNavigation.DirectionalNavigation="Cycle"
                                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                            Grid.IsSharedSizeScope="true"/>
                                            </ScrollViewer>
                                        </ContentControl>
                                    </Microsoft_Windows_Aero:SystemDropShadowChrome>
                                </Popup>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsSuspendingPopupAnimation"
                     Value="true">
                                    <Setter TargetName="PART_Popup"
                        Property="PopupAnimation"
                        Value="None"/>
                                </Trigger>
                                <Trigger Property="IsHighlighted"
                     Value="true">
                                    <Setter TargetName="InnerBorder"
                        Property="Stroke"
                        Value="{DynamicResource HoverBorderBrush}"/>
                                    <Setter Property="Foreground"
                Value="{DynamicResource HoverForegroundBrush}"/>
                                </Trigger>
                                <Trigger Property="Icon"
                     Value="{x:Null}">
                                    <Setter TargetName="Icon"
                        Property="Visibility"
                        Value="Collapsed"/>
                                </Trigger>
                                <Trigger Property="IsChecked"
                     Value="true">
                                    <Setter TargetName="GlyphPanel"
                        Property="Visibility"
                        Value="Visible"/>
                                    <Setter TargetName="Icon"
                        Property="Visibility"
                        Value="Collapsed"/>
                                </Trigger>
                                <Trigger SourceName="PART_Popup"
                     Property="Popup.HasDropShadow"
                     Value="true">
                                    <Setter TargetName="Shdw"
                        Property="Margin"
                        Value="0,0,5,5"/>
                                    <Setter TargetName="Shdw"
                        Property="Color"
                        Value="{Binding Path=Color,Source={DynamicResource ActiveBorderBrush}}"/>
                                </Trigger>
                                <Trigger Property="IsHighlighted"
                     Value="true">
                                    <Setter TargetName="Bg"
                        Property="Fill"
                        Value="{DynamicResource HoverBackgroundBrush}"/>
                                    <Setter TargetName="Bg"
                        Property="Stroke"
                        Value="{DynamicResource HoverBorderBrush}"/>
                                    <Setter Property="Foreground"
                Value="{DynamicResource HoverForegroundBrush}"/>
                                </Trigger>
                                <Trigger Property="IsEnabled"
                     Value="false">
					 <Setter Property="Opacity"
                        Value="0.5"/>
                                    <Setter Property="Foreground"
                        Value="{DynamicResource ForegroundBrush}"/>
                                    <Setter TargetName="GlyphPanel"
                        Property="Background"
                        Value="{DynamicResource BackgroundBrush}"/>
                                    <Setter TargetName="GlyphPanel"
                        Property="BorderBrush"
                        Value="{DynamicResource BorderBrush}"/>
                                    <Setter TargetName="Glyph"
                        Property="Fill"
                        Value="{DynamicResource BackgroundBrush}"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="Role"
                     Value="SubmenuItem"/>
                    <Condition Property="windows_shared:SkinStorage.EnableTouch" Value="true"/>
                </MultiTrigger.Conditions>
                <Setter Property="Padding"  Value="16,10.5,16,10.5"/>
            </MultiTrigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="Role"
                     Value="SubmenuItem"/>
                    <Condition Property="windows_shared:SkinStorage.EnableTouch" Value="false"/>
                </MultiTrigger.Conditions>
                <Setter Property="Padding"
                        Value="8,3,8,3"/>
            </MultiTrigger>
        </Style.Triggers>
    </Style>
    <Style TargetType="tools_controls:CustomMenuItem" x:Key="TabControlCustomMenuItemStyle">
        <Setter Property="HorizontalContentAlignment"
                Value="{Binding Path=HorizontalContentAlignment,RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}},FallbackValue=Stretch}"/>
        <Setter Property="VerticalContentAlignment"
                Value="{Binding Path=VerticalContentAlignment,RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}},FallbackValue=Stretch}"/>
        <Setter Property="Background"
                Value="{DynamicResource ContentBackgroundBrush}"/>
        <Setter Property="Foreground"
                Value="{DynamicResource ContentForegroundBrush}"/>
        <Style.Triggers>
            <DataTrigger Binding="{Binding Path=ISeparator, RelativeSource={RelativeSource Self},FallbackValue=False}" Value="False">
                <Setter Property="Control.Template" Value="{DynamicResource TabControlCustomMenuItemTemplate}"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding Path=IsSeparator, RelativeSource={RelativeSource Self},FallbackValue=False}" Value="True">
                <Setter Property="BorderBrush" Value="{DynamicResource ActiveBorderBrush}"/>
                <Setter Property="BorderThickness" Value="0.5"/>
                <Setter Property="Control.Template" Value="{DynamicResource TabControlSeparatorTemplate}"/>
            </DataTrigger>
            <Trigger Property="Role"
                     Value="TopLevelItem">
                <Setter Property="Padding"
                        Value="7,2,8,3"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate 
                     TargetType="MenuItem">
                            <Grid SnapsToDevicePixels="true">
                                <Rectangle x:Name="OuterBorder"
                       RadiusX="2"
                       RadiusY="2"/>
                                <Rectangle Name="Bg"
                       Margin="1"
                       Fill="{TemplateBinding MenuItem.Background}"
                       Stroke="{TemplateBinding MenuItem.BorderBrush}"
                       StrokeThickness="1"
                       RadiusX="1"
                       RadiusY="1"/>
                                <Rectangle x:Name="InnerBorder"
                       Margin="2"/>
                                <DockPanel>
                                    <ContentPresenter x:Name="Icon"
                                  Margin="4,0,6,0"
                                  VerticalAlignment="Center"
                                  ContentSource="Icon"
                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                    <Path x:Name="GlyphPanel"
                      Margin="7,0,0,0"
                      Visibility="Collapsed"
                      VerticalAlignment="Center"
                      Fill="{DynamicResource GlyphBrush}"
                      FlowDirection="LeftToRight"
                      Data="{StaticResource Checkmark_Tab}"/>
                                    <ContentPresenter ContentSource="Header"
                                  Margin="{TemplateBinding MenuItem.Padding}"
                                  RecognizesAccessKey="True"
                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                </DockPanel>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="Icon"
                     Value="{x:Null}">
                                    <Setter TargetName="Icon"
                        Property="Visibility"
                        Value="Collapsed"/>
                                </Trigger>
                                <Trigger Property="IsChecked"
                     Value="true">
                                    <Setter TargetName="GlyphPanel"
                        Property="Visibility"
                        Value="Visible"/>
                                    <Setter TargetName="Icon"
                        Property="Visibility"
                        Value="Collapsed"/>
                                </Trigger>
                                <Trigger Property="IsHighlighted"
                     Value="true">
                                    <Setter TargetName="Bg"
                        Property="Stroke"
                        Value="{DynamicResource HoverBackgroundBrush}"/>
                                    <Setter TargetName="OuterBorder"
                        Property="Stroke"
                        Value="{DynamicResource HoverBorderBrush}"/>
                                    <Setter TargetName="InnerBorder"
                        Property="Stroke"
                        Value="{DynamicResource HoverBorderBrush}"/>
                                    <Setter Property="Foreground"
                Value="{DynamicResource HoverForegroundBrush}"/>

                                </Trigger>
                                <Trigger Property="IsKeyboardFocused"
                     Value="true">
                                    <Setter TargetName="Bg"
                        Property="Stroke"
                        Value="{DynamicResource ActiveBorderBrush}"/>
                                    <Setter TargetName="Bg"
                        Property="Fill"
                        Value="{DynamicResource ActiveBackgroundBrush}"/>
                                    <Setter TargetName="InnerBorder"
                        Property="Stroke"
                        Value="{DynamicResource ActiveBorderBrush}"/>
                                </Trigger>
                                <Trigger Property="IsEnabled"
                     Value="false">
                                    <Setter Property="Opacity"
                        Value="0.5"/>
                                    <Setter Property="Foreground"
                        Value="{DynamicResource ForegroundBrush}"/>
                                    <Setter TargetName="GlyphPanel"
                        Property="Fill"
                        Value="{DynamicResource BackgroundBrush}"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="Role"
                     Value="SubmenuHeader">
                <Setter Property="Padding"
                        Value="8,3,8,3"/>
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate 
                     TargetType="MenuItem">
                            <Grid SnapsToDevicePixels="true">
                                <Rectangle Name="Bg"
                       Fill="{TemplateBinding MenuItem.Background}"
                       Stroke="{TemplateBinding MenuItem.BorderBrush}"
                       StrokeThickness="1"
                       RadiusX="2"
                       RadiusY="2"/>
                                <Rectangle x:Name="InnerBorder"
                       Margin="1"
                       Stroke="{DynamicResource BackgroundBrush}"
                       StrokeThickness="1"
                       RadiusX="2"
                       RadiusY="2"/>
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition MinWidth="24"
                                      Width="Auto"
                                      SharedSizeGroup="MenuItemIconColumnGroup"/>
                                        <ColumnDefinition Width="4"/>
                                        <ColumnDefinition Width="*"/>
                                        <ColumnDefinition Width="37"/>
                                        <ColumnDefinition Width="Auto"
                                      SharedSizeGroup="MenuItemIGTColumnGroup"/>
                                        <ColumnDefinition Width="17"/>
                                    </Grid.ColumnDefinitions>
                                    <ContentPresenter x:Name="Icon"
                                  Margin="1"
                                  VerticalAlignment="Center"
                                  ContentSource="Icon"
                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                    <Border x:Name="GlyphPanel"
                        Background="{DynamicResource BackgroundBrush}"
                        BorderBrush="{DynamicResource BorderBrush}"
                        BorderThickness="1"
                        CornerRadius="3"
                        Margin="1"
                        Visibility="Hidden"
                        Width="22" 
                        Height="22">
                                        <Path Name="Glyph"
                          Width="9"
                          Height="11"
                          Fill="{DynamicResource GlyphBrush}"
                          FlowDirection="LeftToRight"
                          Data="{StaticResource Checkmark_Tab}"/>
                                    </Border>
                                    <ContentPresenter Grid.Column="2"
                                  ContentSource="Header"
                                  Margin="{TemplateBinding MenuItem.Padding}"
                                  RecognizesAccessKey="True"
                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                    <TextBlock Grid.Column="4"
                           Text="{TemplateBinding MenuItem.InputGestureText}"
                           Margin="{TemplateBinding MenuItem.Padding}"
                           Visibility="Collapsed"/>
                                    <Path Grid.Column="5"
                      VerticalAlignment="Center"
                      Margin="4,0,0,0"
                      Fill="{TemplateBinding MenuItem.Foreground}"
                      Data="{StaticResource RightArrow_Tab}"/>
                                </Grid>
                                <Popup x:Name="PART_Popup"
                   AllowsTransparency="true"
                   Placement="Right"
                   VerticalOffset="-3"
                   HorizontalOffset="-2"
                   IsOpen="{Binding Path=IsSubmenuOpen,RelativeSource={RelativeSource TemplatedParent}}"
                   Focusable="false"
                   PopupAnimation="{DynamicResource {x:Static SystemParameters.MenuPopupAnimationKey}}">
                                    <Microsoft_Windows_Aero:SystemDropShadowChrome Name="Shdw"
                                              Color="{Binding Path=Color,Source={StaticResource ActiveBorderBrush}}">
                                        <ContentControl Name="SubMenuBorder"
                                    Template="{StaticResource {ComponentResourceKey TypeInTargetAssembly={x:Type FrameworkElement}, ResourceId=SubmenuContent}}"
                                    IsTabStop="false">
                                            <ScrollViewer CanContentScroll="true"
                                     VerticalScrollBarVisibility="Auto" HorizontalScrollBarVisibility="Auto">
                                                <ItemsPresenter Margin="2"
                                            KeyboardNavigation.TabNavigation="Cycle"
                                            KeyboardNavigation.DirectionalNavigation="Cycle"
                                            SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                            Grid.IsSharedSizeScope="true"/>
                                            </ScrollViewer>
                                        </ContentControl>
                                    </Microsoft_Windows_Aero:SystemDropShadowChrome>
                                </Popup>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsSuspendingPopupAnimation"
                     Value="true">
                                    <Setter TargetName="PART_Popup"
                        Property="PopupAnimation"
                        Value="None"/>
                                </Trigger>
                                <Trigger Property="IsHighlighted"
                     Value="true">
                                    <Setter TargetName="InnerBorder"
                        Property="Stroke"
                        Value="{DynamicResource HoverBorderBrush}"/>
                                    <Setter Property="Foreground"
                Value="{DynamicResource HoverForegroundBrush}"/>
                                </Trigger>
                                <Trigger Property="Icon"
                     Value="{x:Null}">
                                    <Setter TargetName="Icon"
                        Property="Visibility"
                        Value="Collapsed"/>
                                </Trigger>
                                <Trigger Property="IsChecked"
                     Value="true">
                                    <Setter TargetName="GlyphPanel"
                        Property="Visibility"
                        Value="Visible"/>
                                    <Setter TargetName="Icon"
                        Property="Visibility"
                        Value="Collapsed"/>
                                </Trigger>
                                <Trigger SourceName="PART_Popup"
                     Property="Popup.HasDropShadow"
                     Value="true">
                                    <Setter TargetName="Shdw"
                        Property="Margin"
                        Value="0,0,5,5"/>
                                    <Setter TargetName="Shdw"
                        Property="Color"
                        Value="{Binding Path=Color,Source={DynamicResource ActiveBorderBrush}}"/>
                                </Trigger>
                                <Trigger Property="IsHighlighted"
                     Value="true">
                                    <Setter TargetName="Bg"
                        Property="Fill"
                        Value="{DynamicResource HoverBackgroundBrush}"/>
                                    <Setter TargetName="Bg"
                        Property="Stroke"
                        Value="{DynamicResource HoverBorderBrush}"/>
                                    <Setter Property="Foreground"
                Value="{DynamicResource HoverForegroundBrush}"/>
                                </Trigger>
                                <Trigger Property="IsEnabled"
                     Value="false">
                                    <Setter Property="Opacity"
                        Value="0.5"/>
                                    <Setter Property="Foreground"
                        Value="{DynamicResource ForegroundBrush}"/>
                                    <Setter TargetName="GlyphPanel"
                        Property="Background"
                        Value="{DynamicResource BackgroundBrush}"/>
                                    <Setter TargetName="GlyphPanel"
                        Property="BorderBrush"
                        Value="{DynamicResource BorderBrush}"/>
                                    <Setter TargetName="Glyph"
                        Property="Fill"
                        Value="{DynamicResource BackgroundBrush}"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="Role"
                     Value="SubmenuItem"/>
                    <Condition Property="windows_shared:SkinStorage.EnableTouch" Value="true"/>
                </MultiTrigger.Conditions>
                <Setter Property="Padding"  Value="16,10.5,16,10.5"/>
            </MultiTrigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="Role"
                     Value="SubmenuItem"/>
                    <Condition Property="windows_shared:SkinStorage.EnableTouch" Value="false"/>
                </MultiTrigger.Conditions>
                <Setter Property="Padding"
                        Value="8,3,8,3"/>
            </MultiTrigger>
        </Style.Triggers>
    </Style>
    <!--Aero.Normalcolor-->



    <!--End Aero.Normalcolor-->

    <Style x:Key="TabItemContextMenu" TargetType="{x:Type ContextMenu}">
        <Setter Property="Panel.Background" Value="{DynamicResource BackgroundBrush}"/>
        <Setter Property="TextElement.FontFamily" Value="{DynamicResource ResourceKey={x:Static SystemFonts.MenuFontFamilyKey}}"/>
        <Setter Property="TextElement.FontSize" Value="{DynamicResource ResourceKey={x:Static SystemFonts.MenuFontSizeKey}}"/>
        <Setter Property="TextElement.FontStyle" Value="{DynamicResource ResourceKey={x:Static SystemFonts.MenuFontStyleKey}}"/>
        <Setter Property="TextElement.FontWeight" Value="{DynamicResource ResourceKey={x:Static SystemFonts.MenuFontWeightKey}}"/>
        <Setter Property="TextElement.Foreground" Value="{DynamicResource ResourceKey={x:Static SystemColors.MenuTextBrushKey}}"/>
        <Setter Property="ItemContainerStyle" Value="{DynamicResource CustomMenuItem}"/>
        <Setter Property="Control.VerticalContentAlignment" Value="Center"/>
        <Setter Property="Background" Value="{DynamicResource ContentBackgroundBrush}"></Setter>
        <Setter Property="Border.BorderThickness" Value="1,1,1,1"/>
        <Setter Property="Border.BorderBrush" Value="{DynamicResource BorderBrush}"/>
        <Setter Property="Control.Padding" Value="1,1,1,1"/>
        <Setter Property="Grid.IsSharedSizeScope" Value="True"/>
        <Setter Property="ContextMenuService.HasDropShadow" Value="True"/>
        <Setter Property="UIElement.SnapsToDevicePixels" Value="True"/>
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate TargetType="ContextMenu">
                    <Microsoft_Windows_Aero:SystemDropShadowChrome Name="Shdw" SnapsToDevicePixels="True" Color="{Binding Path=Color,Source={StaticResource ActiveBorderBrush}}">
                        <Border BorderBrush="{TemplateBinding Border.BorderBrush}" BorderThickness="{TemplateBinding Border.BorderThickness}" Background="{TemplateBinding Panel.Background}">
                            <Grid x:Name="PART_Grid">
                                <Rectangle x:Name="IconBar" Margin="1,1,1,1" Width="25" HorizontalAlignment="Left" Fill="{DynamicResource BackgroundBrush}"/>
                                <Rectangle x:Name="leftBar1" Margin="26,1,0,1" Width="1" HorizontalAlignment="Left" Fill="{DynamicResource BackgroundBrush}"/>
                                <Rectangle x:Name="leftBar2"  Margin="27,1,0,1" Width="1" HorizontalAlignment="Left" Fill="{DynamicResource BackgroundBrush}" />
                                <ScrollViewer x:Name="PART_ScrollViewer" Margin="1,0,1,0" Style="{DynamicResource {ComponentResourceKey ResourceId=MenuScrollViewer, TypeInTargetAssembly=FrameworkElement}}" CanContentScroll="True" Grid.ColumnSpan="2">
                                    <StackPanel>
                                        <tools_controls:CustomMenuItem x:Name="PART_CloseTab"  IsEnabled="{Binding Path=EnableCloseMenuItem,RelativeSource={RelativeSource FindAncestor,AncestorType={x:Type tools_controls:TabItemExt}},FallbackValue=true}" Visibility="{Binding Path=CloseMenuItemVisibility,RelativeSource={RelativeSource FindAncestor,AncestorType={x:Type tools_controls:TabItemExt}},FallbackValue=Visible}"  Style="{Binding Path=TabItemContextMenuItemStyle, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type tools_controls:TabItemExt}},FallbackValue={x:Null}}"  HeaderTemplate="{Binding Path=TabItemContextMenuItemTemplate, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type tools_controls:TabItemExt}},FallbackValue={x:Null}}"  Command="tools_controls:TabControlCommands.CloseTabItem" CommandTarget="{TemplateBinding PlacementTarget}" Margin="2" Header="{Binding Path=MenuItemCloseTabsName,RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type tools_controls:TabControlExt}},FallbackValue=Close}"/>
                                        <tools_controls:CustomMenuItem x:Name="PART_CloseOtherTab"  Visibility="{Binding Path=CloseAllButThisMenuItemVisibility,RelativeSource={RelativeSource FindAncestor,AncestorType={x:Type tools_controls:TabItemExt}},FallbackValue=Collapsed}" Style="{Binding Path=TabItemContextMenuItemStyle, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type tools_controls:TabItemExt}},FallbackValue={x:Null}}"  HeaderTemplate="{Binding Path=TabItemContextMenuItemTemplate, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type tools_controls:TabItemExt}},FallbackValue={x:Null}}" Command="tools_controls:TabControlCommands.CloseTabs" CommandTarget="{TemplateBinding PlacementTarget}" Margin="2" Header="{Binding Path=MenuItemCloseOtherTabsName,RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type tools_controls:TabControlExt}},FallbackValue=CloseAllButThis}"/>
                                        <tools_controls:CustomMenuItem x:Name="PART_CloseAllTabs"  Visibility="{Binding Path=CloseAllMenuItemVisibility,RelativeSource={RelativeSource FindAncestor,AncestorType={x:Type tools_controls:TabItemExt}},FallbackValue=Collapsed}" Style="{Binding Path=TabItemContextMenuItemStyle, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type tools_controls:TabItemExt}},FallbackValue={x:Null}}"  HeaderTemplate="{Binding Path=TabItemContextMenuItemTemplate, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type tools_controls:TabItemExt}},FallbackValue={x:Null}}" Command="tools_controls:TabControlCommands.CloseTabs" CommandTarget="{TemplateBinding PlacementTarget}" CommandParameter="All" Margin="2" Header="{Binding Path=MenuItemCloseAllTabsName,RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type tools_controls:TabControlExt}},FallbackValue=CloseAll}"/>
                                        <tools_controls:CustomMenuItem x:Name="PART_PinTab" Visibility="{Binding Path=PinTabMenuItemVisibility,RelativeSource={RelativeSource FindAncestor,AncestorType={x:Type tools_controls:TabItemExt}},FallbackValue=Collapsed}" Style="{Binding Path=TabItemContextMenuItemStyle, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type tools_controls:TabItemExt}},FallbackValue={x:Null}}" HeaderTemplate="{Binding Path=TabItemContextMenuItemTemplate, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type tools_controls:TabItemExt}},FallbackValue={x:Null}}" Command="tools_controls:TabControlCommands.PinTabItem" CommandParameter="{Binding RelativeSource={RelativeSource Self}}" Tag="Pin"  Margin="2" Header="{Binding Path=PinMenuItemHeader,RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type tools_controls:TabItemExt}},FallbackValue=PinTab}"  />
                                        <ItemsPresenter  Margin="{TemplateBinding Control.Padding}" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" KeyboardNavigation.DirectionalNavigation="Cycle" />
                                    </StackPanel>
                                </ScrollViewer>
                            </Grid>
                        </Border>
                    </Microsoft_Windows_Aero:SystemDropShadowChrome>
                    <ControlTemplate.Triggers>
                        <Trigger  Property="windows_shared:SkinStorage.EnableTouch" Value="true">

                            <Setter Property="Margin" Value="0" TargetName="PART_CloseTab"/>
                            <Setter Property="Margin" Value="0" TargetName="PART_CloseOtherTab"/>
                            <Setter Property="Margin" Value="0" TargetName="PART_CloseAllTabs"/>
                            <Setter Property="Fill" TargetName ="IconBar" Value="{DynamicResource BackgroundBrush}"/>
                            <Setter Property="Control.Padding" Value="0"/>
                            <Setter Property="Width" TargetName="IconBar" Value="32" />
                            <Setter Property="Visibility" TargetName="leftBar1" Value="Collapsed" />
                            <Setter Property="Visibility" TargetName="leftBar2" Value="Collapsed" />
                            <Setter Property="Margin" TargetName="PART_Grid" Value="0,0,0,-1"/>
                            <Setter Property="Margin" TargetName="PART_ScrollViewer" Value="0"/>
                        </Trigger>
                        <Trigger Property="ContextMenuService.HasDropShadow" Value="True">
                            <Setter Property="FrameworkElement.Margin" TargetName="Shdw" Value="0,0,5,5"/>
                            <Setter Property="Microsoft_Windows_Aero:SystemDropShadowChrome.Color" TargetName="Shdw" Value="{Binding Path=Color,Source={StaticResource ActiveBorderBrush}}"/>
                        </Trigger>
						  <Trigger  Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value="0.5"/>
						  </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style TargetType="{x:Type ContextMenu}" x:Key="CustomContextMenu">
        <Setter Property="Panel.Background" Value="{DynamicResource ContentBackgroundBrush}"/>
        <Setter Property="TextElement.FontFamily" Value="{DynamicResource ResourceKey={x:Static SystemFonts.MenuFontFamilyKey}}"/>
        <Setter Property="TextElement.FontSize" Value="{DynamicResource ResourceKey={x:Static SystemFonts.MenuFontSizeKey}}"/>
        <Setter Property="TextElement.FontStyle" Value="{DynamicResource ResourceKey={x:Static SystemFonts.MenuFontStyleKey}}"/>
        <Setter Property="TextElement.FontWeight" Value="{DynamicResource ResourceKey={x:Static SystemFonts.MenuFontWeightKey}}"/>
        <Setter Property="TextElement.Foreground" Value="{DynamicResource ResourceKey={x:Static SystemColors.MenuTextBrushKey}}"/>
        <Setter Property="ItemContainerStyle" Value="{DynamicResource CustomMenuItem}"/>
        <Setter Property="Control.VerticalContentAlignment" Value="Center"/>
        <Setter Property="Border.BorderThickness" Value="1,1,1,1"/>
        <Setter Property="Border.BorderBrush" Value="{DynamicResource BorderBrush}"/>
        <Setter Property="Control.Padding" Value="1,1,1,1"/>
        <Setter Property="Grid.IsSharedSizeScope" Value="True"/>
        <Setter Property="ContextMenuService.HasDropShadow" Value="True"/>
        <Setter Property="UIElement.SnapsToDevicePixels" Value="True"/>
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate TargetType="ContextMenu">
                    <Microsoft_Windows_Aero:SystemDropShadowChrome Name="Shdw" SnapsToDevicePixels="True" Color="{Binding Path=Color,Source={StaticResource ActiveBorderBrush}}">
                        <Border BorderBrush="{TemplateBinding Border.BorderBrush}" BorderThickness="{TemplateBinding Border.BorderThickness}" Background="{TemplateBinding Panel.Background}">
                            <Grid x:Name="PART_Grid">
                                <Rectangle x:Name="IconBar" Margin="1,1,1,1" Width="25" HorizontalAlignment="Left" Fill="{DynamicResource BackgroundBrush}"/>
                                <Rectangle x:Name="leftBar1" Margin="26,1,0,1" Width="1" HorizontalAlignment="Left" Fill="{DynamicResource BackgroundBrush}"/>
                                <Rectangle x:Name="leftBar2" Margin="27,1,0,1" Width="1" HorizontalAlignment="Left" Fill="{DynamicResource BackgroundBrush}" />
                                <ScrollViewer x:Name="PART_ScrollViewer" Margin="1,0,1,0" Style="{DynamicResource {ComponentResourceKey ResourceId=MenuScrollViewer, TypeInTargetAssembly=FrameworkElement}}" CanContentScroll="True" Grid.ColumnSpan="2">
                                    <ItemsPresenter Margin="{TemplateBinding Control.Padding}" SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" KeyboardNavigation.DirectionalNavigation="Cycle" />
                                </ScrollViewer>
                            </Grid>
                        </Border>
                    </Microsoft_Windows_Aero:SystemDropShadowChrome>
                    <ControlTemplate.Triggers>
                        <Trigger  Property="windows_shared:SkinStorage.EnableTouch" Value="true">
                            <Setter Property="Margin" TargetName="PART_ScrollViewer" Value="0"/>

                            <Setter Property="Fill" TargetName ="IconBar" Value="{DynamicResource BackgroundBrush}"/>
                            <Setter Property="Control.Padding" Value="0"/>
                            <Setter Property="Width" TargetName="IconBar" Value="32" />
                            <Setter Property="Visibility" TargetName="leftBar1" Value="Collapsed" />
                            <Setter Property="Visibility" TargetName="leftBar2" Value="Collapsed" />
                            <Setter Property="Margin" TargetName="PART_Grid" Value="0,0,0,-1"/>

                        </Trigger>
                        <Trigger Property="ContextMenuService.HasDropShadow" Value="True">
                            <Setter Property="FrameworkElement.Margin" TargetName="Shdw" Value="0,0,5,5"/>
                            <Setter Property="Microsoft_Windows_Aero:SystemDropShadowChrome.Color" TargetName="Shdw" Value="{Binding Path=Color,Source={StaticResource ActiveBorderBrush}}"/>
                        </Trigger>
						<Trigger  Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value="0.5"/>
						  </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <Style TargetType="{x:Type tools_controls:TabItemExt}" x:Key="AeroTabItemExtStyle">
        <Setter Property="TextElement.Foreground" 
				Value="{DynamicResource ForegroundBrush}"/>
        <Setter Property="TabItemContextMenuStyle"   Value="{DynamicResource TabItemContextMenu}"/>
        <Setter Property="TabItemContextMenuItemStyle"  Value="{DynamicResource TabControlCustomMenuItemStyle}"/>
        <Setter Property="FontSize" Value="13"/>
        <Setter Property="Margin" Value="0"/>
        <Setter Property="Background" Value="{DynamicResource BackgroundBrush}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource BorderBrush}"/>
        <Setter Property="FrameworkElement.FocusVisualStyle">
            <Setter.Value>
                <Style TargetType="IFrameworkInputElement">
                    <Setter Property="Control.Template">
                        <Setter.Value>
                            <x:Null/>
                        </Setter.Value>
                    </Setter>
                </Style>
            </Setter.Value>
        </Setter>
        <!--<Setter Property="FlowDirection" Value="LeftToRight"/>-->
        <Setter Property="MinHeight" Value="18"/>
        <!--<Setter Property="Margin" Value="-8,0,0,0}"/>-->
        <Setter Property="HeaderMargin" Value="6,1,6,1"/>
        <Setter Property="IconMargin" Value="1,0,0,4"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Control.HorizontalContentAlignment" Value="Stretch"/>
        <Setter Property="Control.VerticalContentAlignment" Value="Stretch"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type tools_controls:TabItemExt}">
                    <Border x:Name="RootBorder" BorderBrush="Transparent" Background="{TemplateBinding Background}" BorderThickness="1">
                    <Border BorderBrush="Transparent" Background="{TemplateBinding Background}" SnapsToDevicePixels="True"
            Name="Bd" BorderThickness="1" Margin="{TemplateBinding Margin}"
								   ToolTip="{Binding Path=ItemToolTip, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type tools_controls:TabItemExt}},FallbackValue=''}" CornerRadius="0" 
								   >
                        <!--<Border Name="InnerBorder" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="1,1,1,0" CornerRadius="3,3,0,0" >-->
                        <DockPanel x:Name="PART_DockPanel" LastChildFill="True" Margin="2">
                            <ToggleButton Name="PART_CloseButton" Width="15" Height="14" Margin="1,2,3,0"
                                  VerticalAlignment="Center"
                                  DockPanel.Dock="Right" 
                                  Focusable="False" 
                                  Visibility="Collapsed"
							      Template="{StaticResource CloseButtonTemplate}"
                                  Command="tools_controls:TabControlCommands.CloseTabItem"
                                  />
                                <ToggleButton Name="PART_PinButton" Visibility="{Binding ShowPin, RelativeSource={RelativeSource AncestorType={x:Type tools_controls:TabItemExt}}, Converter={StaticResource TabControlExtCloseButtonTypeToVisibilityConverter}}" DockPanel.Dock="Right" Width="15" Height="14"
                                  Command="tools_controls:TabControlCommands.PinTabItem" CommandParameter="{Binding IsChecked, RelativeSource={RelativeSource Self}}" 
                                              Foreground="{StaticResource GlyphBrush}"  VerticalAlignment="Center"  Margin="0 0 2 0"             
                                  Template="{StaticResource PinButtonTemplate}"  />
                                <Image x:Name="PART_Image"
					   Source="{TemplateBinding tools_controls:TabControlExt.Image}"
					   Height="{TemplateBinding tools_controls:TabControlExt.ImageHeight}"
					   Width="{TemplateBinding tools_controls:TabControlExt.ImageWidth}"
					   Stretch="Fill" Margin="{TemplateBinding IconMargin}"
					   SnapsToDevicePixels="True" VerticalAlignment="Center"
                       DockPanel.Dock="{Binding Path=(tools_controls:TabControlExt.ImageAlignment), Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource TabControlExtImageAlignmentToDockConverter}}"/>
                            <ContentPresenter ContentSource="Header" x:Name="Content" Margin="{TemplateBinding HeaderMargin}" TextElement.Foreground="{Binding Path=Foreground, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type tools_controls:TabItemExt}},FallbackValue=Transparent}"
                                          RecognizesAccessKey="False" Content="{TemplateBinding HeaderedContentControl.Header}" 
                                          ContentTemplate="{TemplateBinding HeaderedContentControl.HeaderTemplate}"                                           
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}" 
                                          SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" />

                            <ContentPresenter    ContentSource="Header" x:Name="PART_EditHeader" Visibility="Collapsed"
                                          Margin="{TemplateBinding HeaderMargin}" TextElement.Foreground="{Binding Path=Foreground, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type tools_controls:TabItemExt}},FallbackValue=Transparent}" 
                                          RecognizesAccessKey="True" Content="{TemplateBinding HeaderedContentControl.Header}" 
                                          ContentTemplate="{Binding  EditHeaderTemplate, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type tools_controls:TabControlExt}}}"                                           
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}" 
                                          SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" />
                            
                        </DockPanel>
                        <!--</Border>-->
                    </Border>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="windows_shared:SkinStorage.EnableTouch" Value="true">
                            <Setter Property="HeaderMargin" Value="12,9,12,8"/>
                            <Setter Property="IconMargin" Value="12,10,0,12"/>
                            <Setter Property="FontSize" Value="18"/>
                            <Setter TargetName ="PART_CloseButton" Property="Width" Value="24"/>
                            <Setter TargetName ="PART_CloseButton" Property="Height" Value="24"/>
                            <Setter Property="VerticalAlignment" TargetName="PART_CloseButton" Value="Center" />
                        </Trigger>
						<Trigger  Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" Value="0.5"/>
						  </Trigger>
                        <!--<Trigger Property="tools_controls:TabControlExt.ImageHeight" Value="{DynamicResource NanValue}">-->
                          <Trigger Property="tools_controls:TabControlExt.ImageHeight" Value="{x:Static sys:Double.NaN}">
                            <Setter TargetName="PART_Image" Property="Stretch" Value="Uniform" />
                        </Trigger>
                        <!--<Trigger Property="tools_controls:TabControlExt.ImageWidth" Value="{DynamicResource NanValue}">-->
                          <Trigger Property="tools_controls:TabControlExt.ImageWidth" Value="{x:Static sys:Double.NaN}">
                            <Setter TargetName="PART_Image" Property="Stretch" Value="Uniform" />
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="tools_controls:TabControlExt.ImageHeight" Value="{x:Static sys:Double.NaN}" />
                                <Condition Property="tools_controls:TabControlExt.ImageWidth" Value="{x:Static sys:Double.NaN}" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="PART_Image" Property="Stretch" Value="None" />
                        </MultiTrigger>
                        <DataTrigger Binding="{Binding Path=IsSelected, RelativeSource={RelativeSource Self}}" Value="True"> 
                            <Setter Property="Margin" TargetName="RootBorder" Value="0,0,0,0"/>
                            <Setter Property="BorderBrush" TargetName="Bd" Value="{Binding BorderBrush,RelativeSource={RelativeSource TemplatedParent}}"/>
                            <Setter Property="BorderBrush" TargetName="RootBorder" Value="{Binding BorderBrush,RelativeSource={RelativeSource TemplatedParent}}"/>
                            <Setter Property="BorderBrush" Value="{Binding BorderBrush,RelativeSource={RelativeSource TemplatedParent}}"/>
                            <Setter Property="Background" TargetName="Bd" Value="{Binding Path=TabItemSelectedBackground, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type tools_controls:TabControlExt}},FallbackValue=Transparent}"/>
                            <Setter Property="BorderThickness" TargetName="Bd" Value="1"/>
                            <Setter Property="BorderBrush" TargetName="Bd" Value="{Binding Path=TabItemSelectedBorderBrush, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type tools_controls:TabControlExt}},FallbackValue=Transparent}"/>
                            <Setter Property="TextElement.Foreground" TargetName="Content"
						Value="{Binding Path=TabItemSelectedForeground, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type tools_controls:TabControlExt}},FallbackValue=Transparent}" />
                            <Setter Property="TextElement.FontWeight" TargetName="Content"	Value="{Binding Path=SelectedItemFontWeight, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type tools_controls:TabControlExt}},FallbackValue=SemiBold}" />
                            
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Path=IsSelected,RelativeSource={RelativeSource Self}}" Value="False">
                            <Setter Property="BorderBrush" TargetName="RootBorder" Value="{DynamicResource BorderBrush}"/>
                            <Setter Property="BorderThickness" TargetName="RootBorder" Value="0"/>
                            <Setter Property="Margin" TargetName="RootBorder" Value="0,0,0,0"/>

                        </DataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                              <Condition Binding="{Binding Path=SelectedIndex,RelativeSource={RelativeSource AncestorType={x:Type  tools_controls:TabControlExt}}}" Value="0"/>
                              <Condition Binding="{Binding Path=IsSelected, RelativeSource={RelativeSource Self}}" Value="True"/>
                            </MultiDataTrigger.Conditions>
                            <Setter Property="BorderThickness" TargetName="Bd" Value="1"/>
                                  <Setter Property="BorderThickness" TargetName="RootBorder" Value="1"/>
                          </MultiDataTrigger>
                           <MultiDataTrigger>
                             <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding Path=IsMouseOver, ElementName=Bd}" Value="True"/>

                                <Condition Binding="{Binding Path=(windows_shared:SkinStorage.EnableTouch),RelativeSource={RelativeSource AncestorType={x:Type tools_controls:TabControlExt}},FallbackValue=false}" Value="false"/>
                            </MultiDataTrigger.Conditions>
                            <Setter Property="BorderThickness" TargetName="Bd" Value="1"/>
                            <Setter Property="BorderBrush" TargetName="RootBorder" Value="{Binding BorderBrush,RelativeSource={RelativeSource TemplatedParent}}"/>
                            <Setter Property="Background" TargetName="Bd" Value="{Binding Path=TabItemHoverBackground, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type tools_controls:TabControlExt}},FallbackValue=Transparent}"/>
                            <Setter Property="BorderBrush" TargetName="Bd" Value="{Binding Path=TabItemHoverBorderBrush, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type tools_controls:TabControlExt}},FallbackValue=Transparent}"/>
                            <Setter Property="TextElement.Foreground" TargetName="Content"
						Value="{DynamicResource HoverForegroundBrush}" />

                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding Path=IsMouseOver, ElementName=Bd}" Value="True"/>

                                <Condition Binding="{Binding Path=(windows_shared:SkinStorage.EnableTouch),RelativeSource={RelativeSource AncestorType={x:Type tools_controls:TabControlExt}},FallbackValue=false}" Value="true"/>
                            </MultiDataTrigger.Conditions>
                            <Setter Property="BorderThickness" TargetName="Bd" Value="1"/>
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding Path=IsSelected, RelativeSource={RelativeSource Self}}" Value="True"/>
                                <Condition Binding="{Binding Path=IsMouseOver, ElementName=Bd}" Value="True"/>
                                <Condition Binding="{Binding Path=(windows_shared:SkinStorage.EnableTouch),RelativeSource={RelativeSource AncestorType={x:Type tools_controls:TabControlExt}},FallbackValue=false}" Value="false"/>
                            </MultiDataTrigger.Conditions>
                            <Setter Property="BorderThickness" TargetName="Bd" Value="1"/>
                            <Setter Property="BorderBrush" TargetName="RootBorder" Value="{Binding BorderBrush,RelativeSource={RelativeSource TemplatedParent}}"/>
                            <Setter Property="Margin" TargetName="RootBorder" Value="0,0,0,0"/>
                            <Setter Property="Background" TargetName="Bd" Value="{Binding Path=TabItemSelectedBackground, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type tools_controls:TabControlExt}},FallbackValue=Transparent}"/>
                            <Setter Property="BorderBrush" TargetName="Bd" Value="{Binding Path=TabItemSelectedBorderBrush, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type tools_controls:TabControlExt}},FallbackValue=Transparent}"/>
                            <Setter Property="TextElement.Foreground" TargetName="Content"
						Value="{Binding Path=TabItemSelectedForeground, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type tools_controls:TabControlExt}},FallbackValue=Transparent}" />
                            <Setter Property="TextElement.FontWeight" TargetName="Content"
						Value="{Binding Path=SelectedItemFontWeight, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type tools_controls:TabControlExt}},FallbackValue=SemiBold}" />
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding Path=IsSelected, RelativeSource={RelativeSource Self}}" Value="True"/>
                                <Condition Binding="{Binding Path=IsMouseOver, ElementName=Bd}" Value="True"/>
                                <Condition Binding="{Binding Path=(windows_shared:SkinStorage.EnableTouch),RelativeSource={RelativeSource AncestorType={x:Type tools_controls:TabControlExt}},FallbackValue=false}" Value="true"/>
                            </MultiDataTrigger.Conditions>
                            <Setter Property="BorderBrush" TargetName="Bd" Value="{Binding BorderBrush,RelativeSource={RelativeSource TemplatedParent}}"/>
                            <Setter Property="BorderBrush" TargetName="RootBorder" Value="{Binding BorderBrush,RelativeSource={RelativeSource TemplatedParent}}"/>
                            <Setter Property="BorderThickness" TargetName="Bd" Value="1"/>
                            <Setter Property="Margin" TargetName="RootBorder" Value="0,0,0,0"/>
                        </MultiDataTrigger>
                        <!--Initial section-->
                        <DataTrigger Binding="{Binding Path=CloseButtonType,RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type tools_controls:TabControlExt}},FallbackValue=Common}" Value="Both">
                            <Setter TargetName="PART_CloseButton" Property="Visibility" Value="Visible"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Path=CloseButtonType,RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type tools_controls:TabControlExt}},FallbackValue=Common}" Value="Individual">
                            <Setter TargetName="PART_CloseButton" Property="Visibility" Value="Visible"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Path=CloseButtonType,RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type tools_controls:TabControlExt}},FallbackValue=Common}" Value="IndividualOnMouseOver">
                            <Setter TargetName="PART_CloseButton" Property="Visibility" Value="Hidden"/>
                        </DataTrigger>

                        <DataTrigger Binding="{Binding Path=CloseButtonType,RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type tools_controls:TabControlExt}},FallbackValue=Common}" Value="Extended">
                            <Setter TargetName="PART_CloseButton" Property="Visibility" Value="Hidden"/>
                        </DataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding Path=CloseButtonType,RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type tools_controls:TabControlExt}},FallbackValue=Common}" Value="IndividualOnMouseOver"/>
                                <Condition Binding="{Binding Path=IsMouseOver, ElementName=Bd}" Value="True"/>
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="PART_CloseButton" Property="Visibility" Value="Visible"/>
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding Path=CloseButtonType,RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type tools_controls:TabControlExt}},FallbackValue=Common}" Value="Extended"/>
                                <Condition Binding="{Binding Path=IsSelected, RelativeSource={RelativeSource Self}}" Value="True"/>
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="PART_CloseButton" Property="Visibility" Value="Visible"/>
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding Path=CloseButtonType,RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type tools_controls:TabControlExt}},FallbackValue=Common}" Value="Extended"/>
                                <Condition Binding="{Binding Path=IsMouseOver, ElementName=Bd}" Value="True"/>
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="PART_CloseButton" Property="Visibility" Value="Visible"/>
                        </MultiDataTrigger>
                        <DataTrigger Binding="{Binding Path=(tools_controls:TabControlExt.Image), RelativeSource={RelativeSource Self}}" Value="{x:Null}">
                            <Setter Property="UIElement.Visibility" TargetName="PART_Image" Value="Collapsed"/>
                        </DataTrigger>
                        <!--End Initial section-->
                        <!--RotateTextWhenVertical section-->
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding Path=TabStripPlacement,RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type tools_controls:TabControlExt}},FallbackValue=Top}" Value="Left"/>
                                <Condition Binding="{Binding Path=RotateTextWhenVertical,RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type tools_controls:TabControlExt}},FallbackValue=false}" Value="True"/>
                            </MultiDataTrigger.Conditions>
                            <Setter Property="HorizontalAlignment" Value="Center" TargetName="PART_DockPanel"/>
                            <Setter Property="Margin" Value="4,0,0,0" TargetName="PART_Image"/>
                            <Setter TargetName="PART_DockPanel" Property="LayoutTransform">
                                <Setter.Value>
                                    <RotateTransform Angle="-90"/>
                                </Setter.Value>
                            </Setter>
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding Path=TabStripPlacement,RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type tools_controls:TabControlExt}},FallbackValue=Top}" Value="Right"/>
                                <Condition Binding="{Binding Path=RotateTextWhenVertical,RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type tools_controls:TabControlExt}},FallbackValue=false}" Value="True"/>
                            </MultiDataTrigger.Conditions>
                            <Setter Property="HorizontalAlignment" Value="Center" TargetName="PART_DockPanel"/>
                            <Setter Property="Margin" Value="4,0,0,0" TargetName="PART_Image"/>
                            <Setter TargetName="PART_DockPanel" Property="LayoutTransform">
                                <Setter.Value>
                                    <RotateTransform Angle="-90"/>
                                </Setter.Value>
                            </Setter>
                        </MultiDataTrigger>
                        <!--End RotateTextWhenVertical section-->
                        <!--TabStripPlacement section-->
                        <DataTrigger Binding="{Binding Path=TabStripPlacement,RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type tools_controls:TabControlExt}},FallbackValue=Top}" Value="Bottom">
                            <Setter Property="Border.BorderThickness" TargetName="Bd" Value="1,1,1,0"/>
                            <Setter Property="Margin" TargetName="Bd" Value="0"/>
                            <Setter Property="VerticalAlignment" Value="Stretch" TargetName="PART_DockPanel"/>
                            <Setter Property="VerticalAlignment" Value="Top" TargetName="PART_CloseButton"/>
                            <Setter Property="VerticalAlignment" Value="Center" TargetName="Content"/>
                            <Setter Property="VerticalAlignment" Value="Center" TargetName="PART_Image"/>
                            <Setter Property="Margin" Value="0,0,0,4" TargetName="PART_DockPanel"/>
                            <Setter Property="Margin" Value="0,4,0,0" TargetName="PART_Image"/>
                            <Setter Property="LayoutTransform" TargetName="PART_DockPanel">
                                <Setter.Value>
                                    <RotateTransform Angle="-180"/>
                                </Setter.Value>
                            </Setter>
                        </DataTrigger>

                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding Path=TabStripPlacement,RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type tools_controls:TabControlExt}},FallbackValue=Top}" Value="Bottom"/>
                                <Condition Binding="{Binding Path=(tools_controls:TabControlExt.ImageAlignment), RelativeSource={RelativeSource Self}}" Value="LeftOfText"/>
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Margin" Value="8,0,0,0" TargetName="PART_Image"/>
                        </MultiDataTrigger>

                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding Path=TabStripPlacement,RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type tools_controls:TabControlExt}},FallbackValue=Top}" Value="Right"/>
                                <Condition Binding="{Binding Path=RotateTextWhenVertical,RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type tools_controls:TabControlExt}},FallbackValue=false}" Value="False"/>
                            </MultiDataTrigger.Conditions>
                            <Setter Property="Margin" TargetName="Bd" Value="0"/>
                        </MultiDataTrigger>

                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding Path=TabStripPlacement,RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type tools_controls:TabControlExt}},FallbackValue=Top}" Value="Left"/>
                                <Condition Binding="{Binding Path=RotateTextWhenVertical,RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type tools_controls:TabControlExt}},FallbackValue=false}" Value="False"/>
                            </MultiDataTrigger.Conditions>
                            <Setter Property="FlowDirection" Value="LeftToRight"/>
                        </MultiDataTrigger>
                        <DataTrigger Binding="{Binding Path=(tools_controls:TabControlExt.IsEditing), RelativeSource={RelativeSource Self}}" Value="True">
                            <Setter Property="Visibility" TargetName="PART_EditHeader" Value="Visible"/>
                            <Setter Property="Visibility" TargetName="Content" Value="Collapsed"/>
                        </DataTrigger>
                        <!--End TabStripPlacement section-->
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding Path=(tools_controls:TabControlExt.UseCustomEditableTemplate), RelativeSource={RelativeSource Self}}" Value="True"/>
                    <Condition Binding="{Binding Path=(tools_controls:TabControlExt.IsEditing), RelativeSource={RelativeSource Self}}" Value="True"/>
                </MultiDataTrigger.Conditions>
                <Setter Property="HeaderTemplate" Value="{Binding Path=(tools_controls:TabControlExt.CustomEditableTemplate), RelativeSource={RelativeSource Self}}"/>
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding Path=IsSelected, RelativeSource={RelativeSource Self}}" Value="False"/>
                    <Condition Binding="{Binding Path=RotateTextWhenVertical,RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type tools_controls:TabControlExt}},FallbackValue=false}" Value="True"/>
                </MultiDataTrigger.Conditions>
                <Setter Property="Margin" Value="0"/>
            </MultiDataTrigger>
        </Style.Triggers>
    </Style>

    <Style BasedOn="{StaticResource AeroTabItemExtStyle}" TargetType="{x:Type tools_controls:TabItemExt}"/>

    
    <Style x:Key="AeroTabControlExtStyle" TargetType="{x:Type tools_controls:TabControlExt}">
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="TabPanelStyle" Value="{DynamicResource TabPanelAdvStyle}" />
        <Setter Property="TabItemSelectedBackground" Value="{DynamicResource ActiveBackgroundBrush}"/>
        <Setter Property="TabItemSelectedBorderBrush" Value="{DynamicResource ActiveBorderBrush}"/>
        <Setter Property="TabItemHoverBackground" Value="{DynamicResource HoverBackgroundBrush}"/>
        <Setter Property="TabItemHoverBorderBrush" Value="{DynamicResource HoverBorderBrush}"/>
        <Setter Property="Background" Value="{DynamicResource ContentBackgroundBrush}"/>        
        <Setter Property="TabItemSelectedForeground" Value="{DynamicResource ActiveForegroundBrush}"/>
        <Setter Property="ScrollingButtonStyle" Value="{DynamicResource TabScrollingButton}"/>
        <Setter Property="TabPanelBackground" Value="{DynamicResource BackgroundBrush}"/>
        <Setter Property="TabListContextMenuStyle"   Value="{DynamicResource CustomContextMenu}"/>
        <Setter Property="TabListContextMenuItemStyle"  Value="{DynamicResource CustomMenuItem}"/>
        <Setter Property="TextElement.Foreground" 
				Value="{DynamicResource ForegroundBrush}"/>
        <Setter Property="Control.Padding" Value="2"/>
        <Setter Property="AllowDrop" Value="True"/>
        <Setter Property="Panel.Background" Value="{DynamicResource BackgroundBrush}"/>
        <Setter Property="DragMarkerStyle" Value="{DynamicResource VS2008DragMarkerStyle}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource BorderBrush}"/>
        <Style.Triggers>
            <DataTrigger Binding="{Binding Path=IsDisableUnloadTabItemExtContent, RelativeSource={RelativeSource Self}}" Value="False">
                <Setter Property="Control.Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type tools_controls:TabControlExt}" >
                            <Grid Name="TabControlGrid"  
			  ClipToBounds="False" SnapsToDevicePixels="True" 
			  KeyboardNavigation.TabNavigation="Local">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Name="ColumnDefinition0" />
                                    <ColumnDefinition Width="0" Name="ColumnDefinition1" />
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto" Name="RowDefinition0" />
                                    <RowDefinition Height="*" Name="RowDefinition1" />
                                </Grid.RowDefinitions>
                                <tools_controls:HeaderPanel Name="HeaderPanel" Grid.Column="0" Grid.Row="0" Panel.ZIndex="1"  
							   Focusable="False" Background="{TemplateBinding TabPanelBackground}"
							   HorizontalAlignment="Stretch" VerticalAlignment="Top">
                                    <tools_controls:TabPanelAdv x:Name="PART_TabPanel" Focusable="False"  DockPanel.Dock="Right"  
                                               HorizontalAlignment="Left" VerticalAlignment="Top"   
                                                      
                                               Style="{TemplateBinding TabPanelStyle}">
                                        <tools_controls:TabLayoutPanel x:Name="PART_TabLayoutPanel" AllowDrop="True" Margin="0,0,2,0"  IsItemsHost="True" KeyboardNavigation.TabIndex="1"  HorizontalAlignment="Left" VerticalAlignment="Top">

                                        </tools_controls:TabLayoutPanel>
                                    </tools_controls:TabPanelAdv>
                                </tools_controls:HeaderPanel>
                                <windows_shared:Border3D Grid.Column="0" Grid.Row="1" AllowDrop="True"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="2" Margin="0,1,0,0"
                                Name="ContentPanel" KeyboardNavigation.TabIndex="2" KeyboardNavigation.TabNavigation="Local" 
                                BorderBrush="{StaticResource ContentBorderBrush}"
                                KeyboardNavigation.DirectionalNavigation="Contained">
                                    <Border x:Name="PART_ContentPanelBorder"
                        BorderBrush="{StaticResource ContentBorderBrush}"
                        BorderThickness="0,0,0,0"
                        CornerRadius="2,2,2,2">
                                        <Border x:Name="PART_ContentPanelInnerBorder"                             
                            Margin="3,3,3,3"
                            BorderBrush="{StaticResource ContentBorderBrush}"
                              Background="{StaticResource ContentBackgroundBrush}"
                            CornerRadius="{StaticResource TabControlExt.Aero.ContentPanelBorderCornerRadius}">
                                            <ContentPresenter Content="{TemplateBinding SelectedContent}" AllowDrop="True" 
                                          ContentTemplate="{TemplateBinding SelectedContentTemplate}" 
                                          ContentSource="SelectedContent" Name="PART_SelectedContentHost" ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}"
                                          Margin="{TemplateBinding Control.Padding}"
                                          SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" />

                                        </Border>
                                    </Border>
                                </windows_shared:Border3D>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="windows_shared:SkinStorage.EnableTouch" Value="true">
                                    <Setter Property="FontSize" Value="18"/>
                                </Trigger>
                                <Trigger Property="TabControl.TabStripPlacement" Value="Bottom">
                                    <Setter Property="LayoutTransform" TargetName="HeaderPanel">
                                        <Setter.Value>
                                            <RotateTransform Angle="-180"/>
                                        </Setter.Value>
                                    </Setter>
                                    <Setter Property="Grid.Row" TargetName="HeaderPanel" Value="1"/>
                                    <Setter Property="Grid.Row" TargetName="ContentPanel" Value="0"/>
                                    <Setter Property="RowDefinition.Height" TargetName="RowDefinition0" Value="*"/>
                                    <Setter Property="RowDefinition.Height" TargetName="RowDefinition1" Value="Auto"/>
                                    <Setter Property="FlowDirection" TargetName="HeaderPanel" Value="RightToLeft"/>
                                </Trigger>
                                <Trigger Property="TabControl.TabStripPlacement" Value="Left">
                                    <Setter Property="LayoutTransform" TargetName="HeaderPanel">
                                        <Setter.Value>
                                            <RotateTransform Angle="-90"/>
                                        </Setter.Value>
                                    </Setter>
                                    <Setter Property="Grid.Row" TargetName="HeaderPanel" Value="0"/>
                                    <Setter Property="Grid.Row" TargetName="ContentPanel" Value="0"/>
                                    <Setter Property="Grid.Column" TargetName="HeaderPanel" Value="0"/>
                                    <Setter Property="Grid.Column" TargetName="ContentPanel" Value="1"/>
                                    <Setter Property="ColumnDefinition.Width" TargetName="ColumnDefinition0" Value="Auto"/>
                                    <Setter Property="ColumnDefinition.Width" TargetName="ColumnDefinition1" Value="*"/>
                                    <Setter Property="RowDefinition.Height" TargetName="RowDefinition0" Value="*"/>
                                    <Setter Property="RowDefinition.Height" TargetName="RowDefinition1" Value="0"/>
                                    <Setter Property="VerticalAlignment" TargetName="HeaderPanel" Value="Bottom"/>
                                    <Setter Property="FlowDirection" TargetName="HeaderPanel" Value="RightToLeft"/>
                                </Trigger>
                                <Trigger Property="TabControl.TabStripPlacement" Value="Right">
                                    <Setter Property="LayoutTransform" TargetName="HeaderPanel">
                                        <Setter.Value>
                                            <RotateTransform Angle="90"/>
                                        </Setter.Value>
                                    </Setter>
                                    <Setter Property="Grid.Row" TargetName="HeaderPanel" Value="0"/>
                                    <Setter Property="Grid.Row" TargetName="ContentPanel" Value="0"/>
                                    <Setter Property="Grid.Column" TargetName="HeaderPanel" Value="1"/>
                                    <Setter Property="Grid.Column" TargetName="ContentPanel" Value="0"/>
                                    <Setter Property="ColumnDefinition.Width" TargetName="ColumnDefinition0" Value="*"/>
                                    <Setter Property="ColumnDefinition.Width" TargetName="ColumnDefinition1" Value="Auto"/>
                                    <Setter Property="RowDefinition.Height" TargetName="RowDefinition0" Value="*"/>
                                    <Setter Property="RowDefinition.Height" TargetName="RowDefinition1" Value="0"/>
                                </Trigger>

                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="TabControl.TabStripPlacement" Value="Left"/>
                                        <Condition Property="tools_controls:TabControlExt.RotateTextWhenVertical" Value="True"/>
                                        <Condition Property="FlowDirection" Value="RightToLeft"/>
                                    </MultiTrigger.Conditions>
                                    <Setter TargetName="HeaderPanel" Property="FlowDirection" Value="LeftToRight"/>
                                </MultiTrigger>
                                <Trigger Property="UIElement.IsEnabled" Value="False">
                                    <Setter Property="TextElement.Foreground" Value="{DynamicResource ResourceKey={x:Static SystemColors.GrayTextBrushKey}}"/>
									<Setter Property="Opacity" Value="0.5"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </DataTrigger>
            <DataTrigger Binding="{Binding Path=IsDisableUnloadTabItemExtContent, RelativeSource={RelativeSource Self}}" Value="True">
                <Setter Property="Control.Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type tools_controls:TabControlExt}" >
                            <Grid Name="TabControlGrid"  
			  ClipToBounds="False" SnapsToDevicePixels="True" 
			  KeyboardNavigation.TabNavigation="Local">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Name="ColumnDefinition0" />
                                    <ColumnDefinition Width="0" Name="ColumnDefinition1" />
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto" Name="RowDefinition0" />
                                    <RowDefinition Height="*" Name="RowDefinition1" />
                                </Grid.RowDefinitions>
                                <tools_controls:HeaderPanel Name="HeaderPanel" Grid.Column="0" Grid.Row="0" Panel.ZIndex="1"  
							   Focusable="False" Background="{TemplateBinding TabPanelBackground}"
							   HorizontalAlignment="Left" VerticalAlignment="Top">
                                    <tools_controls:TabPanelAdv x:Name="PART_TabPanel" Focusable="False"  DockPanel.Dock="Right"  
                                               HorizontalAlignment="Left" VerticalAlignment="Top"                                              
                                               Style="{TemplateBinding TabPanelStyle}">
                                        <tools_controls:TabLayoutPanel x:Name="PART_TabLayoutPanel" AllowDrop="True" Margin="0,0,2,0"  IsItemsHost="True" KeyboardNavigation.TabIndex="1"  HorizontalAlignment="Left" VerticalAlignment="Top">

                                        </tools_controls:TabLayoutPanel>
                                    </tools_controls:TabPanelAdv>
                                </tools_controls:HeaderPanel>
                                <windows_shared:Border3D Grid.Column="0" Grid.Row="1" AllowDrop="True"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="2" Margin="0,1,0,0"
                                Name="ContentPanel" KeyboardNavigation.TabIndex="2" KeyboardNavigation.TabNavigation="Local" 
                                BorderBrush="{TemplateBinding BorderBrush}"
                                KeyboardNavigation.DirectionalNavigation="Contained">
                                    <Border x:Name="PART_ContentPanelBorder"
                        BorderBrush="{DynamicResource BorderBrush}"
                        BorderThickness="0,0,0,0"
                        CornerRadius="2,2,2,2">
                                        <Border x:Name="PART_ContentPanelInnerBorder" 
                            Margin="3,3,3,3"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            Background="{StaticResource ContentBackgroundBrush}"
                            CornerRadius="{StaticResource TabControlExt.Aero.ContentPanelBorderCornerRadius}">

                                            <Grid x:Name="PART_ContentHolder"  Margin="{TemplateBinding Control.Padding}" AllowDrop="True"  SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}"/>

                                        </Border>
                                    </Border>
                                </windows_shared:Border3D>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="windows_shared:SkinStorage.EnableTouch" Value="true">
                                    <Setter Property="FontSize" Value="18"/>
                                </Trigger>
                                <Trigger Property="TabControl.TabStripPlacement" Value="Bottom">
                                    <Setter Property="LayoutTransform" TargetName="HeaderPanel">
                                        <Setter.Value>
                                            <RotateTransform Angle="-180"/>
                                        </Setter.Value>
                                    </Setter>
                                    <Setter Property="Grid.Row" TargetName="HeaderPanel" Value="1"/>
                                    <Setter Property="Grid.Row" TargetName="ContentPanel" Value="0"/>
                                    <Setter Property="RowDefinition.Height" TargetName="RowDefinition0" Value="*"/>
                                    <Setter Property="RowDefinition.Height" TargetName="RowDefinition1" Value="Auto"/>
                                    <Setter Property="FlowDirection" TargetName="HeaderPanel" Value="RightToLeft"/>
                                </Trigger>
								<MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="TabControl.TabStripPlacement" Value="Bottom" />
                                        <Condition Property="FlowDirection" Value="RightToLeft" />
                                    </MultiTrigger.Conditions>
                                    <Setter Property="FlowDirection" TargetName="HeaderPanel" Value="LeftToRight"/>
                                </MultiTrigger>
                                <Trigger Property="TabControl.TabStripPlacement" Value="Left">
                                    <Setter Property="LayoutTransform" TargetName="HeaderPanel">
                                        <Setter.Value>
                                            <RotateTransform Angle="-90"/>
                                        </Setter.Value>
                                    </Setter>
                                    <Setter Property="Grid.Row" TargetName="HeaderPanel" Value="0"/>
                                    <Setter Property="Grid.Row" TargetName="ContentPanel" Value="0"/>
                                    <Setter Property="Grid.Column" TargetName="HeaderPanel" Value="0"/>
                                    <Setter Property="Grid.Column" TargetName="ContentPanel" Value="1"/>
                                    <Setter Property="ColumnDefinition.Width" TargetName="ColumnDefinition0" Value="Auto"/>
                                    <Setter Property="ColumnDefinition.Width" TargetName="ColumnDefinition1" Value="*"/>
                                    <Setter Property="RowDefinition.Height" TargetName="RowDefinition0" Value="*"/>
                                    <Setter Property="RowDefinition.Height" TargetName="RowDefinition1" Value="0"/>
                                    <Setter Property="VerticalAlignment" TargetName="HeaderPanel" Value="Bottom"/>
                                    <Setter Property="FlowDirection" TargetName="HeaderPanel" Value="RightToLeft"/>
                                </Trigger>
                                <Trigger Property="TabControl.TabStripPlacement" Value="Right">
                                    <Setter Property="LayoutTransform" TargetName="HeaderPanel">
                                        <Setter.Value>
                                            <RotateTransform Angle="90"/>
                                        </Setter.Value>
                                    </Setter>
                                    <Setter Property="Grid.Row" TargetName="HeaderPanel" Value="0"/>
                                    <Setter Property="Grid.Row" TargetName="ContentPanel" Value="0"/>
                                    <Setter Property="Grid.Column" TargetName="HeaderPanel" Value="1"/>
                                    <Setter Property="Grid.Column" TargetName="ContentPanel" Value="0"/>
                                    <Setter Property="ColumnDefinition.Width" TargetName="ColumnDefinition0" Value="*"/>
                                    <Setter Property="ColumnDefinition.Width" TargetName="ColumnDefinition1" Value="Auto"/>
                                    <Setter Property="RowDefinition.Height" TargetName="RowDefinition0" Value="*"/>
                                    <Setter Property="RowDefinition.Height" TargetName="RowDefinition1" Value="0"/>
                                </Trigger>

                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="TabControl.TabStripPlacement" Value="Left"/>
                                        <Condition Property="tools_controls:TabControlExt.RotateTextWhenVertical" Value="True"/>
                                        <Condition Property="FlowDirection" Value="RightToLeft"/>
                                    </MultiTrigger.Conditions>
                                    <Setter TargetName="HeaderPanel" Property="FlowDirection" Value="LeftToRight"/>
                                </MultiTrigger>
                                <Trigger Property="UIElement.IsEnabled" Value="False">
                                    <Setter Property="TextElement.Foreground" Value="{DynamicResource ResourceKey={x:Static SystemColors.GrayTextBrushKey}}"/>
									<Setter Property="Opacity" Value="0.5"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </DataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding Path=IsDisableUnloadTabItemExtContent, RelativeSource={RelativeSource Self}}" Value="False"/>
                    <Condition Binding="{Binding Path=TabItemLayout, RelativeSource={RelativeSource Self}}" Value="SingleLine"/>
                </MultiDataTrigger.Conditions>
                <Setter Property="Control.Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type tools_controls:TabControlExt}" >
                            <Grid Name="TabControlGrid" 
			  ClipToBounds="False" SnapsToDevicePixels="True" 
			  KeyboardNavigation.TabNavigation="Local">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Name="ColumnDefinition0" />
                                    <ColumnDefinition Width="0" Name="ColumnDefinition1" />
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto" Name="RowDefinition0" />
                                    <RowDefinition Height="*" Name="RowDefinition1" />
                                </Grid.RowDefinitions>
                                <tools_controls:HeaderPanel Name="HeaderPanel" Grid.Column="0" Grid.Row="0" Panel.ZIndex="1"  
							   Focusable="False" Background="{TemplateBinding TabPanelBackground}"
							   HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
                                    <tools_controls:TabPanelAdv x:Name="PART_TabPanel" Focusable="False"  DockPanel.Dock="Right"  
                                               HorizontalAlignment="Stretch" VerticalAlignment="Stretch"   
                                                      
                                               Style="{TemplateBinding TabPanelStyle}">
                                        <tools_controls:TabScrollViewer x:Name="PART_ScrollViewer" Margin="{Binding Margin,RelativeSource={RelativeSource FindAncestor,AncestorType=ContentPresenter}}" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden">
                                            <tools_controls:TabLayoutPanel x:Name="PART_TabLayoutPanel" AllowDrop="True" Margin="0,2,2,-1"  IsItemsHost="True" KeyboardNavigation.TabIndex="1"  HorizontalAlignment="Left" VerticalAlignment="Top">

                                            </tools_controls:TabLayoutPanel>
                                        </tools_controls:TabScrollViewer>
                                    </tools_controls:TabPanelAdv>
                                </tools_controls:HeaderPanel>
                                <windows_shared:Border3D Grid.Column="0" Grid.Row="1" AllowDrop="True"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="2" Margin="0,1,0,0"
                                Name="ContentPanel" KeyboardNavigation.TabIndex="2" KeyboardNavigation.TabNavigation="Local" 
                                BorderBrush="{TemplateBinding BorderBrush}"
                                KeyboardNavigation.DirectionalNavigation="Contained">
                                    <Border x:Name="PART_ContentPanelBorder"
                        BorderBrush="{DynamicResource BorderBrush}"
                        BorderThickness="0,0,0,0"
                        CornerRadius="2,2,2,2">
                                        <Border x:Name="PART_ContentPanelInnerBorder" 
                            Margin="3,3,3,3"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            Background="{StaticResource ContentBackgroundBrush}"
                            CornerRadius="{StaticResource TabControlExt.Aero.ContentPanelBorderCornerRadius}">
                                            <ContentPresenter Content="{TemplateBinding SelectedContent}" AllowDrop="True" 
                                          ContentTemplate="{TemplateBinding SelectedContentTemplate}" 
                                          ContentSource="SelectedContent" Name="PART_SelectedContentHost" ContentTemplateSelector="{TemplateBinding ContentTemplateSelector}"
                                          Margin="{TemplateBinding Control.Padding}"
                                          SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}" />

                                        </Border>
                                    </Border>
                                </windows_shared:Border3D>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="windows_shared:SkinStorage.EnableTouch" Value="true">
                                    <Setter Property="FontSize" Value="18"/>
                                </Trigger>
                                <Trigger Property="TabControl.TabStripPlacement" Value="Bottom">
                                    <Setter Property="LayoutTransform" TargetName="HeaderPanel">
                                        <Setter.Value>
                                            <RotateTransform Angle="-180"/>
                                        </Setter.Value>
                                    </Setter>
                                    <Setter Property="Grid.Row" TargetName="HeaderPanel" Value="1"/>
                                    <Setter Property="Grid.Row" TargetName="ContentPanel" Value="0"/>
                                    <Setter Property="RowDefinition.Height" TargetName="RowDefinition0" Value="*"/>
                                    <Setter Property="RowDefinition.Height" TargetName="RowDefinition1" Value="Auto"/>
                                    <Setter Property="FlowDirection" TargetName="HeaderPanel" Value="RightToLeft"/>
                                </Trigger>
                                <Trigger Property="TabControl.TabStripPlacement" Value="Left">
                                    <Setter Property="LayoutTransform" TargetName="HeaderPanel">
                                        <Setter.Value>
                                            <RotateTransform Angle="-90"/>
                                        </Setter.Value>
                                    </Setter>
                                    <Setter Property="Grid.Row" TargetName="HeaderPanel" Value="0"/>
                                    <Setter Property="Grid.Row" TargetName="ContentPanel" Value="0"/>
                                    <Setter Property="Grid.Column" TargetName="HeaderPanel" Value="0"/>
                                    <Setter Property="Grid.Column" TargetName="ContentPanel" Value="1"/>
                                    <Setter Property="ColumnDefinition.Width" TargetName="ColumnDefinition0" Value="Auto"/>
                                    <Setter Property="ColumnDefinition.Width" TargetName="ColumnDefinition1" Value="*"/>
                                    <Setter Property="RowDefinition.Height" TargetName="RowDefinition0" Value="*"/>
                                    <Setter Property="RowDefinition.Height" TargetName="RowDefinition1" Value="0"/>
                                    <Setter Property="VerticalAlignment" TargetName="HeaderPanel" Value="Stretch"/>
                                    <Setter Property="FlowDirection" TargetName="HeaderPanel" Value="RightToLeft"/>
                                </Trigger>
                                <Trigger Property="TabControl.TabStripPlacement" Value="Right">
                                    <Setter Property="LayoutTransform" TargetName="HeaderPanel">
                                        <Setter.Value>
                                            <RotateTransform Angle="90"/>
                                        </Setter.Value>
                                    </Setter>
                                    <Setter Property="Grid.Row" TargetName="HeaderPanel" Value="0"/>
                                    <Setter Property="Grid.Row" TargetName="ContentPanel" Value="0"/>
                                    <Setter Property="Grid.Column" TargetName="HeaderPanel" Value="1"/>
                                    <Setter Property="Grid.Column" TargetName="ContentPanel" Value="0"/>
                                    <Setter Property="ColumnDefinition.Width" TargetName="ColumnDefinition0" Value="*"/>
                                    <Setter Property="ColumnDefinition.Width" TargetName="ColumnDefinition1" Value="Auto"/>
                                    <Setter Property="RowDefinition.Height" TargetName="RowDefinition0" Value="*"/>
                                    <Setter Property="RowDefinition.Height" TargetName="RowDefinition1" Value="0"/>
                                </Trigger>

                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="TabControl.TabStripPlacement" Value="Left"/>
                                        <Condition Property="tools_controls:TabControlExt.RotateTextWhenVertical" Value="True"/>
                                        <Condition Property="FlowDirection" Value="RightToLeft"/>
                                    </MultiTrigger.Conditions>
                                    <Setter TargetName="HeaderPanel" Property="FlowDirection" Value="LeftToRight"/>
                                </MultiTrigger>
                                <Trigger Property="UIElement.IsEnabled" Value="False">
                                    <Setter Property="TextElement.Foreground" Value="{DynamicResource ResourceKey={x:Static SystemColors.GrayTextBrushKey}}"/>
									<Setter Property="Opacity" Value="0.5"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding Path=IsDisableUnloadTabItemExtContent, RelativeSource={RelativeSource Self}}" Value="True"/>
                    <Condition Binding="{Binding Path=TabItemLayout, RelativeSource={RelativeSource Self}}" Value="SingleLine"/>
                </MultiDataTrigger.Conditions>
                <Setter Property="Control.Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type tools_controls:TabControlExt}" >
                            <Grid Name="TabControlGrid"  
			  ClipToBounds="False" SnapsToDevicePixels="True" 
			  KeyboardNavigation.TabNavigation="Local">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Name="ColumnDefinition0" />
                                    <ColumnDefinition Width="0" Name="ColumnDefinition1" />
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto" Name="RowDefinition0" />
                                    <RowDefinition Height="*" Name="RowDefinition1" />
                                </Grid.RowDefinitions>
                                <tools_controls:HeaderPanel Name="HeaderPanel" Grid.Column="0" Grid.Row="0" Panel.ZIndex="1"  
							   Focusable="False" Background="{TemplateBinding TabPanelBackground}"
							   HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
                                    <tools_controls:TabPanelAdv x:Name="PART_TabPanel" Focusable="False"  DockPanel.Dock="Right"  
                                               HorizontalAlignment="Stretch" VerticalAlignment="Stretch"                                              
                                               Style="{TemplateBinding TabPanelStyle}">
                                        <tools_controls:TabScrollViewer x:Name="PART_ScrollViewer" Margin="{Binding Margin,RelativeSource={RelativeSource FindAncestor,AncestorType=ContentPresenter}}" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden">
                                            <tools_controls:TabLayoutPanel x:Name="PART_TabLayoutPanel" AllowDrop="True" Margin="0,2,2,-1"  IsItemsHost="True" KeyboardNavigation.TabIndex="1"  HorizontalAlignment="Left" VerticalAlignment="Top">

                                            </tools_controls:TabLayoutPanel>
                                        </tools_controls:TabScrollViewer>
                                    </tools_controls:TabPanelAdv>
                                </tools_controls:HeaderPanel>
                                <windows_shared:Border3D Grid.Column="0" Grid.Row="1" AllowDrop="True"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                CornerRadius="2" Margin="0,1,0,0"
                                Name="ContentPanel" KeyboardNavigation.TabIndex="2" KeyboardNavigation.TabNavigation="Local" 
                                BorderBrush="{TemplateBinding BorderBrush}"
                                KeyboardNavigation.DirectionalNavigation="Contained">
                                    <Border x:Name="PART_ContentPanelBorder"
                        BorderBrush="{DynamicResource BorderBrush}"
                        BorderThickness="0,0,0,0"
                        CornerRadius="2,2,2,2">
                                        <Border x:Name="PART_ContentPanelInnerBorder" 
                            Margin="3,3,3,3"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            Background="{TemplateBinding Background}"
                            CornerRadius="{StaticResource TabControlExt.Aero.ContentPanelBorderCornerRadius}">

                                            <Grid x:Name="PART_ContentHolder"  Margin="{TemplateBinding Control.Padding}" AllowDrop="True"  SnapsToDevicePixels="{TemplateBinding UIElement.SnapsToDevicePixels}"/>

                                        </Border>
                                    </Border>
                                </windows_shared:Border3D>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="windows_shared:SkinStorage.EnableTouch" Value="true">
                                    <Setter Property="FontSize" Value="18"/>
                                </Trigger>
                                <Trigger Property="TabControl.TabStripPlacement" Value="Bottom">
                                    <Setter Property="LayoutTransform" TargetName="HeaderPanel">
                                        <Setter.Value>
                                            <RotateTransform Angle="-180"/>
                                        </Setter.Value>
                                    </Setter>
                                    <Setter Property="Grid.Row" TargetName="HeaderPanel" Value="1"/>
                                    <Setter Property="Grid.Row" TargetName="ContentPanel" Value="0"/>
                                    <Setter Property="RowDefinition.Height" TargetName="RowDefinition0" Value="*"/>
                                    <Setter Property="RowDefinition.Height" TargetName="RowDefinition1" Value="Auto"/>
                                    <Setter Property="FlowDirection" TargetName="HeaderPanel" Value="RightToLeft"/>
                                </Trigger>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="TabControl.TabStripPlacement" Value="Bottom" />
                                        <Condition Property="FlowDirection" Value="RightToLeft" />
                                    </MultiTrigger.Conditions>
                                    <Setter Property="FlowDirection" TargetName="HeaderPanel" Value="LeftToRight"/>
                                </MultiTrigger>
                                <Trigger Property="TabControl.TabStripPlacement" Value="Left">
                                    <Setter Property="LayoutTransform" TargetName="HeaderPanel">
                                        <Setter.Value>
                                            <RotateTransform Angle="-90"/>
                                        </Setter.Value>
                                    </Setter>
                                    <Setter Property="Grid.Row" TargetName="HeaderPanel" Value="0"/>
                                    <Setter Property="Grid.Row" TargetName="ContentPanel" Value="0"/>
                                    <Setter Property="Grid.Column" TargetName="HeaderPanel" Value="0"/>
                                    <Setter Property="Grid.Column" TargetName="ContentPanel" Value="1"/>
                                    <Setter Property="ColumnDefinition.Width" TargetName="ColumnDefinition0" Value="Auto"/>
                                    <Setter Property="ColumnDefinition.Width" TargetName="ColumnDefinition1" Value="*"/>
                                    <Setter Property="RowDefinition.Height" TargetName="RowDefinition0" Value="*"/>
                                    <Setter Property="RowDefinition.Height" TargetName="RowDefinition1" Value="0"/>
                                    <Setter Property="VerticalAlignment" TargetName="HeaderPanel" Value="Stretch"/>
                                    <Setter Property="FlowDirection" TargetName="HeaderPanel" Value="RightToLeft"/>
                                </Trigger>
                                <Trigger Property="TabControl.TabStripPlacement" Value="Right">
                                    <Setter Property="LayoutTransform" TargetName="HeaderPanel">
                                        <Setter.Value>
                                            <RotateTransform Angle="90"/>
                                        </Setter.Value>
                                    </Setter>
                                    <Setter Property="Grid.Row" TargetName="HeaderPanel" Value="0"/>
                                    <Setter Property="Grid.Row" TargetName="ContentPanel" Value="0"/>
                                    <Setter Property="Grid.Column" TargetName="HeaderPanel" Value="1"/>
                                    <Setter Property="Grid.Column" TargetName="ContentPanel" Value="0"/>
                                    <Setter Property="ColumnDefinition.Width" TargetName="ColumnDefinition0" Value="*"/>
                                    <Setter Property="ColumnDefinition.Width" TargetName="ColumnDefinition1" Value="Auto"/>
                                    <Setter Property="RowDefinition.Height" TargetName="RowDefinition0" Value="*"/>
                                    <Setter Property="RowDefinition.Height" TargetName="RowDefinition1" Value="0"/>
                                </Trigger>

                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="TabControl.TabStripPlacement" Value="Left"/>
                                        <Condition Property="tools_controls:TabControlExt.RotateTextWhenVertical" Value="True"/>
                                        <Condition Property="FlowDirection" Value="RightToLeft"/>
                                    </MultiTrigger.Conditions>
                                    <Setter TargetName="HeaderPanel" Property="FlowDirection" Value="LeftToRight"/>
                                </MultiTrigger>
                                <Trigger Property="UIElement.IsEnabled" Value="False">
                                    <Setter Property="TextElement.Foreground" Value="{DynamicResource ResourceKey={x:Static SystemColors.GrayTextBrushKey}}"/>
									<Setter Property="Opacity" Value="0.5"/>
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </MultiDataTrigger>
        </Style.Triggers>
    </Style>
    <Style BasedOn ="{StaticResource AeroTabControlExtStyle}" TargetType="{x:Type tools_controls:TabControlExt}"/>




    <shared_resources:ResourceWrapper x:Key="DockResourceWrapperKey" />
    <tools_resources:ResourceWrapper x:Key="ToolsResourceWrapperKey"/>
    <!--  Converters  -->
    <tools_controls:DockConverter x:Key="dockConverter" />
    <tools_controls:DockTrimmingTemplate x:Key="DockTrimmingTemplate" />
    <tools_controls:TabItemTrimmingTemplate x:Key="TabItemTrimmingTemplate" />
    <tools_controls:SideToCoordinateConverter x:Key="SideToCoordinate" />
    <tools_controls:ActualWidthSubstractBorderConverter x:Key="ActualWidthSubstractBorder" />
    <tools_controls:InvertDockConvertor x:Key="InvertDock" />
    <tools_controls:DockToOrientationConverter x:Key="DockToOrientation" />
    <tools_controls:ThicknessToSizeConverter x:Key="ThicknessToSize" />
    <tools_controls:TabItemsCornerRadiusRotateConverter x:Key="TabItemsCornerRadiusRotate" />
    <tools_controls:ThicknessRotateConverter x:Key="ThicknessRotate" />
    <tools_controls:MarginRotateConverter x:Key="MarginRotate" />
    <tools_controls:BoolToVisibilityConverter x:Key="BoolToVisible" />
    <SolidColorBrush x:Key="Default.BrushSlot" Color="#ACA899" />
    <Duration x:Key="ShadowDuration">0:0:0:4</Duration>
    <sys:TimeSpan x:Key="ShadowTimeSpan">0:0:0:2</sys:TimeSpan>
    <sys:Double x:Key="DefaultMinWindowHeaderHeight">25</sys:Double>

    <pf:CornerRadius x:Key="DefaultTabItemsCornerRadius">0,0,2,2</pf:CornerRadius>






    <sys:Double x:Key="ZeroDouble">0</sys:Double>
    <pc:Visibility x:Key="VisibilityCollapsed">Collapsed</pc:Visibility>

    <pf:GridLength x:Key="DefaultFloatWindowHeaderHeight">22</pf:GridLength>
    <pf:GridLength x:Key="DefaultFloatWindowBorderSize">4</pf:GridLength>
    <pf:GridLength x:Key="DockingFloatWindowBorderSize">2</pf:GridLength>
    <ControlTemplate x:Key="DockingDockPreviewCenterButtonVS2008Template" TargetType="{x:Type ContentControl}">
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="36" />
                <RowDefinition Height="36" />
                <RowDefinition Height="36" />
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="37" />
                <ColumnDefinition Width="37" />
                <ColumnDefinition Width="37" />
            </Grid.ColumnDefinitions>
            <Image
                Name="TopImg"
                Grid.Row="0"
                Grid.Column="1"
                Width="35"
                Height="34"
                tools_controls:DockPreviewManagerVS2005.ProviderAction="Top"
                Source="pack://application:,,,/Syncfusion.Tools.WPF;component/Framework/DockingManager/Resources/DockPreviewVS2008Top.png" />
            <Image
                Name="LeftImg"
                Grid.Row="1"
                Grid.Column="0"
                Width="35"
                Height="34"
                tools_controls:DockPreviewManagerVS2005.ProviderAction="Left"
                Source="pack://application:,,,/Syncfusion.Tools.WPF;component/Framework/DockingManager/Resources/DockPreviewVS2008Left.png" />
            <Image
                Name="CenterImg"
                Grid.Row="0"
                Grid.RowSpan="3"
                Grid.Column="0"
                Grid.ColumnSpan="3"
                Width="81"
                Height="79"
                HorizontalAlignment="Center"
                VerticalAlignment="Center"
                Panel.ZIndex="-1"
                tools_controls:DockPreviewManagerVS2005.ProviderAction="Center"
                Source="pack://application:,,,/Syncfusion.Tools.WPF;component/Framework/DockingManager/Resources/DockPreviewVS2008Center.png" />
            <Image
                Name="RightImg"
                Grid.Row="1"
                Grid.Column="2"
                Width="35"
                Height="34"
                tools_controls:DockPreviewManagerVS2005.ProviderAction="Right"
                Source="pack://application:,,,/Syncfusion.Tools.WPF;component/Framework/DockingManager/Resources/DockPreviewVS2008Right.png" />
            <Image
                Name="BottomImg"
                Grid.Row="2"
                Grid.Column="1"
                Width="35"
                Height="34"
                tools_controls:DockPreviewManagerVS2005.ProviderAction="Bottom"
                Source="pack://application:,,,/Syncfusion.Tools.WPF;component/Framework/DockingManager/Resources/DockPreviewVS2008Bottom.png" />
        </Grid>
        <ControlTemplate.Triggers>
            <DataTrigger Binding="{Binding Path=IsTopEnable, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type tools_controls:DockPreviewMainButtonVS2005}}}" Value="False">
                <Setter TargetName="TopImg" Property="Visibility" Value="Collapsed" />
            </DataTrigger>
            <DataTrigger Binding="{Binding Path=IsLeftEnable, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type tools_controls:DockPreviewMainButtonVS2005}}}" Value="False">
                <Setter TargetName="LeftImg" Property="Visibility" Value="Collapsed" />
            </DataTrigger>
            <DataTrigger Binding="{Binding Path=IsTabbedEnable, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type tools_controls:DockPreviewMainButtonVS2005}}}" Value="False">
                <Setter TargetName="CenterImg" Property="Visibility" Value="Collapsed" />
            </DataTrigger>
            <DataTrigger Binding="{Binding Path=IsRightEnable, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type tools_controls:DockPreviewMainButtonVS2005}}}" Value="False">
                <Setter TargetName="RightImg" Property="Visibility" Value="Collapsed" />
            </DataTrigger>
            <DataTrigger Binding="{Binding Path=IsBottomEnable, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type tools_controls:DockPreviewMainButtonVS2005}}}" Value="False">
                <Setter TargetName="BottomImg" Property="Visibility" Value="Collapsed" />
            </DataTrigger>
            <DataTrigger Binding="{Binding Path=CenterButtonActiveSide, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type tools_controls:DockPreviewMainButtonVS2005}}}" Value="Top">
                <Setter TargetName="TopImg" Property="Source" Value="pack://application:,,,/Syncfusion.Tools.WPF;component/Framework/DockingManager/Resources/DockPreviewVS2008TopOver.png" />
            </DataTrigger>
            <DataTrigger Binding="{Binding Path=CenterButtonActiveSide, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type tools_controls:DockPreviewMainButtonVS2005}}}" Value="Left">
                <Setter TargetName="LeftImg" Property="Source" Value="pack://application:,,,/Syncfusion.Tools.WPF;component/Framework/DockingManager/Resources/DockPreviewVS2008LeftOver.png" />
            </DataTrigger>
            <DataTrigger Binding="{Binding Path=IsDisableCenter, RelativeSource={RelativeSource AncestorType={x:Type tools_controls:DockPreviewMainButtonVS2005}}}" Value="True">
                <Setter TargetName="CenterImg" Property="Source" Value="pack://application:,,,/Syncfusion.Tools.WPF;component/Framework/DockingManager/Resources/DockPreviewVS2008Center.png" />
            </DataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding Path=CenterButtonActiveSide, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type tools_controls:DockPreviewMainButtonVS2005}}}" Value="Tabbed" />
                    <Condition Binding="{Binding Path=IsDisableCenter, RelativeSource={RelativeSource AncestorType={x:Type tools_controls:DockPreviewMainButtonVS2005}}}" Value="False" />
                </MultiDataTrigger.Conditions>
                <Setter TargetName="CenterImg" Property="Source" Value="pack://application:,,,/Syncfusion.Tools.WPF;component/Framework/DockingManager/Resources/DockPreviewVS2008CenterOver.png" />
            </MultiDataTrigger>
            <DataTrigger Binding="{Binding Path=CenterButtonActiveSide, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type tools_controls:DockPreviewMainButtonVS2005}}}" Value="Right">
                <Setter TargetName="RightImg" Property="Source" Value="pack://application:,,,/Syncfusion.Tools.WPF;component/Framework/DockingManager/Resources/DockPreviewVS2008RightOver.png" />
            </DataTrigger>
            <DataTrigger Binding="{Binding Path=CenterButtonActiveSide, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type tools_controls:DockPreviewMainButtonVS2005}}}" Value="Bottom">
                <Setter TargetName="BottomImg" Property="Source" Value="pack://application:,,,/Syncfusion.Tools.WPF;component/Framework/DockingManager/Resources/DockPreviewVS2008BottomOver.png" />
            </DataTrigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <ControlTemplate x:Key="DockingDockPreviewTopButtonVS2008Template" TargetType="{x:Type ContentControl}">
        <Image
            Name="Img"
            Width="35"
            Height="34"
            tools_controls:DockPreviewManagerVS2005.ProviderAction="GlobalTop"
            Source="pack://application:,,,/Syncfusion.Tools.WPF;component/Framework/DockingManager/Resources/DockPreviewVS2008Top.png" />
        <ControlTemplate.Triggers>
            <DataTrigger Binding="{Binding Path=IsSideButtonActive, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type tools_controls:DockPreviewMainButtonVS2005}}}" Value="true">
                <Setter TargetName="Img" Property="Source" Value="pack://application:,,,/Syncfusion.Tools.WPF;component/Framework/DockingManager/Resources/DockPreviewVS2008TopOver.png" />
            </DataTrigger>
            <!--<DataTrigger Binding="{Binding Path=IsTouchEnabled, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type tools_controls:DockingManager}}}" Value="True">
                <Setter TargetName="Img" Property="Width" Value="47"/>
                <Setter TargetName="Img" Property="Height" Value="50"/>
            </DataTrigger>-->
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <ControlTemplate x:Key="DockingDockPreviewLeftButtonVS2008Template" TargetType="{x:Type ContentControl}">
        <Image
            Name="Img"
            Width="35"
            Height="34"
            tools_controls:DockPreviewManagerVS2005.ProviderAction="GlobalLeft"
            Source="pack://application:,,,/Syncfusion.Tools.WPF;component/Framework/DockingManager/Resources/DockPreviewVS2008Left.png" />
        <ControlTemplate.Triggers>
            <DataTrigger Binding="{Binding Path=IsSideButtonActive, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type tools_controls:DockPreviewMainButtonVS2005}}}" Value="true">
                <Setter TargetName="Img" Property="Source" Value="pack://application:,,,/Syncfusion.Tools.WPF;component/Framework/DockingManager/Resources/DockPreviewVS2008LeftOver.png" />
            </DataTrigger>
            <!--<DataTrigger Binding="{Binding Path=IsTouchEnabled, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type tools_controls:DockingManager}}}" Value="True">
                <Setter TargetName="Img" Property="Width" Value="47"/>
                <Setter TargetName="Img" Property="Height" Value="50"/>
            </DataTrigger>-->
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <ControlTemplate x:Key="DockingDockPreviewBottomButtonVS2008Template" TargetType="{x:Type ContentControl}">
        <Image
            Name="Img"
            Width="35"
            Height="34"
            tools_controls:DockPreviewManagerVS2005.ProviderAction="GlobalBottom"
            Source="pack://application:,,,/Syncfusion.Tools.WPF;component/Framework/DockingManager/Resources/DockPreviewVS2008Bottom.png" />
        <ControlTemplate.Triggers>
            <DataTrigger Binding="{Binding Path=IsSideButtonActive, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type tools_controls:DockPreviewMainButtonVS2005}}}" Value="true">
                <Setter TargetName="Img" Property="Source" Value="pack://application:,,,/Syncfusion.Tools.WPF;component/Framework/DockingManager/Resources/DockPreviewVS2008BottomOver.png" />
            </DataTrigger>
            <!--<DataTrigger Binding="{Binding Path=IsTouchEnabled, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type tools_controls:DockingManager}}}" Value="True">
                <Setter TargetName="Img" Property="Width" Value="47"/>
                <Setter TargetName="Img" Property="Height" Value="50"/>
            </DataTrigger>-->
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <ControlTemplate x:Key="DockingDockPreviewRightButtonVS2008Template" TargetType="{x:Type ContentControl}">
        <Image
            Name="Img"
            Width="35"
            Height="34"
            tools_controls:DockPreviewManagerVS2005.ProviderAction="GlobalRight"
            Source="pack://application:,,,/Syncfusion.Tools.WPF;component/Framework/DockingManager/Resources/DockPreviewVS2008Right.png" />
        <ControlTemplate.Triggers>
            <DataTrigger Binding="{Binding Path=IsSideButtonActive, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type tools_controls:DockPreviewMainButtonVS2005}}}" Value="true">
                <Setter TargetName="Img" Property="Source" Value="pack://application:,,,/Syncfusion.Tools.WPF;component/Framework/DockingManager/Resources/DockPreviewVS2008RightOver.png" />
            </DataTrigger>
            <!--<DataTrigger Binding="{Binding Path=IsTouchEnabled, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type tools_controls:DockingManager}}}" Value="True">
                <Setter TargetName="Img" Property="Width" Value="47"/>
                <Setter TargetName="Img" Property="Height" Value="50"/>
            </DataTrigger>-->
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <tools_controls:FloatTrimmingTemplate x:Key="FloatTrimmingTemplate" />

    <Style x:Key="FloatWindowCloseButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="FocusVisualStyle" Value="{DynamicResource ButtonFocusVisual}" />
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="Background" Value="{DynamicResource BackgroundBrush}" />
        <Setter Property="BorderBrush" Value="{DynamicResource BorderBrush}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Foreground" Value="{DynamicResource ForegroundBrush}" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Padding" Value="1" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Image
                        Name="CloseBtnImg"
                        Source="pack://application:,,,/Syncfusion.Tools.WPF;component/Framework/DockingManager/Resources/FloatHeaderCloseBtnNormalImg.png"
                        Stretch="None" />
                    <ControlTemplate.Triggers>
                        <DataTrigger Binding="{Binding Path=IsKeyboardFocusWithin, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type tools_controls:IWindow}}}" Value="False">
                            <Setter TargetName="CloseBtnImg" Property="Source" Value="pack://application:,,,/Syncfusion.Tools.WPF;component/Framework/DockingManager/Resources/FloatHeaderCloseBtnNormalInactiveImg.png" />
                        </DataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding Path=IsMouseOver, RelativeSource={RelativeSource Self}}" Value="True" />
                                <Condition Binding="{Binding Path=IsKeyboardFocusWithin, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type tools_controls:IWindow}}}" Value="True" />
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="CloseBtnImg" Property="Source" Value="pack://application:,,,/Syncfusion.Tools.WPF;component/Framework/DockingManager/Resources/FloatHeaderCloseBtnOverImg.png" />
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding Path=IsMouseOver, RelativeSource={RelativeSource Self}}" Value="True" />
                                <Condition Binding="{Binding Path=IsKeyboardFocusWithin, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type tools_controls:IWindow}}}" Value="False" />
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="CloseBtnImg" Property="Source" Value="pack://application:,,,/Syncfusion.Tools.WPF;component/Framework/DockingManager/Resources/FloatHeaderCloseBtnOverInactiveImg.png" />
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding Path=IsPressed, RelativeSource={RelativeSource Self}}" Value="True" />
                                <Condition Binding="{Binding Path=IsKeyboardFocusWithin, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type tools_controls:IWindow}}}" Value="True" />
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="CloseBtnImg" Property="Source" Value="pack://application:,,,/Syncfusion.Tools.WPF;component/Framework/DockingManager/Resources/FloatHeaderCloseBtnPressImg.png" />
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding Path=IsKeyboardFocusWithin, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type tools_controls:IWindow}}}" Value="False" />
                                <Condition Binding="{Binding Path=IsEnabled, RelativeSource={RelativeSource Self}}" Value="False" />
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="CloseBtnImg" Property="Source" Value="pack://application:,,,/Syncfusion.Tools.WPF;component/Framework/DockingManager/Resources/FloatHeaderCloseBtnDisabledInactiveImg.png" />
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding Path=IsKeyboardFocusWithin, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type tools_controls:IWindow}}}" Value="True" />
                                <Condition Binding="{Binding Path=IsEnabled, RelativeSource={RelativeSource Self}}" Value="False" />
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="CloseBtnImg" Property="Source" Value="pack://application:,,,/Syncfusion.Tools.WPF;component/Framework/DockingManager/Resources/FloatHeaderCloseBtnDisabledImg.png" />
                        </MultiDataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <Style x:Key="{x:Type tools_controls:FloatWindowBorder}" TargetType="{x:Type tools_controls:FloatWindowBorder}">
        <Setter Property="SnapsToDevicePixels" Value="true" />
        <Setter Property="Focusable" Value="False" />
        <Setter Property="ParentWindow" Value="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type tools_controls:IWindow}}}" />
        <Setter Property="MinWindowWidth" Value="50.0" />
        <Setter Property="MinWindowHeight" Value="25" />
        <Setter Property="Height" Value="Auto" />
        <Setter Property="Width" Value="Auto" />
        <Style.Triggers>
            <Trigger Property="BorderMode" Value="Header">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type tools_controls:FloatWindowBorder}">
                            <Border
                                Name="borderTop"
                                BorderBrush="{DynamicResource BackgroundBrush}"
                                BorderThickness="0,0,0,1">
                                <Border
                                    Name="borderWrap"
                                    BorderBrush="{DynamicResource BackgroundBrush}"
                                    BorderThickness="0,0,0,1">
                                    <Border.ContextMenu>
                                        <tools_controls:CustomContextMenu Name="PART_ContextMenu" Focusable="false" />
                                    </Border.ContextMenu>
                                    <DockPanel
                                        Name="MiddleHdrImg"
                                        Background="{StaticResource HeaderBackgroundBrush}"
                                        LastChildFill="True">
                                        <ToggleButton
                                            Name="button"
                                            Margin="3,4,0,0"
                                            Padding="0"
                                            Command="tools_controls:FloatWindowBorder.ChangeStateCommand"
                                            DockPanel.Dock="Right"
                                            Foreground="{StaticResource HeaderGlyphBrush}" BorderBrush="Transparent" Background="Transparent"
                                            Template="{Binding Path=(tools_controls:IWindow.DockingManager).(tools_controls:DockingManager.CloseButtonTemplate), RelativeSource={RelativeSource AncestorType={x:Type tools_controls:IWindow}}}">
                                            <ToggleButton.ToolTip>
                                                <ToolTip Name="tooltip">
                                                    <TextBlock Name="tooltipText" Text="{Binding Source={StaticResource ToolsResourceWrapperKey}, Path=CloseButtonTooltipText}" />
                                                </ToolTip>
                                            </ToggleButton.ToolTip>
                                        </ToggleButton>
                                        <ContentPresenter
                                            Name="contentWraper"
                                            HorizontalAlignment="Left"
                                            VerticalAlignment="Center"
                                            Content="{Binding Path=(tools_controls:DockingManager.InternalDataContext).(tools_controls:DockedElementTabbedHost.HostedElement).(tools_controls:DockingManager.Header), RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type tools_controls:IWindow}}}"
                                            ContentTemplate="{Binding Path=(tools_controls:DockingManager.InternalDataContext).(tools_controls:DockedElementTabbedHost.HostedElement).(tools_controls:DockingManager.HeaderTemplate), RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type tools_controls:IWindow}}}"
                                            ContentTemplateSelector="{StaticResource FloatTrimmingTemplate}"
                                            IsHitTestVisible="True"
                                            TextBlock.Foreground="{StaticResource HeaderForegroundBrush}" />
                                    </DockPanel>
                                </Border>
                            </Border>
                            <ControlTemplate.Triggers>
                                <DataTrigger Binding="{Binding Path=IsTouchEnabled, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type tools_controls:DockingManager}}}" Value="True">
                                    <Setter Property="FontSize" Value="18" />
                                </DataTrigger>
                                <DataTrigger Binding="{Binding Path=(tools_controls:DockingManager.InternalDataContext).(tools_controls:DockedElementTabbedHost.HostedElement).(tools_controls:DockingManager.CanDocument), RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type tools_controls:IWindow}}}" Value="False">
                                    <Setter TargetName="PART_ContextMenu" Property="IsEnabledTabbedMenuItem" Value="False" />
                                </DataTrigger>
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding Path=(tools_controls:DockingManager.InternalDataContext).(tools_controls:DockedElementTabbedHost.HostedElement).(tools_controls:DockingManager.CanClose), RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type tools_controls:IWindow}}}" Value="False" />
                                        <Condition Binding="{Binding Path=(tools_controls:DockingManager.InternalDataContext).(tools_controls:DockedElementTabbedHost.ShowTabs), RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type tools_controls:IWindow}}}" Value="False" />
                                    </MultiDataTrigger.Conditions>
                                    <Setter TargetName="PART_ContextMenu" Property="IsEnabledHiddenMenuItem" Value="False" />
                                    <Setter TargetName="button" Property="IsEnabled" Value="False" />
                                </MultiDataTrigger>
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding Path=(tools_controls:IWindow.DockingManager).(tools_controls:DockingManager.CloseTabs), RelativeSource={RelativeSource AncestorType={x:Type tools_controls:IWindow}}}" Value="CloseActive" />
                                        <Condition Binding="{Binding Path=(FrameworkElement.DataContext).(FrameworkElement.DataContext).(tools_controls:DockingManager.CanClose), RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type tools_controls:IWindow}}}" Value="False" />
                                        <Condition Binding="{Binding Path=(FrameworkElement.DataContext).(tools_controls:DockedElementTabbedHost.ShowTabs), RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type tools_controls:IWindow}}}" Value="True" />
                                    </MultiDataTrigger.Conditions>
                                    <Setter TargetName="PART_ContextMenu" Property="IsEnabledHiddenMenuItem" Value="False" />
                                    <Setter TargetName="button" Property="IsEnabled" Value="False" />
                                </MultiDataTrigger>
                                <DataTrigger Binding="{Binding Path=(PrimaryElement).(tools_controls:DockingManager.NoHeader), RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type tools_controls:IWindow}}}" Value="True">
                                    <Setter TargetName="PART_ContextMenu" Property="Visibility" Value="Visible" />
                                </DataTrigger>
                                <DataTrigger Binding="{Binding Path=IsMultiHostsContainer, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type tools_controls:IWindow}}}" Value="True">
                                    <Setter TargetName="contentWraper" Property="Visibility" Value="Hidden" />
                                </DataTrigger>
                                <DataTrigger Binding="{Binding Path=IsKeyboardFocusWithin, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type tools_controls:IWindow}}}" Value="False">
                                    <Setter TargetName="MiddleHdrImg" Property="Background" Value="{DynamicResource ActiveBackgroundBrush}" />
                                </DataTrigger>

                                <Trigger SourceName="MiddleHdrImg" Property="Visibility" Value="Visible">
                                    <Setter TargetName="MiddleHdrImg" Property="Background" Value="{Binding Path=(tools_controls:IWindow.DockingManager).(tools_controls:DockingManager.FloatWindowHeaderBackground), RelativeSource={RelativeSource AncestorType={x:Type tools_controls:IWindow}}}" />
                                    <Setter TargetName="contentWraper" Property="TextBlock.Foreground" Value="{Binding Path=(tools_controls:IWindow.DockingManager).(tools_controls:DockingManager.FloatWindowHeaderForeground), RelativeSource={RelativeSource AncestorType={x:Type tools_controls:IWindow}}}" />
                                </Trigger>
                                <DataTrigger Binding="{Binding Path=IsKeyboardFocusWithin, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type tools_controls:IWindow}}}" Value="True">
                                    <Setter TargetName="MiddleHdrImg" Property="Background" Value="{Binding Path=(tools_controls:IWindow.DockingManager).(tools_controls:DockingManager.FloatWindowSelectedHeaderBackground), RelativeSource={RelativeSource AncestorType={x:Type tools_controls:IWindow}}}" />
                                    <Setter TargetName="contentWraper" Property="TextBlock.Foreground" Value="{Binding Path=(tools_controls:IWindow.DockingManager).(tools_controls:DockingManager.FloatWindowSelectedHeaderForeground), RelativeSource={RelativeSource AncestorType={x:Type tools_controls:IWindow}}}" />
                                </DataTrigger>

                                <!--<DataTrigger Binding="{Binding Path=IsMouseOver
						, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type tools_controls:IWindow}}}"
							Value="True" >
                                    <Setter TargetName="MiddleHdrImg" Property="Background"
						Value="{Binding Path=(tools_controls:IWindow.DockingManager).(tools_controls:DockingManager.FloatWindowMouseOverHeaderBackground), RelativeSource={RelativeSource AncestorType={x:Type tools_controls:IWindow}}}" />
                                    <Setter TargetName="contentWraper" Property="TextBlock.Foreground"
						Value="{Binding Path=(tools_controls:IWindow.DockingManager).(tools_controls:DockingManager.FloatWindowMouseOverHeaderForeground), RelativeSource={RelativeSource AncestorType={x:Type tools_controls:IWindow}}}" />
                                </DataTrigger>-->
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding Path=IsMouseOver, ElementName=button}" Value="False" />
                                        <Condition Binding="{Binding Path=IsKeyboardFocusWithin, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type tools_controls:IWindow}}}" Value="True" />
                                    </MultiDataTrigger.Conditions>
                                    <Setter TargetName="button" Property="Background" Value="{DynamicResource ActiveBackgroundBrush}" />
                                    <Setter TargetName="button" Property="Foreground" Value="{DynamicResource ActiveGlyphBrush}" />
                                </MultiDataTrigger>

                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding Path=(tools_controls:IWindow.DockingManager).(tools_controls:DockingManager.IsEnableHotTracking), RelativeSource={RelativeSource AncestorType={x:Type tools_controls:IWindow}}}" Value="True" />
                                        <Condition Binding="{Binding Path=IsMouseOver, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type tools_controls:IWindow}}}" Value="True" />
                                        <Condition Binding="{Binding Path=IsKeyboardFocusWithin, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type tools_controls:IWindow}}}" Value="False" />

                                    </MultiDataTrigger.Conditions>
                                    <Setter TargetName="MiddleHdrImg" Property="Background" Value="{Binding Path=(tools_controls:IWindow.DockingManager).(tools_controls:DockingManager.FloatWindowMouseOverHeaderBackground), RelativeSource={RelativeSource AncestorType={x:Type tools_controls:IWindow}}}" />
                                    <Setter TargetName="contentWraper" Property="TextBlock.Foreground" Value="{Binding Path=(tools_controls:IWindow.DockingManager).(tools_controls:DockingManager.FloatWindowMouseOverHeaderForeground), RelativeSource={RelativeSource AncestorType={x:Type tools_controls:IWindow}}}" />
                                </MultiDataTrigger>
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding Path=(tools_controls:IWindow.DockingManager).(tools_controls:DockingManager.IsEnableHotTracking), RelativeSource={RelativeSource AncestorType={x:Type tools_controls:IWindow}}}" Value="True" />
                                        <Condition Binding="{Binding Path=IsMouseOver, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type tools_controls:IWindow}}}" Value="True" />
                                        <Condition Binding="{Binding Path=IsKeyboardFocusWithin, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type tools_controls:IWindow}}}" Value="True" />

                                    </MultiDataTrigger.Conditions>
                                    <Setter TargetName="MiddleHdrImg" Property="Background" Value="{Binding Path=(tools_controls:IWindow.DockingManager).(tools_controls:DockingManager.FloatWindowSelectedHeaderBackground), RelativeSource={RelativeSource AncestorType={x:Type tools_controls:IWindow}}}" />
                                    <Setter TargetName="contentWraper" Property="TextBlock.Foreground" Value="{Binding Path=(tools_controls:IWindow.DockingManager).(tools_controls:DockingManager.FloatWindowSelectedHeaderForeground), RelativeSource={RelativeSource AncestorType={x:Type tools_controls:IWindow}}}" />
                                </MultiDataTrigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="BorderMode" Value="LeftTop">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type tools_controls:FloatWindowBorder}">
                            <Border
                                Name="border"
                                Margin="0"
                                Background="{StaticResource ContentBackgroundBrush}"
                                BorderBrush="{StaticResource ContentBorderBrush}"
                                BorderThickness="0" />



                            <ControlTemplate.Triggers>
                                <DataTrigger Binding="{Binding Path=IsKeyboardFocusWithin, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type tools_controls:IWindow}}}" Value="False">
                                    <Setter TargetName="border" Property="Background" Value="{DynamicResource ActiveBackgroundBrush}" />
                                    <Setter TargetName="border" Property="BorderBrush" Value="{DynamicResource ActiveBorderBrush}" />
                                </DataTrigger>

                                <Trigger SourceName="border" Property="Visibility" Value="Visible">
                                    <Setter TargetName="border" Property="Background" Value="{Binding Path=(tools_controls:IWindow.DockingManager).(tools_controls:DockingManager.LeftFloatWindowTopBorderBrush), RelativeSource={RelativeSource AncestorType={x:Type tools_controls:IWindow}}}" />
                                </Trigger>

                                <DataTrigger Binding="{Binding Path=IsKeyboardFocusWithin, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type tools_controls:IWindow}}}" Value="True">
                                    <Setter TargetName="border" Property="Background" Value="{Binding Path=(tools_controls:IWindow.DockingManager).(tools_controls:DockingManager.LeftFloatWindowSelectedTopBorderBrush), RelativeSource={RelativeSource AncestorType={x:Type tools_controls:IWindow}}}" />

                                </DataTrigger>
                                <DataTrigger Binding="{Binding Path=IsMouseOver, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type tools_controls:IWindow}}}" Value="True">
                                    <Setter TargetName="border" Property="Background" Value="{Binding Path=(tools_controls:IWindow.DockingManager).(tools_controls:DockingManager.LeftFloatMouseOverTopBorderBrush), RelativeSource={RelativeSource AncestorType={x:Type tools_controls:IWindow}}}" />

                                </DataTrigger>
                                <!--<MultiDataTrigger>
				<MultiDataTrigger.Conditions>
					<Condition  Binding="{Binding Path=(windows_shared:SkinStorage.VisualStyle), RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type tools_controls:DockingManager}}}"
						  Value="Default" />
					<Condition Binding="{Binding Path=IsKeyboardFocusWithin, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type tools_controls:IWindow}}}"
						  Value="True" />
				</MultiDataTrigger.Conditions>
				<Setter TargetName="border" Property="Background"
						Value="{Binding Path=(tools_controls:IWindow.DockingManager).(tools_controls:DockingManager.FloatWindowSelectedHeaderForeground), RelativeSource={RelativeSource AncestorType={x:Type tools_controls:IWindow}}}" />
			</MultiDataTrigger>-->

                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding Path=(tools_controls:IWindow.DockingManager).(tools_controls:DockingManager.IsEnableHotTracking), RelativeSource={RelativeSource AncestorType={x:Type tools_controls:IWindow}}}" Value="True" />
                                        <Condition Binding="{Binding Path=IsMouseOver, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type tools_controls:IWindow}}}" Value="True" />
                                        <Condition Binding="{Binding Path=IsKeyboardFocusWithin, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type tools_controls:IWindow}}}" Value="False" />
                                        <!--<Condition  Binding="{Binding Path=(windows_shared:SkinStorage.VisualStyle)
					, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type tools_controls:DockingManager}}}"
						Value="Default" />-->
                                    </MultiDataTrigger.Conditions>
                                    <Setter TargetName="border" Property="Background" Value="{Binding Path=(tools_controls:IWindow.DockingManager).(tools_controls:DockingManager.LeftFloatMouseOverTopBorderBrush), RelativeSource={RelativeSource AncestorType={x:Type tools_controls:IWindow}}}" />
                                </MultiDataTrigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="BorderMode" Value="RightTop">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type tools_controls:FloatWindowBorder}">
                            <Border
                                Name="border"
                                Margin="0"
                                Background="{StaticResource ContentBackgroundBrush}"
                                BorderBrush="{StaticResource ContentBorderBrush}"
                                BorderThickness="0" />


                            <ControlTemplate.Triggers>
                                <DataTrigger Binding="{Binding Path=IsKeyboardFocusWithin, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type tools_controls:IWindow}}}" Value="False">
                                    <Setter TargetName="border" Property="Background" Value="{DynamicResource ActiveBackgroundBrush}" />
                                    <Setter TargetName="border" Property="BorderBrush" Value="{DynamicResource ActiveBorderBrush}" />
                                </DataTrigger>

                                <Trigger SourceName="border" Property="Visibility" Value="Visible">
                                    <Setter TargetName="border" Property="Background" Value="{Binding Path=(tools_controls:IWindow.DockingManager).(tools_controls:DockingManager.RightFloatWindowTopBorderBrush), RelativeSource={RelativeSource AncestorType={x:Type tools_controls:IWindow}}}" />
                                </Trigger>

                                <DataTrigger Binding="{Binding Path=IsKeyboardFocusWithin, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type tools_controls:IWindow}}}" Value="True">
                                    <Setter TargetName="border" Property="Background" Value="{Binding Path=(tools_controls:IWindow.DockingManager).(tools_controls:DockingManager.RightFloatWindowSelectedTopBorderBrush), RelativeSource={RelativeSource AncestorType={x:Type tools_controls:IWindow}}}" />

                                </DataTrigger>
                                <DataTrigger Binding="{Binding Path=IsMouseOver, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type tools_controls:IWindow}}}" Value="True">
                                    <Setter TargetName="border" Property="Background" Value="{Binding Path=(tools_controls:IWindow.DockingManager).(tools_controls:DockingManager.RightFloatMouseOverTopBorderBrush), RelativeSource={RelativeSource AncestorType={x:Type tools_controls:IWindow}}}" />

                                </DataTrigger>


                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding Path=(tools_controls:IWindow.DockingManager).(tools_controls:DockingManager.IsEnableHotTracking), RelativeSource={RelativeSource AncestorType={x:Type tools_controls:IWindow}}}" Value="True" />
                                        <Condition Binding="{Binding Path=IsMouseOver, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type tools_controls:IWindow}}}" Value="True" />
                                        <Condition Binding="{Binding Path=IsKeyboardFocusWithin, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type tools_controls:IWindow}}}" Value="False" />

                                    </MultiDataTrigger.Conditions>
                                    <Setter TargetName="border" Property="Background" Value="{Binding Path=(tools_controls:IWindow.DockingManager).(tools_controls:DockingManager.RightFloatMouseOverTopBorderBrush), RelativeSource={RelativeSource AncestorType={x:Type tools_controls:IWindow}}}" />
                                </MultiDataTrigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="BorderMode" Value="Left">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type tools_controls:FloatWindowBorder}">
                            <Border
                                Name="border"
                                Margin="0"
                                Background="{DynamicResource BackgroundBrush}"
                                BorderBrush="{DynamicResource BorderBrush}"
                                BorderThickness="0" />
                            <ControlTemplate.Triggers>
                                <DataTrigger Binding="{Binding Path=IsKeyboardFocusWithin, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type tools_controls:IWindow}}}" Value="False">
                                    <Setter TargetName="border" Property="Background" Value="{DynamicResource ActiveBackgroundBrush}" />
                                    <Setter TargetName="border" Property="BorderBrush" Value="{DynamicResource ActiveBorderBrush}" />
                                </DataTrigger>

                                <Trigger SourceName="border" Property="Visibility" Value="Visible">
                                    <Setter TargetName="border" Property="Background" Value="{Binding Path=(tools_controls:IWindow.DockingManager).(tools_controls:DockingManager.LeftFloatWindowBorderBrush), RelativeSource={RelativeSource AncestorType={x:Type tools_controls:IWindow}}}" />
                                </Trigger>

                                <DataTrigger Binding="{Binding Path=IsKeyboardFocusWithin, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type tools_controls:IWindow}}}" Value="True">
                                    <Setter TargetName="border" Property="Background" Value="{Binding Path=(tools_controls:IWindow.DockingManager).(tools_controls:DockingManager.LeftFloatWindowSelectedBorderBrush), RelativeSource={RelativeSource AncestorType={x:Type tools_controls:IWindow}}}" />

                                </DataTrigger>

                                <DataTrigger Binding="{Binding Path=IsMouseOver, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type tools_controls:IWindow}}}" Value="True">
                                    <Setter TargetName="border" Property="Background" Value="{Binding Path=(tools_controls:IWindow.DockingManager).(tools_controls:DockingManager.LeftFloatMouseOverBorderBrush), RelativeSource={RelativeSource AncestorType={x:Type tools_controls:IWindow}}}" />

                                </DataTrigger>


                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding Path=(tools_controls:IWindow.DockingManager).(tools_controls:DockingManager.IsEnableHotTracking), RelativeSource={RelativeSource AncestorType={x:Type tools_controls:IWindow}}}" Value="True" />
                                        <Condition Binding="{Binding Path=IsMouseOver, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type tools_controls:IWindow}}}" Value="True" />
                                        <Condition Binding="{Binding Path=IsKeyboardFocusWithin, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type tools_controls:IWindow}}}" Value="False" />

                                    </MultiDataTrigger.Conditions>
                                    <Setter TargetName="border" Property="Background" Value="{Binding Path=(tools_controls:IWindow.DockingManager).(tools_controls:DockingManager.LeftFloatMouseOverBorderBrush), RelativeSource={RelativeSource AncestorType={x:Type tools_controls:IWindow}}}" />
                                </MultiDataTrigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="BorderMode" Value="Right">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type tools_controls:FloatWindowBorder}">
                            <Border
                                Name="border"
                                Margin="0"
                                Background="{DynamicResource BackgroundBrush}"
                                BorderBrush="{DynamicResource BorderBrush}"
                                BorderThickness="0" />
                            <ControlTemplate.Triggers>
                                <DataTrigger Binding="{Binding Path=IsKeyboardFocusWithin, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type tools_controls:IWindow}}}" Value="False">
                                    <Setter TargetName="border" Property="Background" Value="{DynamicResource ActiveBackgroundBrush}" />
                                    <Setter TargetName="border" Property="BorderBrush" Value="{DynamicResource ActiveBorderBrush}" />
                                </DataTrigger>

                                <Trigger SourceName="border" Property="Visibility" Value="Visible">
                                    <Setter TargetName="border" Property="Background" Value="{Binding Path=(tools_controls:IWindow.DockingManager).(tools_controls:DockingManager.LeftFloatWindowBorderBrush), RelativeSource={RelativeSource AncestorType={x:Type tools_controls:IWindow}}}" />
                                </Trigger>

                                <DataTrigger Binding="{Binding Path=IsKeyboardFocusWithin, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type tools_controls:IWindow}}}" Value="True">
                                    <Setter TargetName="border" Property="Background" Value="{Binding Path=(tools_controls:IWindow.DockingManager).(tools_controls:DockingManager.LeftFloatWindowSelectedBorderBrush), RelativeSource={RelativeSource AncestorType={x:Type tools_controls:IWindow}}}" />

                                </DataTrigger>

                                <DataTrigger Binding="{Binding Path=IsMouseOver, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type tools_controls:IWindow}}}" Value="True">
                                    <Setter TargetName="border" Property="Background" Value="{Binding Path=(tools_controls:IWindow.DockingManager).(tools_controls:DockingManager.LeftFloatMouseOverBorderBrush), RelativeSource={RelativeSource AncestorType={x:Type tools_controls:IWindow}}}" />

                                </DataTrigger>


                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding Path=(tools_controls:IWindow.DockingManager).(tools_controls:DockingManager.IsEnableHotTracking), RelativeSource={RelativeSource AncestorType={x:Type tools_controls:IWindow}}}" Value="True" />
                                        <Condition Binding="{Binding Path=IsMouseOver, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type tools_controls:IWindow}}}" Value="True" />
                                        <Condition Binding="{Binding Path=IsKeyboardFocusWithin, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type tools_controls:IWindow}}}" Value="False" />

                                    </MultiDataTrigger.Conditions>
                                    <Setter TargetName="border" Property="Background" Value="{Binding Path=(tools_controls:IWindow.DockingManager).(tools_controls:DockingManager.LeftFloatMouseOverBorderBrush), RelativeSource={RelativeSource AncestorType={x:Type tools_controls:IWindow}}}" />
                                </MultiDataTrigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="BorderMode" Value="LeftBottom">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type tools_controls:FloatWindowBorder}">
                            <Border
                                Name="border"
                                Margin="0"
                                Background="{DynamicResource BackgroundBrush}"
                                BorderBrush="{DynamicResource BorderBrush}"
                                BorderThickness="0" />
                            <ControlTemplate.Triggers>
                                <DataTrigger Binding="{Binding Path=IsKeyboardFocusWithin, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type tools_controls:IWindow}}}" Value="False">
                                    <Setter TargetName="border" Property="Background" Value="{DynamicResource ActiveBackgroundBrush}" />
                                    <Setter TargetName="border" Property="BorderBrush" Value="{DynamicResource ActiveBorderBrush}" />
                                </DataTrigger>

                                <Trigger SourceName="border" Property="Visibility" Value="Visible">
                                    <Setter TargetName="border" Property="Background" Value="{Binding Path=(tools_controls:IWindow.DockingManager).(tools_controls:DockingManager.LeftFloatWindowBottomBorderBrush), RelativeSource={RelativeSource AncestorType={x:Type tools_controls:IWindow}}}" />
                                </Trigger>
                                <DataTrigger Binding="{Binding Path=IsKeyboardFocusWithin, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type tools_controls:IWindow}}}" Value="True">
                                    <Setter TargetName="border" Property="Background" Value="{Binding Path=(tools_controls:IWindow.DockingManager).(tools_controls:DockingManager.LeftFloatWindowSelectedBottomBorderBrush), RelativeSource={RelativeSource AncestorType={x:Type tools_controls:IWindow}}}" />

                                </DataTrigger>
                                <DataTrigger Binding="{Binding Path=IsMouseOver, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type tools_controls:IWindow}}}" Value="True">
                                    <Setter TargetName="border" Property="Background" Value="{Binding Path=(tools_controls:IWindow.DockingManager).(tools_controls:DockingManager.LeftFloatMouseOverBottomBorderBrush), RelativeSource={RelativeSource AncestorType={x:Type tools_controls:IWindow}}}" />

                                </DataTrigger>


                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding Path=(tools_controls:IWindow.DockingManager).(tools_controls:DockingManager.IsEnableHotTracking), RelativeSource={RelativeSource AncestorType={x:Type tools_controls:IWindow}}}" Value="True" />
                                        <Condition Binding="{Binding Path=IsMouseOver, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type tools_controls:IWindow}}}" Value="True" />
                                        <Condition Binding="{Binding Path=IsKeyboardFocusWithin, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type tools_controls:IWindow}}}" Value="False" />

                                    </MultiDataTrigger.Conditions>
                                    <Setter TargetName="border" Property="Background" Value="{Binding Path=(tools_controls:IWindow.DockingManager).(tools_controls:DockingManager.LeftFloatMouseOverBottomBorderBrush), RelativeSource={RelativeSource AncestorType={x:Type tools_controls:IWindow}}}" />
                                </MultiDataTrigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="BorderMode" Value="Bottom">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type tools_controls:FloatWindowBorder}">
                            <Border
                                Name="border"
                                Margin="0"
                                Background="{DynamicResource BackgroundBrush}"
                                BorderBrush="{DynamicResource BorderBrush}"
                                BorderThickness="0" />
                            <ControlTemplate.Triggers>
                                <DataTrigger Binding="{Binding Path=IsKeyboardFocusWithin, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type tools_controls:IWindow}}}" Value="False">
                                    <Setter TargetName="border" Property="Background" Value="{DynamicResource ActiveBackgroundBrush}" />
                                    <Setter TargetName="border" Property="BorderBrush" Value="{DynamicResource ActiveBorderBrush}" />
                                </DataTrigger>

                                <Trigger SourceName="border" Property="Visibility" Value="Visible">
                                    <Setter TargetName="border" Property="Background" Value="{Binding Path=(tools_controls:IWindow.DockingManager).(tools_controls:DockingManager.LeftFloatWindowBottomBorderBrush), RelativeSource={RelativeSource AncestorType={x:Type tools_controls:IWindow}}}" />
                                </Trigger>
                                <DataTrigger Binding="{Binding Path=IsKeyboardFocusWithin, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type tools_controls:IWindow}}}" Value="True">
                                    <Setter TargetName="border" Property="Background" Value="{Binding Path=(tools_controls:IWindow.DockingManager).(tools_controls:DockingManager.LeftFloatWindowSelectedBottomBorderBrush), RelativeSource={RelativeSource AncestorType={x:Type tools_controls:IWindow}}}" />

                                </DataTrigger>
                                <DataTrigger Binding="{Binding Path=IsMouseOver, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type tools_controls:IWindow}}}" Value="True">
                                    <Setter TargetName="border" Property="Background" Value="{Binding Path=(tools_controls:IWindow.DockingManager).(tools_controls:DockingManager.LeftFloatMouseOverBorderBrush), RelativeSource={RelativeSource AncestorType={x:Type tools_controls:IWindow}}}" />

                                </DataTrigger>


                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding Path=(tools_controls:IWindow.DockingManager).(tools_controls:DockingManager.IsEnableHotTracking), RelativeSource={RelativeSource AncestorType={x:Type tools_controls:IWindow}}}" Value="True" />
                                        <Condition Binding="{Binding Path=IsMouseOver, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type tools_controls:IWindow}}}" Value="True" />
                                        <Condition Binding="{Binding Path=IsKeyboardFocusWithin, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type tools_controls:IWindow}}}" Value="False" />

                                    </MultiDataTrigger.Conditions>
                                    <Setter TargetName="border" Property="Background" Value="{Binding Path=(tools_controls:IWindow.DockingManager).(tools_controls:DockingManager.BottomFloatMouseOverBorderBrush), RelativeSource={RelativeSource AncestorType={x:Type tools_controls:IWindow}}}" />
                                </MultiDataTrigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="BorderMode" Value="RightBottom">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type tools_controls:FloatWindowBorder}">
                            <Border
                                Name="border"
                                Margin="0"
                                Background="{DynamicResource BackgroundBrush}"
                                BorderBrush="{DynamicResource BorderBrush}"
                                BorderThickness="0" />
                            <ControlTemplate.Triggers>
                                <DataTrigger Binding="{Binding Path=IsKeyboardFocusWithin, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type tools_controls:IWindow}}}" Value="False">
                                    <Setter TargetName="border" Property="Background" Value="{DynamicResource ActiveBackgroundBrush}" />
                                    <Setter TargetName="border" Property="BorderBrush" Value="{DynamicResource ActiveBorderBrush}" />
                                </DataTrigger>

                                <Trigger SourceName="border" Property="Visibility" Value="Visible">
                                    <Setter TargetName="border" Property="Background" Value="{Binding Path=(tools_controls:IWindow.DockingManager).(tools_controls:DockingManager.RightFloatWindowBottomBorderBrush), RelativeSource={RelativeSource AncestorType={x:Type tools_controls:IWindow}}}" />
                                </Trigger>
                                <DataTrigger Binding="{Binding Path=IsKeyboardFocusWithin, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type tools_controls:IWindow}}}" Value="True">
                                    <Setter TargetName="border" Property="Background" Value="{Binding Path=(tools_controls:IWindow.DockingManager).(tools_controls:DockingManager.RightFloatWindowSelectedBottomBorderBrush), RelativeSource={RelativeSource AncestorType={x:Type tools_controls:IWindow}}}" />

                                </DataTrigger>
                                <DataTrigger Binding="{Binding Path=IsMouseOver, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type tools_controls:IWindow}}}" Value="True">
                                    <Setter TargetName="border" Property="Background" Value="{Binding Path=(tools_controls:IWindow.DockingManager).(tools_controls:DockingManager.RightFloatMouseOverBottomBorderBrush), RelativeSource={RelativeSource AncestorType={x:Type tools_controls:IWindow}}}" />

                                </DataTrigger>


                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding Path=(tools_controls:IWindow.DockingManager).(tools_controls:DockingManager.IsEnableHotTracking), RelativeSource={RelativeSource AncestorType={x:Type tools_controls:IWindow}}}" Value="True" />
                                        <Condition Binding="{Binding Path=IsMouseOver, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type tools_controls:IWindow}}}" Value="True" />
                                        <Condition Binding="{Binding Path=IsKeyboardFocusWithin, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type tools_controls:IWindow}}}" Value="False" />

                                    </MultiDataTrigger.Conditions>
                                    <Setter TargetName="border" Property="Background" Value="{Binding Path=(tools_controls:IWindow.DockingManager).(tools_controls:DockingManager.RightFloatMouseOverBottomBorderBrush), RelativeSource={RelativeSource AncestorType={x:Type tools_controls:IWindow}}}" />
                                </MultiDataTrigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
    </Style>

    <!--<Style x:Key="{x:Type tools_controls:DockPreviewMainButtonVS2005}" TargetType="{x:Type ContentControl}">
        <Style.Triggers>
            <DataTrigger Binding="{Binding Path=DockType, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type tools_controls:DockPreviewMainButtonVS2005}}}" Value="None">
                <Setter Property="Template" Value="{Binding Path=ParentDockingManager.CenterDragProvider, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type tools_controls:DockPreviewMainButtonVS2005}}}" />
            </DataTrigger>
            <DataTrigger Binding="{Binding Path=DockType, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type tools_controls:DockPreviewMainButtonVS2005}}}" Value="Top">
                <Setter Property="Template" Value="{Binding Path=ParentDockingManager.TopDragProvider, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type tools_controls:DockPreviewMainButtonVS2005}}}" />
            </DataTrigger>
            <DataTrigger Binding="{Binding Path=DockType, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type tools_controls:DockPreviewMainButtonVS2005}}}" Value="Left">
                <Setter Property="Template" Value="{Binding Path=ParentDockingManager.LeftDragProvider, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type tools_controls:DockPreviewMainButtonVS2005}}}" />
            </DataTrigger>
            <DataTrigger Binding="{Binding Path=DockType, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type tools_controls:DockPreviewMainButtonVS2005}}}" Value="Right">
                <Setter Property="Template" Value="{Binding Path=ParentDockingManager.RightDragProvider, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type tools_controls:DockPreviewMainButtonVS2005}}}" />
            </DataTrigger>
            <DataTrigger Binding="{Binding Path=DockType, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type tools_controls:DockPreviewMainButtonVS2005}}}" Value="Bottom">
                <Setter Property="Template" Value="{Binding Path=ParentDockingManager.BottomDragProvider, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type tools_controls:DockPreviewMainButtonVS2005}}}" />
            </DataTrigger>
        </Style.Triggers>
    </Style>-->


    <Style x:Key="{x:Type tools_controls:DraggedElementPopup}">
        <Setter Property="ContentControl.SnapsToDevicePixels" Value="true" />
        <Setter Property="ContentControl.Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ContentControl}">
                    <Grid Focusable="False">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="4" />
                            <RowDefinition Height="*" />
                            <RowDefinition Height="4" />
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="4" />
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="4" />
                        </Grid.ColumnDefinitions>
                        <Border
                            Grid.Row="0"
                            Grid.Column="0"
                            Background="{DynamicResource BorderBrush}" />
                        <Border
                            Grid.Row="0"
                            Grid.Column="2"
                            Background="{DynamicResource BorderBrush}" />
                        <Border
                            Grid.Row="1"
                            Grid.Column="0"
                            Background="{DynamicResource BorderBrush}" />
                        <Border
                            Grid.Row="1"
                            Grid.Column="1"
                            Background="{DynamicResource BorderBrush}" />
                        <Border
                            Grid.Row="1"
                            Grid.Column="2"
                            Background="{DynamicResource BorderBrush}" />
                        <Border
                            Grid.Row="2"
                            Grid.Column="0"
                            Background="{DynamicResource BorderBrush}" />
                        <Border
                            Grid.Row="2"
                            Grid.Column="1"
                            Background="{DynamicResource BorderBrush}" />
                        <Border
                            Grid.Row="2"
                            Grid.Column="2"
                            Background="{DynamicResource BorderBrush}" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <DataTrigger Binding="{Binding Path=DragType, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type tools_controls:DraggedElementPopup}}}" Value="BorderDragging">
                <Setter Property="ContentControl.Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ContentControl}">
                            <Grid Focusable="False">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="4" />
                                    <RowDefinition Height="*" />
                                    <RowDefinition Height="4" />
                                </Grid.RowDefinitions>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="4" />
                                    <ColumnDefinition Width="*" />
                                    <ColumnDefinition Width="4" />
                                </Grid.ColumnDefinitions>
                                <Border
                                    Grid.Row="0"
                                    Grid.Column="0"
                                    Background="{DynamicResource BorderBrush}" />
                                <Border
                                    Grid.Row="0"
                                    Grid.Column="1"
                                    Background="{DynamicResource BorderBrush}" />
                                <Border
                                    Grid.Row="0"
                                    Grid.Column="2"
                                    Background="{DynamicResource BorderBrush}" />
                                <Border
                                    Grid.Row="1"
                                    Grid.Column="0"
                                    Background="{DynamicResource BorderBrush}" />
                                <Border
                                    Grid.Row="1"
                                    Grid.Column="1"
                                    Background="{DynamicResource BorderBrush}" />
                                <Border
                                    Grid.Row="1"
                                    Grid.Column="2"
                                    Background="{DynamicResource BorderBrush}" />
                                <Border
                                    Grid.Row="2"
                                    Grid.Column="0"
                                    Background="{DynamicResource BorderBrush}" />
                                <Border
                                    Grid.Row="2"
                                    Grid.Column="1"
                                    Background="{DynamicResource BorderBrush}" />
                                <Border
                                    Grid.Row="2"
                                    Grid.Column="2"
                                    Background="{DynamicResource BorderBrush}" />
                            </Grid>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </DataTrigger>
            <DataTrigger Binding="{Binding Path=DragType, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type tools_controls:DraggedElementPopup}}}" Value="ShadowDragging">
                <Setter Property="ContentControl.Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ContentControl}">
                            <Border
                                Background="{DynamicResource BackgroundBrush}"
                                BorderBrush="{DynamicResource BorderBrush}"
                                BorderThickness="0" />
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </DataTrigger>
        </Style.Triggers>
    </Style>
    <Thickness x:Key="RotateMargin">0,10,0,0</Thickness>
    <ControlTemplate x:Key="SideTabItemTemplate" TargetType="{x:Type TabItem}">
        <Border
            Name="Border"
            BorderBrush="Transparent"
            BorderThickness="1"
            CornerRadius="5,5,0,0">
            <Border.LayoutTransform>
                <RotateTransform Angle="90" />
            </Border.LayoutTransform>
            <Grid>
                <DockPanel LastChildFill="True">
                    <Rectangle
                        Width="Auto"
                        Height="Auto"
                        Fill="Transparent"
                        RadiusX="5"
                        RadiusY="5" />
                    <Border
                        Name="Icon"
                        Width="16"
                        Margin="1"
                        Background="{Binding Path=(TabItem.Content).(tools_controls:DockingManager.Icon), RelativeSource={RelativeSource TemplatedParent}}"
                        DockPanel.Dock="Left" />
                    <ContentPresenter
                        x:Name="ContentSite"
                        Margin="2,2,2,2"
                        HorizontalAlignment="Center"
                        VerticalAlignment="Center"
                        ContentSource="Header"
                        ContentTemplate="{Binding Path=(Border.DataContext).(tools_controls:DockingManager.HeaderTemplate), ElementName=Border}"
                        ContentTemplateSelector="{StaticResource TabItemTrimmingTemplate}"
                        RecognizesAccessKey="True"
                        TextBlock.Foreground="{StaticResource ContentForegroundBrush}" />
                </DockPanel>
            </Grid>
        </Border>
        <ControlTemplate.Triggers>
            <Trigger SourceName="Icon" Property="Background" Value="{x:Null}">
                <Setter TargetName="Icon" Property="Visibility" Value="Collapsed" />
            </Trigger>
            <Trigger Property="TabItem.TabStripPlacement" Value="Top">
                <Setter TargetName="Border" Property="LayoutTransform">
                    <Setter.Value>
                        <RotateTransform Angle="0" />
                    </Setter.Value>
                </Setter>
                <Setter TargetName="Border" Property="CornerRadius" Value="0,0,5,5" />
            </Trigger>
            <Trigger Property="TabItem.TabStripPlacement" Value="Bottom">
                <Setter TargetName="Border" Property="LayoutTransform">
                    <Setter.Value>
                        <RotateTransform Angle="0" />
                    </Setter.Value>
                </Setter>
                <Setter TargetName="Border" Property="CornerRadius" Value="5,5,0,0" />
            </Trigger>
            <Trigger Property="TabItem.TabStripPlacement" Value="Right">
                <Setter TargetName="Border" Property="CornerRadius" Value="0,0,5,5" />
            </Trigger>
            <DataTrigger Binding="{Binding Path=(FrameworkElement.DataContext).(tools_controls:SidePanel.IsTabGroupOwner), RelativeSource={RelativeSource Self}}" Value="True">
                <Setter TargetName="Border" Property="Margin">
                    <Setter.Value>
                        <MultiBinding Converter="{StaticResource MarginRotate}">
                            <Binding Source="{StaticResource RotateMargin}" />
                            <Binding Path="TabStripPlacement" RelativeSource="{RelativeSource TemplatedParent}" />
                        </MultiBinding>
                    </Setter.Value>
                </Setter>
            </DataTrigger>

            <Trigger SourceName="Border" Property="Visibility" Value="Visible">
                <Setter TargetName="ContentSite" Property="TextBlock.Foreground" Value="{Binding Path=TabItemsForeground, RelativeSource={RelativeSource AncestorType={x:Type tools_controls:DockingManager}}}" />
                <Setter TargetName="Border" Property="Background" Value="{Binding Path=SideItemsBackground, RelativeSource={RelativeSource AncestorType={x:Type tools_controls:DockingManager}}}" />
                <Setter TargetName="Border" Property="BorderBrush" Value="{Binding Path=SideItemsBorderBrush, RelativeSource={RelativeSource AncestorType={x:Type tools_controls:DockingManager}}}" />
                <Setter TargetName="Border" Property="BorderThickness" Value="{Binding Path=SidePanelItemsBorderThickness, RelativeSource={RelativeSource AncestorType={x:Type tools_controls:DockingManager}}}" />
            </Trigger>

            <DataTrigger Binding="{Binding Path=(Border.DataContext).(tools_controls:DockingManager.IsSideTabItemBackgroundEnabled), RelativeSource={RelativeSource Self}}" Value="True">
                <Setter TargetName="Border" Property="Background" Value="{Binding Path=(Border.DataContext).(tools_controls:DockingManager.SideTabItemBackground), RelativeSource={RelativeSource Self}}" />
            </DataTrigger>

            <DataTrigger Binding="{Binding Path=(Border.DataContext).(tools_controls:DockingManager.IsSideTabItemForegroundEnabled), RelativeSource={RelativeSource Self}}" Value="True">
                <Setter TargetName="ContentSite" Property="TextBlock.Foreground" Value="{Binding Path=(Border.DataContext).(tools_controls:DockingManager.SideTabItemForeground), ElementName=Border}" />
            </DataTrigger>
			
			<DataTrigger Binding="{Binding Path=IsLoaded,RelativeSource={RelativeSource FindAncestor
				, AncestorType={x:Type syncfusion:SidePanel}}}" Value="True">
                 <Setter Property="MinWidth" Value="{Binding Path=(syncfusion:SidePanel.DockingManager).(syncfusion:DockingManager.SidePanelSize), 
				RelativeSource={RelativeSource FindAncestor
				, AncestorType={x:Type syncfusion:SidePanel}}}" />
        <Setter Property="MinHeight"  Value="{Binding Path=(syncfusion:SidePanel.DockingManager).(syncfusion:DockingManager.SidePanelSize), 
				RelativeSource={RelativeSource FindAncestor
				, AncestorType={x:Type syncfusion:SidePanel}}}" />
            </DataTrigger>

            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsMouseOver" Value="True" />
                    <Condition Property="IsSelected" Value="False" />
                </MultiTrigger.Conditions>
                <Setter TargetName="Border" Property="Background" Value="{DynamicResource HoverBackgroundBrush}" />
                <Setter TargetName="Border" Property="BorderBrush" Value="{DynamicResource HoverBorderBrush}" />
                <Setter TargetName="ContentSite" Property="TextBlock.Foreground" Value="{DynamicResource HoverForegroundBrush}" />

            </MultiTrigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsMouseOver" Value="True" />
                    <Condition Property="IsSelected" Value="True" />
                </MultiTrigger.Conditions>
                <Setter TargetName="Border" Property="Background" Value="{DynamicResource HoverBackgroundBrush}" />
                <Setter TargetName="Border" Property="BorderBrush" Value="{DynamicResource HoverBorderBrush}" />
                <Setter TargetName="ContentSite" Property="TextBlock.Foreground" Value="{DynamicResource HoverForegroundBrush}" />
            </MultiTrigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsMouseOver" Value="False" />
                    <Condition Property="IsSelected" Value="True" />
                </MultiTrigger.Conditions>
                <Setter TargetName="Border" Property="Background" Value="{DynamicResource ActiveBackgroundBrush}" />
                <Setter TargetName="Border" Property="BorderBrush" Value="{DynamicResource ActiveBorderBrush}" />
                <Setter TargetName="ContentSite" Property="TextBlock.Foreground" Value="{DynamicResource ActiveForegroundBrush}" />
            </MultiTrigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style x:Key="SideTabItemStyle" TargetType="{x:Type TabItem}">
        <Setter Property="Header" Value="{Binding Path=(tools_controls:DockingManager.Header)}" />
        <Setter Property="ToolTip" Value="{Binding Path=(tools_controls:DockingManager.CaptionToolTip)}" />
        <Setter Property="Foreground" Value="{DynamicResource ContentForegroundBrush}" />
        <Setter Property="tools_controls:DockingManager.ListenTabItemEvents" Value="True" />       
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="Template" Value="{DynamicResource SideTabItemTemplate}" />
        <Style.Triggers>
            <DataTrigger Binding="{Binding Path=(tools_controls:DockingManager.DockingManager).(tools_controls:DockingManager.IsTouchEnabled),
							RelativeSource={RelativeSource Self}}" Value="True">
                <Setter Property="MinHeight" Value="35" />
                <Setter Property="MinWidth" Value="35" />
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="SideContextMenuStyle" TargetType="{x:Type ContextMenu}">
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="Grid.IsSharedSizeScope" Value="true" />
        <Setter Property="HasDropShadow" Value="True" />
        <Setter Property="ItemContainerStyle">
            <Setter.Value>
                <Style TargetType="{x:Type MenuItem}">
                    <Setter Property="OverridesDefaultStyle" Value="True" />
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type MenuItem}">
                                <Grid>
                                    <Border
                                        Name="MainBorder"
                                        BorderBrush="Transparent"
                                        BorderThickness="1" />
                                    <DockPanel LastChildFill="True">
                                        <TextBlock
                                            Name="GradientArea"
                                            Width="23"
                                            Background="{StaticResource ContentBackgroundBrush}"
                                            Foreground="{StaticResource ContentForegroundBrush}" />
                                        <TextBlock
                                            Name="text"
                                            Margin="6,3,6,3"
                                            Foreground="{StaticResource ContentForegroundBrush}"
                                            Text="{Binding Path=(FrameworkElement.DataContext).(tools_controls:DockingManager.Header), RelativeSource={RelativeSource Self}}" />
                                    </DockPanel>
                                </Grid>
                                <ControlTemplate.Triggers>
                                    <Trigger Property="windows_shared:SkinStorage.VisualStyle" Value="SyncOrange">
                                        <Setter TargetName="text" Property="TextBlock.Foreground" Value="#FF6E2714" />
                                    </Trigger>

                                    <Trigger Property="IsHighlighted" Value="true">
                                        <Setter TargetName="MainBorder" Property="Background" Value="{DynamicResource HoverBackgroundBrush}" />
                                        <Setter TargetName="MainBorder" Property="BorderBrush" Value="{DynamicResource HoverBorderBrush}" />
                                        <Setter TargetName="MainBorder" Property="BorderThickness" Value="1" />
                                        <Setter TargetName="GradientArea" Property="Background" Value="Transparent" />

                                    </Trigger>
                                    <MultiTrigger>
                                        <MultiTrigger.Conditions>
                                            <Condition Property="IsHighlighted" Value="True" />
                                            <Condition Property="windows_shared:SkinStorage.VisualStyle" Value="SyncOrange" />
                                        </MultiTrigger.Conditions>
                                        <Setter TargetName="text" Property="TextBlock.Foreground" Value="White" />
                                        <Setter TargetName="MainBorder" Property="Background" Value="{DynamicResource HoverBackgroundBrush}" />
                                        <Setter TargetName="MainBorder" Property="BorderBrush" Value="{DynamicResource HoverBorderBrush}" />
                                        <Setter TargetName="MainBorder" Property="BorderThickness" Value="1" />
                                        <Setter TargetName="GradientArea" Property="Background" Value="Transparent" />
                                    </MultiTrigger>

                                </ControlTemplate.Triggers>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ContextMenu}">
                    <Border
                        Name="Border"
                        Padding="1"
                        Background="{StaticResource ContentBackgroundBrush}"
                        BorderBrush="{StaticResource ContentBorderBrush}"
                        BorderThickness="1">
                        <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Cycle" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="DockTabControlStyle" TargetType="{x:Type TabControl}">
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="Background" Value="{DynamicResource ContentBackgroundBrush}" />
        <Setter Property="ItemContainerStyle" Value="{Binding Path=(tools_controls:DockedElementTabbedHost.DockingManager).(tools_controls:DockingManager.TabItemStyle), RelativeSource={RelativeSource AncestorType={x:Type tools_controls:DockedElementTabbedHost}}}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TabControl}">
                    <Grid
                        Name="Grida"
                        ClipToBounds="True"
                        KeyboardNavigation.TabNavigation="Local">
                        <Grid.RowDefinitions>
                            <RowDefinition Name="FirstRow" />
                            <RowDefinition Name="SecondRow" Height="0" />
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Name="FirstCol" />
                            <ColumnDefinition Name="SecondCol" Width="0" />
                        </Grid.ColumnDefinitions>
                        <Border
                            Name="WrapBorder"
                            Grid.Row="1"
                            Grid.Column="0"
                            Margin="0,-1,0,0"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{DynamicResource BorderBrush}"
                            BorderThickness="0">
                            <tools_controls:DirectTabPanel
                                Name="PART_TabPanel"
                                Margin="0,0,4,0"
                                Panel.ZIndex="1"
                                Background="Transparent"
                                IsItemsHost="True"
                                KeyboardNavigation.TabIndex="1" />
                        </Border>
                        <Border
                            Name="Border"
                            Grid.Row="0"
                            Grid.Column="0"
                            BorderBrush="{DynamicResource BorderBrush}"
                            BorderThickness="1"
                            CornerRadius="2"
                            KeyboardNavigation.DirectionalNavigation="Contained"
                            KeyboardNavigation.TabIndex="2"
                            KeyboardNavigation.TabNavigation="Local">
                            <ContentPresenter
                                Name="PART_SelectedContentHost"
                                Margin="{TemplateBinding Margin}"
                                ContentSource="SelectedContent" />
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <DataTrigger Binding="{Binding Path=(tools_controls:DockedElementTabbedHost.DockingManager).(tools_controls:DockingManager.IsTouchEnabled), RelativeSource={RelativeSource AncestorType={x:Type tools_controls:DockedElementTabbedHost}}}" Value="True">
                            <Setter Property="FontSize" Value="18" />
                        </DataTrigger>
                        <Trigger Property="TabStripPlacement" Value="Top">
                            <Setter TargetName="FirstRow" Property="Height" Value="Auto" />
                            <Setter TargetName="SecondRow" Property="Height" Value="*" />
                            <Setter TargetName="WrapBorder" Property="Grid.Row" Value="0" />
                            <Setter TargetName="Border" Property="Grid.Row" Value="1" />
                            <Setter TargetName="WrapBorder" Property="Margin" Value="0,0,0,-1" />
                            <Setter TargetName="PART_TabPanel" Property="Margin" Value="0,0,4,0" />
                        </Trigger>
                        <Trigger Property="TabStripPlacement" Value="Bottom">
                            <Setter TargetName="FirstRow" Property="Height" Value="*" />
                            <Setter TargetName="SecondRow" Property="Height" Value="Auto" />
                        </Trigger>
                        <Trigger Property="TabStripPlacement" Value="Left">
                            <Setter TargetName="FirstCol" Property="Width" Value="Auto" />
                            <Setter TargetName="SecondCol" Property="Width" Value="*" />
                            <Setter TargetName="Border" Property="Grid.Column" Value="1" />
                            <Setter TargetName="WrapBorder" Property="Grid.Row" Value="0" />
                            <Setter TargetName="WrapBorder" Property="Margin" Value="0,1,-1.5,0" />
                            <Setter TargetName="PART_TabPanel" Property="Margin" Value="4,0,0,0" />
                        </Trigger>
                        <Trigger Property="TabStripPlacement" Value="Right">
                            <Setter TargetName="FirstCol" Property="Width" Value="*" />
                            <Setter TargetName="SecondCol" Property="Width" Value="Auto" />
                            <Setter TargetName="WrapBorder" Property="Grid.Column" Value="1" />
                            <Setter TargetName="WrapBorder" Property="Grid.Row" Value="0" />
                            <Setter TargetName="WrapBorder" Property="Margin" Value="-1.5,1,0,0" />
                            <Setter TargetName="PART_TabPanel" Property="Margin" Value="0,0,4,0" />
                        </Trigger>

                        <Trigger SourceName="WrapBorder" Property="Visibility" Value="Visible">
                            <Setter TargetName="WrapBorder" Property="BorderBrush" Value="{Binding Path=(tools_controls:DockedElementTabbedHost.DockingManager).(tools_controls:DockingManager.TabPanelBorderBrush), RelativeSource={RelativeSource AncestorType={x:Type tools_controls:DockedElementTabbedHost}}}" />
                            <Setter TargetName="WrapBorder" Property="BorderThickness" Value="{Binding Path=(tools_controls:DockedElementTabbedHost.DockingManager).(tools_controls:DockingManager.TabPanelBorderThickness), RelativeSource={RelativeSource AncestorType={x:Type tools_controls:DockedElementTabbedHost}}}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="Visibility" Value="Visible">
                <Setter Property="Background" Value="{Binding Path=(tools_controls:DockedElementTabbedHost.DockingManager).(tools_controls:DockingManager.TabPanelBackground), RelativeSource={RelativeSource AncestorType={x:Type tools_controls:DockedElementTabbedHost}}}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="DockedElementTabbedHostStyle" TargetType="{x:Type tools_controls:DockedElementTabbedHost}">
        <Setter Property="tools_controls:DockingManager.InternalDataContext" Value="{Binding Path=(tools_controls:DockedElementTabbedHost.HostedElement), RelativeSource={RelativeSource Self}}" />
        <Setter Property="FocusVisualStyle" Value="{Binding Path=(tools_controls:DockedElementTabbedHost.DockingManager).(tools_controls:DockingManager.FocusVisualStyle), RelativeSource={RelativeSource TemplatedParent}}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type tools_controls:DockedElementTabbedHost}">
                    <Border
                        x:Name="BorderWrap"
                        Width="Auto"
                        Background="Transparent"
                        BorderBrush="{StaticResource ContentBorderBrush}"
                        BorderThickness="1"
                        FocusVisualStyle="{Binding Path=(tools_controls:DockedElementTabbedHost.DockingManager).(tools_controls:DockingManager.FocusVisualStyle), RelativeSource={RelativeSource TemplatedParent}}"
                        SnapsToDevicePixels="True">
                        <DockPanel
                            x:Name="DockPanel"
                            Width="Auto"
                            Focusable="False"
                            LastChildFill="True">
                            <tools_controls:DockHeaderPresenter
                                x:Name="header"
                                DockPanel.Dock="Top"
                                IsTemplateParenKeyboardFocusWithin="{TemplateBinding IsKeyboardFocusWithin}"
                                RenderTransformOrigin="0.5,0.5"
							Style="{Binding Path=(tools_controls:DockedElementTabbedHost.HostedElement).(tools_controls:DockingManager.HeaderStyle),
							RelativeSource={RelativeSource AncestorType={x:Type tools_controls:DockedElementTabbedHost}}}" />
                            <Grid>
                                <ContentPresenter
                                    Name="HostedElement"
                                    ClipToBounds="True"
                                    ContentSource="HostedElement"
                                    ContentTemplate="{TemplateBinding ContentControl.ContentTemplate}"
                                    ContentTemplateSelector="{TemplateBinding ContentControl.ContentTemplateSelector}" />
                                <Border
                                    Name="PART_CoverletControl"
                                    Background="Transparent"
                                    Visibility="Collapsed" />
                            </Grid>
                        </DockPanel>
                    </Border>
                    <ControlTemplate.Triggers>
                        <DataTrigger Binding="{Binding Path=(tools_controls:DockedElementTabbedHost.HostedElement).(tools_controls:DockingManager.NoHeader), RelativeSource={RelativeSource Self}}" Value="True">
                            <Setter TargetName="header" Property="Visibility" Value="Collapsed" />
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Path=(tools_controls:DockedElementTabbedHost.DockingManager).(tools_controls:DockingManager.IsDragging), RelativeSource={RelativeSource TemplatedParent}}" Value="True">
                            <Setter TargetName="PART_CoverletControl" Property="Visibility" Value="Visible" />
                        </DataTrigger>
                        <Trigger Property="MarkAsFrozen" Value="True">
                            <Setter TargetName="PART_CoverletControl" Property="Visibility" Value="Visible" />
                            <Setter TargetName="HostedElement" Property="Visibility" Value="Collapsed" />
                        </Trigger>
                        <Trigger SourceName="BorderWrap" Property="Visibility" Value="Visible">
                            <Setter TargetName="BorderWrap" Property="BorderThickness" Value="{Binding Path=(tools_controls:DockedElementTabbedHost.DockingManager).(tools_controls:DockingManager.ElementBorderThickness), RelativeSource={RelativeSource TemplatedParent}}" />

                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <DataTrigger Binding="{Binding Path=(tools_controls:DockedElementTabbedHost.HostedElement).(tools_controls:DockingManager.IsNative), RelativeSource={RelativeSource Self}}" Value="True">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type tools_controls:DockedElementTabbedHost}">
                            <Border
                                x:Name="BorderWrap"
                                Width="Auto"
                                Background="Transparent"
                                BorderBrush="{StaticResource Default.BrushSlot}"
                                BorderThickness="1"
                                FocusVisualStyle="{Binding Path=(tools_controls:DockedElementTabbedHost.DockingManager).(tools_controls:DockingManager.FocusVisualStyle), RelativeSource={RelativeSource TemplatedParent}}"
                                Focusable="True"
                                SnapsToDevicePixels="True">


                                <DockPanel
                                    x:Name="DockPanel"
                                    Width="Auto"
                                    Focusable="False"
                                    LastChildFill="True">
                                    <tools_controls:DockHeaderPresenter
                                        x:Name="header"
                                        DockPanel.Dock="Top"
                                        IsTemplateParenKeyboardFocusWithin="{TemplateBinding IsKeyboardFocusWithin}"
                                        RenderTransformOrigin="0.5,0.5"
							Style="{Binding Path=(tools_controls:DockedElementTabbedHost.HostedElement).(tools_controls:DockingManager.HeaderStyle),
							RelativeSource={RelativeSource AncestorType={x:Type tools_controls:DockedElementTabbedHost}}}" />

                                    <Grid Name="hostgrid">
                                        <TabPanel>
                                            <ContentPresenter
                                                Name="HostedElement"
                                                Width="{Binding Path=ActualWidth, ElementName=hostgrid}"
                                                Height="{Binding Path=ActualHeight, ElementName=hostgrid}"
                                                ClipToBounds="True"
                                                ContentSource="HostedElement"
                                                ContentTemplate="{TemplateBinding ContentControl.ContentTemplate}"
                                                ContentTemplateSelector="{TemplateBinding ContentControl.ContentTemplateSelector}" />
                                            <Border
                                                Name="PART_CoverletControl"
                                                Background="Transparent"
                                                Visibility="Collapsed" />
                                        </TabPanel>
                                    </Grid>

                                </DockPanel>


                            </Border>
                            <ControlTemplate.Triggers>
                                <DataTrigger Binding="{Binding Path=(tools_controls:DockedElementTabbedHost.HostedElement).(tools_controls:DockingManager.NoHeader), RelativeSource={RelativeSource Self}}" Value="True">
                                    <Setter TargetName="header" Property="Visibility" Value="Collapsed" />
                                </DataTrigger>
                                <DataTrigger Binding="{Binding Path=(tools_controls:DockedElementTabbedHost.DockingManager).(tools_controls:DockingManager.IsDragging), RelativeSource={RelativeSource TemplatedParent}}" Value="True">
                                    <Setter TargetName="PART_CoverletControl" Property="Visibility" Value="Visible" />
                                </DataTrigger>
                                <Trigger Property="MarkAsFrozen" Value="True">
                                    <Setter TargetName="PART_CoverletControl" Property="Visibility" Value="Visible" />
                                    <Setter TargetName="HostedElement" Property="Visibility" Value="Collapsed" />
                                </Trigger>
                                <Trigger SourceName="BorderWrap" Property="Visibility" Value="Visible">
                                    <Setter TargetName="BorderWrap" Property="BorderThickness" Value="{Binding Path=(tools_controls:DockedElementTabbedHost.DockingManager).(tools_controls:DockingManager.ElementBorderThickness), RelativeSource={RelativeSource TemplatedParent}}" />

                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </DataTrigger>
            <Trigger Property="ShowTabs" Value="True">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type tools_controls:DockedElementTabbedHost}">
                            <Border
                                x:Name="BorderWrapForTab"
                                Width="Auto"
                                Background="Transparent"
                                BorderBrush="{StaticResource Default.BrushSlot}"
                                BorderThickness="1"
                                SnapsToDevicePixels="True">
                                <DockPanel
                                    x:Name="DockPanel"
                                    Width="Auto"
                                    LastChildFill="True">
                                    <tools_controls:DockHeaderPresenter
                                        x:Name="header"
                                        DockPanel.Dock="Top"
                                        IsTemplateParenKeyboardFocusWithin="{TemplateBinding IsKeyboardFocusWithin}"
                                        RenderTransformOrigin="0.5,0.5"
							Style="{Binding Path=(tools_controls:DockedElementTabbedHost.HostedElement).(tools_controls:DockingManager.HeaderStyle),
							RelativeSource={RelativeSource AncestorType={x:Type tools_controls:DockedElementTabbedHost}}}" />
                                    <Grid>
                                        <TabControl
                                            Name="PART_TabControl"
                                            Padding="0"
                                            AutomationProperties.Name="TabGroup"
                                            IsSynchronizedWithCurrentItem="True"
                                            ItemsSource="{TemplateBinding TabChildren}"
                                            Style="{Binding Path=(tools_controls:DockedElementTabbedHost.DockingManager).(tools_controls:DockingManager.TabControlStyle), RelativeSource={RelativeSource TemplatedParent}}"
                                            TabStripPlacement="{Binding Path=(tools_controls:DockedElementTabbedHost.DockingManager).(tools_controls:DockingManager.DockTabAlignment), RelativeSource={RelativeSource TemplatedParent}}" />
                                        <Border
                                            Name="PART_CoverletControl"
                                            Background="Transparent"
                                            Visibility="Collapsed" />
                                    </Grid>
                                </DockPanel>
                            </Border>
                            <ControlTemplate.Triggers>
                                <DataTrigger Binding="{Binding Path=(tools_controls:DockedElementTabbedHost.HostedElement).(tools_controls:DockingManager.NoHeader), RelativeSource={RelativeSource Self}}" Value="True">
                                    <Setter TargetName="header" Property="Visibility" Value="Collapsed" />
                                </DataTrigger>
                                <DataTrigger Binding="{Binding Path=(tools_controls:DockedElementTabbedHost.DockingManager).(tools_controls:DockingManager.IsDragging), RelativeSource={RelativeSource TemplatedParent}}" Value="True">
                                    <Setter TargetName="PART_CoverletControl" Property="Visibility" Value="Visible" />
                                </DataTrigger>
                                <Trigger Property="MarkAsFrozen" Value="True">
                                    <Setter TargetName="PART_CoverletControl" Property="Visibility" Value="Visible" />
                                    <Setter TargetName="PART_TabControl" Property="Visibility" Value="Collapsed" />
                                </Trigger>
                                <Trigger SourceName="BorderWrapForTab" Property="Visibility" Value="Visible">
                                    <Setter TargetName="BorderWrapForTab" Property="BorderThickness" Value="{Binding Path=(tools_controls:DockedElementTabbedHost.DockingManager).(tools_controls:DockingManager.ElementBorderThickness), RelativeSource={RelativeSource TemplatedParent}}" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
    </Style>

    <ControlTemplate x:Key="SidePanelTemplate" TargetType="{x:Type tools_controls:SidePanel}" >
        <Canvas ClipToBounds="False" KeyboardNavigation.TabNavigation="Local">
            <Border Name="PART_BorderName"  Height="{TemplateBinding ActualHeight}" Width="{TemplateBinding ActualWidth}"
					Margin="0" ClipToBounds="True" Background="{TemplateBinding Background}"
					Panel.ZIndex="1" KeyboardNavigation.TabIndex="1"
					BorderThickness="{Binding Path=(tools_controls:SidePanel.DockingManager).(tools_controls:DockingManager.SidePanelBorderThickness)
						, RelativeSource={RelativeSource TemplatedParent}}"
					BorderBrush="{DynamicResource BorderBrush}"
				>
                <Border.ContextMenu>
                    <ContextMenu ItemsSource="{TemplateBinding TabChildren}" Style="{StaticResource SideContextMenuStyle}" />
                </Border.ContextMenu>
                <tools_controls:DirectTabPanel
                    Name="PART_PanelName"
                    IsItemsHost="True"
                    KeyboardNavigation.TabNavigation="Local" />

            </Border>
            <tools_controls:OpacityDockPanel LastChildFill="True" Opacity="{Binding Path=ContentOpacity, RelativeSource={RelativeSource TemplatedParent}}">
                <DockPanel.RenderTransform>
                    <TransformGroup>
                        <TranslateTransform>
                            <TranslateTransform.X>
                                <MultiBinding Converter="{StaticResource SideToCoordinate}" ConverterParameter="XCoordinate">
                                    <Binding Path="TabStripPlacement" RelativeSource="{RelativeSource TemplatedParent}" />
                                    <Binding Path="(Selector.SelectedItem).(tools_controls:DockingManager.DesiredWidthInDockedMode)" RelativeSource="{RelativeSource TemplatedParent}" />
                                    <Binding Path="ContentRenderTransformX" RelativeSource="{RelativeSource TemplatedParent}" />
                                    <Binding Path="(ShadowBorder).(FrameworkElement.Width)" RelativeSource="{RelativeSource TemplatedParent}"/>
                                    <Binding Path="(tools_controls:SidePanel.DockingManager).(tools_controls:DockingManager.SidePanelBorderThickness)" RelativeSource="{RelativeSource TemplatedParent}" />
                                    <Binding Path="(tools_controls:SidePanel.DockingManager).(tools_controls:DockingManager.SidePanelSize)" RelativeSource="{RelativeSource TemplatedParent}"/>
                                </MultiBinding>
                            </TranslateTransform.X>
                            <TranslateTransform.Y>
                                <MultiBinding Converter="{StaticResource SideToCoordinate}" ConverterParameter="YCoordinate">
                                    <Binding Path="TabStripPlacement" RelativeSource="{RelativeSource TemplatedParent}" />
                                    <Binding Path="(Selector.SelectedItem).(tools_controls:DockingManager.DesiredHeightInDockedMode)" RelativeSource="{RelativeSource TemplatedParent}" />
                                    <Binding Path="ContentRenderTransformY" RelativeSource="{RelativeSource TemplatedParent}" />
                                    <Binding Path="(ShadowBorder).(FrameworkElement.Height)" RelativeSource="{RelativeSource TemplatedParent}"/>
                                    <Binding Path="(tools_controls:SidePanel.DockingManager).(tools_controls:DockingManager.SidePanelBorderThickness)" RelativeSource="{RelativeSource TemplatedParent}" />
                                    <Binding Path="(tools_controls:SidePanel.DockingManager).(tools_controls:DockingManager.SidePanelSize)" RelativeSource="{RelativeSource TemplatedParent}"/>
                                </MultiBinding>
                            </TranslateTransform.Y>
                        </TranslateTransform>
                        <ScaleTransform ScaleX="{Binding Path=ContentScaleX, RelativeSource={RelativeSource TemplatedParent}}" ScaleY="{Binding Path=ContentScaleY, RelativeSource={RelativeSource TemplatedParent}}" />
                    </TransformGroup>
                </DockPanel.RenderTransform>
                <Border x:Name="PART_Shadow"
						DockPanel.Dock="{Binding Path=PanelSide
										   , RelativeSource={RelativeSource TemplatedParent}
										   , Converter={StaticResource InvertDock}}" Background="{StaticResource ActiveBorderBrush}"
					>

                </Border>
                <DockPanel Background="{Binding Path=(tools_controls:SidePanel.DockingManager).(tools_controls:DockingManager.PreviewPanelBackground),RelativeSource={RelativeSource TemplatedParent}}" >
                    <tools_controls:Splitter x:Name="PART_SideSplitter"
									   Orientation="{Binding Path=PanelSide
										   , RelativeSource={RelativeSource TemplatedParent}
										   , Converter={StaticResource DockToOrientation}}"
									   DockPanel.Dock="{Binding Path=PanelSide
										   , RelativeSource={RelativeSource TemplatedParent}
										   , Converter={StaticResource InvertDock}}" />

                    <Border Name="WrapBorder"
                  BorderBrush="{StaticResource Default.BrushSlot}"	Background="Transparent"
                  BorderThickness="1">
                        <DockPanel Name="FlyPanel" >
                            <DockPanel.Width>
                                <MultiBinding Converter="{StaticResource ActualWidthSubstractBorder}" ConverterParameter="ContentWidthParameter"
                        UpdateSourceTrigger="PropertyChanged"
									  >
                                    <Binding Path="(Selector.SelectedItem).(tools_controls:DockingManager.DesiredWidthInDockedMode)"
                       RelativeSource="{RelativeSource TemplatedParent}"
                       UpdateSourceTrigger="PropertyChanged"
									 />
                                    <Binding Path="ActualWidth" RelativeSource="{RelativeSource TemplatedParent}" />
                                    <Binding Path="ActualWidth" ElementName="PART_SideSplitter"  />
                                    <Binding Path="PanelSide" RelativeSource="{RelativeSource TemplatedParent}" />
                                    <Binding Path="BorderThickness" ElementName="WrapBorder" />
                                </MultiBinding>
                            </DockPanel.Width>
                            <DockPanel.Height>
                                <MultiBinding Converter="{StaticResource ActualWidthSubstractBorder}" ConverterParameter="ContentHeightParameter">
                                    <Binding Path="(Selector.SelectedItem).(tools_controls:DockingManager.DesiredHeightInDockedMode)"
                       RelativeSource="{RelativeSource TemplatedParent}" />
                                    <Binding Path="ActualHeight" RelativeSource="{RelativeSource TemplatedParent}" />
                                    <Binding Path="ActualHeight" ElementName="PART_SideSplitter"  />
                                    <Binding Path="PanelSide" RelativeSource="{RelativeSource TemplatedParent}" />
                                    <Binding Path="BorderThickness" ElementName="WrapBorder" />
                                </MultiBinding>
                            </DockPanel.Height>
                            <tools_controls:DockHeaderPresenter x:Name="PART_Header" DockPanel.Dock="Top"
                              IsRichHeader="False" 
                              Style="{Binding Path=(tools_controls:DockingManager.InternalDataContext).(tools_controls:DockingManager.HeaderStyle)
							    , RelativeSource={RelativeSource Self}}"
                              IsTemplateParenKeyboardFocusWithin="{TemplateBinding IsShowedFocusedItem}"
													/>
                            <Border Name="Content">
                                <ContentPresenter  Margin="{TemplateBinding Margin}"
                        		ContentSource="SelectedContent" />
                            </Border>
                        </DockPanel>
                    </Border>
                </DockPanel>
            </tools_controls:OpacityDockPanel>
        </Canvas>
        <ControlTemplate.Triggers>
            <DataTrigger Binding="{Binding Path=(tools_controls:DockingManager.InternalDataContext).(tools_controls:DockingManager.IsDragging)
							   , RelativeSource={RelativeSource TemplatedParent}}"
						Value="True" >
                <Setter Property="IsEnabled" Value="False" />
            </DataTrigger>
            <Trigger Property="PanelSide" Value="Top">
                <Setter TargetName="PART_Shadow" Property="Height" Value="4" />
                <Setter TargetName="PART_Shadow" Property="Background" Value="{DynamicResource ActiveBorderBrush}" />
            </Trigger>
            <Trigger Property="PanelSide" Value="Bottom">
                <Setter TargetName="PART_Shadow" Property="Height" Value="4" />
                <Setter TargetName="PART_Shadow" Property="Background" Value="{DynamicResource ActiveBorderBrush}" />
            </Trigger>
            <Trigger Property="PanelSide" Value="Right">
                <Setter TargetName="PART_Shadow" Property="Width" Value="4" />
                <Setter TargetName="PART_Shadow" Property="Background" Value="{DynamicResource ActiveBorderBrush}" />
            </Trigger>
            <Trigger Property="PanelSide" Value="Left">
                <Setter TargetName="PART_Shadow" Property="Width" Value="4" />
            </Trigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding Path=(tools_controls:SidePanel.DockingManager).(tools_controls:DockingManager.AutoHideAnimationMode)
								, RelativeSource={RelativeSource Self}}"
							   Value="Slide" />
                    <Condition Binding="{Binding Path=IsContentHiden, RelativeSource={RelativeSource Self}}"
							   Value="True" />
                    <Condition Binding="{Binding Path=PanelSide, RelativeSource={RelativeSource Self}
										   , Converter={StaticResource DockToOrientation}}"
							   Value="Vertical"/>
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.EnterActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation
                                Storyboard.TargetName="PART_Shadow"
                                Storyboard.TargetProperty="Width"
                                To="0"
                                Duration="{StaticResource ShadowDuration}" />
                        </Storyboard>
                    </BeginStoryboard>
                </MultiDataTrigger.EnterActions>
                <MultiDataTrigger.ExitActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation
                                Storyboard.TargetName="PART_Shadow"
                                Storyboard.TargetProperty="Width"
                                To="4"
                                Duration="{StaticResource ShadowDuration}" />
                        </Storyboard>
                    </BeginStoryboard>
                </MultiDataTrigger.ExitActions>
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding Path=(tools_controls:SidePanel.DockingManager).(tools_controls:DockingManager.AutoHideAnimationMode)
								, RelativeSource={RelativeSource Self}}"
							   Value="Slide" />
                    <Condition Binding="{Binding Path=IsContentHiden, RelativeSource={RelativeSource Self}}"
							   Value="True" />
                    <Condition Binding="{Binding Path=PanelSide, RelativeSource={RelativeSource Self}
										   , Converter={StaticResource DockToOrientation}}"
							   Value="Horizontal"/>
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.EnterActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation
                                Storyboard.TargetName="PART_Shadow"
                                Storyboard.TargetProperty="Height"
                                To="0"
                                Duration="{StaticResource ShadowDuration}" />
                        </Storyboard>
                    </BeginStoryboard>
                </MultiDataTrigger.EnterActions>
                <MultiDataTrigger.ExitActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation
                                Storyboard.TargetName="PART_Shadow"
                                Storyboard.TargetProperty="Height"
                                To="4"
                                Duration="{StaticResource ShadowDuration}" />
                        </Storyboard>
                    </BeginStoryboard>
                </MultiDataTrigger.ExitActions>
            </MultiDataTrigger>
            <Trigger SourceName="WrapBorder" Property="Visibility" Value="Visible">
                <Setter Property="BorderThickness" TargetName="WrapBorder" Value="{Binding Path=ElementBorderThickness
						, RelativeSource={RelativeSource AncestorType={x:Type tools_controls:DockingManager}}}" />
                <Setter TargetName="PART_BorderName" Property="BorderBrush" Value="{Binding Path=(tools_controls:SidePanel.DockingManager).(tools_controls:DockingManager.SidePanelBorderBrush), RelativeSource={RelativeSource TemplatedParent}}" />
            </Trigger>
            <DataTrigger Binding="{Binding Path=(tools_controls:SidePanel.DockingManager).(tools_controls:DockingManager.ShowShadowOnSidePanel)
								, RelativeSource={RelativeSource Self}}"
						 Value="False">
                <Setter TargetName="PART_Shadow" Property="Background" Value="Transparent"></Setter>
            </DataTrigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <ControlTemplate x:Key="PopupSidePanelTemplate" TargetType="{x:Type tools_controls:SidePanel}">
        <Canvas ClipToBounds="False" KeyboardNavigation.TabNavigation="Local">
            <Border Name="PART_BorderName"  Height="{TemplateBinding ActualHeight}" Width="{TemplateBinding ActualWidth}"
					Margin="0" ClipToBounds="True" Background="{TemplateBinding Background}"
					Panel.ZIndex="1" KeyboardNavigation.TabIndex="1"
					BorderThickness="{Binding Path=SidePanelBorderThickness
						, RelativeSource={RelativeSource FindAncestor
						, AncestorType={x:Type tools_controls:DockingManager}}}"
					BorderBrush="{DynamicResource BorderBrush}"
				>
                <Border.ContextMenu>
                    <ContextMenu ItemsSource="{TemplateBinding TabChildren}" Style="{StaticResource SideContextMenuStyle}" />
                </Border.ContextMenu>
                <tools_controls:DirectTabPanel
                    Name="PART_PanelName"
                    IsItemsHost="True"
                    KeyboardNavigation.TabNavigation="Local" />

            </Border>
            <tools_controls:PopupSidePanel x:Name="PART_PopupPanel">
                <DockPanel>
                    <DockPanel Background="{Binding Path=(tools_controls:SidePanel.DockingManager).(tools_controls:DockingManager.PreviewPanelBackground),RelativeSource={RelativeSource TemplatedParent}}" >
                        <tools_controls:Splitter x:Name="PART_SideSplitter"
									   Orientation="{Binding Path=PanelSide
										   , RelativeSource={RelativeSource TemplatedParent}
										   , Converter={StaticResource DockToOrientation}}"
									   DockPanel.Dock="{Binding Path=PanelSide
										   , RelativeSource={RelativeSource TemplatedParent}
										   , Converter={StaticResource InvertDock}}" />

                        <Border Name="WrapBorder"
                  BorderBrush="{StaticResource Default.BrushSlot}"	Background="Transparent"
                  BorderThickness="1">
                            <DockPanel Name="FlyPanel" >
                                <DockPanel.Width>
                                    <MultiBinding Converter="{StaticResource ActualWidthSubstractBorder}" ConverterParameter="ContentWidthParameter"
                        UpdateSourceTrigger="PropertyChanged"
									  >
                                        <Binding Path="(Selector.SelectedItem).(tools_controls:DockingManager.DesiredWidthInDockedMode)"
                       RelativeSource="{RelativeSource TemplatedParent}"
                       UpdateSourceTrigger="PropertyChanged"
									 />
                                        <Binding Path="ActualWidth" RelativeSource="{RelativeSource TemplatedParent}" />
                                        <Binding Path="ActualWidth" ElementName="PART_SideSplitter"  />
                                        <Binding Path="PanelSide" RelativeSource="{RelativeSource TemplatedParent}" />
                                        <Binding Path="BorderThickness" ElementName="WrapBorder" />
                                    </MultiBinding>
                                </DockPanel.Width>
                                <DockPanel.Height>
                                    <MultiBinding Converter="{StaticResource ActualWidthSubstractBorder}" ConverterParameter="ContentHeightParameter">
                                        <Binding Path="(Selector.SelectedItem).(tools_controls:DockingManager.DesiredHeightInDockedMode)"
                       RelativeSource="{RelativeSource TemplatedParent}" />
                                        <Binding Path="ActualHeight" RelativeSource="{RelativeSource TemplatedParent}" />
                                        <Binding Path="ActualHeight" ElementName="PART_SideSplitter"  />
                                        <Binding Path="PanelSide" RelativeSource="{RelativeSource TemplatedParent}" />
                                        <Binding Path="BorderThickness" ElementName="WrapBorder" />
                                    </MultiBinding>
                                </DockPanel.Height>
                                <tools_controls:DockHeaderPresenter x:Name="PART_Header" DockPanel.Dock="Top"
                              IsRichHeader="False" 
                              Style="{Binding Path=(tools_controls:DockingManager.InternalDataContext).(tools_controls:DockingManager.HeaderStyle)
							    , RelativeSource={RelativeSource Self}}"
                              IsTemplateParenKeyboardFocusWithin="{TemplateBinding IsShowedFocusedItem}"
													/>
                                <Border Name="Content">
                                    <ContentPresenter  Margin="{TemplateBinding Margin}"
                        		ContentSource="SelectedContent" />
                                </Border>
                            </DockPanel>
                        </Border>
                    </DockPanel>
                </DockPanel>
            </tools_controls:PopupSidePanel>
        </Canvas>
        <ControlTemplate.Triggers>
            <DataTrigger Binding="{Binding Path=(tools_controls:DockingManager.IsDragging), RelativeSource={RelativeSource AncestorType={x:Type tools_controls:DockingManager}}}" Value="True">
                <Setter Property="IsEnabled" Value="False" />
            </DataTrigger>

            <Trigger SourceName="WrapBorder" Property="Visibility" Value="Visible">
                <Setter Property="BorderThickness" TargetName="WrapBorder" Value="{Binding Path=ElementBorderThickness
						, RelativeSource={RelativeSource AncestorType={x:Type tools_controls:DockingManager}}}" />
                <Setter TargetName="PART_BorderName" Property="BorderBrush" Value="{Binding Path=(tools_controls:SidePanel.DockingManager).(tools_controls:DockingManager.SidePanelBorderBrush), RelativeSource={RelativeSource TemplatedParent}}" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style x:Key="SidePanelStyle" TargetType="{x:Type tools_controls:SidePanel}">
        <Setter Property="ItemContainerStyle" Value="{Binding Path=(tools_controls:SidePanel.DockingManager).(tools_controls:DockingManager.SideItemStyle), RelativeSource={RelativeSource Self}}" />
        <Setter Property="Visibility" Value="Collapsed" />
        <Setter Property="Background" Value="{DynamicResource BackgroundBrush}" />
        <Setter Property="tools_controls:DockingManager.InternalDataContext" Value="{Binding Path=SelectedItem, RelativeSource={RelativeSource Self}}" />
        <Setter Property="Template" Value="{DynamicResource SidePanelTemplate}" />

        <Style.Triggers>
            <DataTrigger Binding="{Binding Path=HasItems, RelativeSource={RelativeSource Self}}" Value="True">
                <Setter Property="Visibility" Value="Visible" />
            </DataTrigger>
            <Trigger Property="Visibility" Value="Visible">
                <Setter Property="Background" Value="{Binding Path=(tools_controls:SidePanel.DockingManager).(tools_controls:DockingManager.SidePanelBackground), RelativeSource={RelativeSource Self}}" />
            </Trigger>
            <DataTrigger Binding="{Binding Path=(tools_controls:SidePanel.DockingManager).(tools_controls:DockingManager.UsePopupAutoHidePreview), RelativeSource={RelativeSource Self}}" Value="True">
                <Setter Property="Template" Value="{DynamicResource PopupSidePanelTemplate}" />
            </DataTrigger>
            <DataTrigger Binding="{Binding Path=(tools_controls:SidePanel.DockingManager).(tools_controls:DockingManager.IsTouchEnabled), RelativeSource={RelativeSource Self}}" Value="True">
                <Setter Property="FontSize" Value="18" />
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="DocumentContainerKey" TargetType="{x:Type tools_controls:DocumentContainer}">
        <Setter Property="SwitchMode" Value="{Binding Path=SwitchMode, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type tools_controls:DockingManager}}}" />
        <Setter Property="Mode" Value="{Binding Path=ContainerMode, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type tools_controls:DockingManager}}}" />
        <Setter Property="ShowTabListContextMenu" Value="{Binding Path=ShowTabListContextMenu, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type tools_controls:DockingManager}}}" />
        <Setter Property="ShowTabItemContextMenu" Value="{Binding Path=ShowTabItemContextMenu, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type tools_controls:DockingManager}}}" />
        <Setter Property="UseInteropCompatibility" Value="{Binding Path=UseInteropCompatibilityMode, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type tools_controls:DockingManager}}}" />
        <Setter Property="IsInMDIMaximizedState" Value="{Binding Path=IsInMDIMaximizedState, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type tools_controls:DockingManager}}}" />
    </Style>

    <Style x:Key="RowDefinitionStyle" TargetType="RowDefinition">
        <Setter Property="Height" Value="22" />
        <Style.Triggers>
            <DataTrigger Binding="{Binding Path=(tools_controls:DockingManager.DockingManager).(tools_controls:DockingManager.IsTouchEnabled),
							RelativeSource={RelativeSource TemplatedParent}}" Value="True">
                <Setter Property="Height" Value="35" />
            </DataTrigger>
        </Style.Triggers>
    </Style>
    <ControlTemplate x:Key="FloatWindowTemplate" TargetType="{x:Type ContentControl}">
        <AdornerDecorator>
            <DockPanel Focusable="False" Opacity="{Binding Path=Opacity, RelativeSource={RelativeSource AncestorType={x:Type tools_controls:IWindow}}}">
                <Border
                    Name="FloatWindowOutBorder"
                    Margin="0,0,1,0"
                    Background="{StaticResource ContentBackgroundBrush}"
                    BorderBrush="{StaticResource ContentBorderBrush}"
                    BorderThickness="1"
                    Focusable="False">
                    <Grid Focusable="False">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="1" />
                            <RowDefinition Name="TopRow" Style="{StaticResource RowDefinitionStyle}" />
                            <RowDefinition Height="*" />
                            <RowDefinition Name="BottomRow" Height="1" />
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Name="LeftCol" Width="1" />
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Name="RightCol" Width="1" />
                        </Grid.ColumnDefinitions>
                        <tools_controls:FloatWindowBorder
                            Name="Top"
                            Grid.Row="0"
                            Grid.Column="0"
                            Grid.ColumnSpan="3"
                            BorderMode="Bottom" />
                        <tools_controls:FloatWindowBorder
                            Name="BorderLeftTop"
                            Grid.Row="1"
                            Grid.Column="0"
                            BorderMode="LeftTop" />
                        <tools_controls:FloatWindowBorder
                            Name="BorderHeader"
                            Grid.Row="1"
                            Grid.Column="1"
                            BorderMode="Header" />
                        <tools_controls:FloatWindowBorder
                            Name="BorderRightTop"
                            Grid.Row="1"
                            Grid.Column="2"
                            BorderMode="RightTop" />
                        <tools_controls:FloatWindowBorder
                            Name="BorderLeft"
                            Grid.Row="2"
                            Grid.Column="0"
                            BorderMode="Left" />
                        <ContentPresenter
                            Name="ContentPresenter"
                            Grid.Row="2"
                            Grid.Column="1"
                            Content="{TemplateBinding ContentControl.Content}"
                            ContentTemplate="{TemplateBinding ContentControl.ContentTemplate}" />
                        <tools_controls:FloatWindowBorder
                            Name="BorderRight"
                            Grid.Row="2"
                            Grid.Column="2"
                            BorderMode="Right" />
                        <tools_controls:FloatWindowBorder
                            Name="BorderLeftBottom"
                            Grid.Row="3"
                            Grid.Column="0"
                            BorderMode="LeftBottom" />
                        <tools_controls:FloatWindowBorder
                            Name="BorderBottom"
                            Grid.Row="3"
                            Grid.Column="1"
                            BorderMode="Bottom" />
                        <tools_controls:FloatWindowBorder
                            Name="BorderRightBottom"
                            Grid.Row="3"
                            Grid.Column="2"
                            BorderMode="RightBottom" />
                    </Grid>
                </Border>
            </DockPanel>
        </AdornerDecorator>

    </ControlTemplate>

    <ControlTemplate x:Key="TabItemTemplate" TargetType="{x:Type TabItem}">
        <Grid Name="Transform">
            <tools_controls:ContextMenuBorder
                Name="Border"
                Background="{StaticResource ContentBackgroundBrush}"
                BorderBrush="{StaticResource ContentBorderBrush}"
                BorderThickness="1">
                <tools_controls:ContextMenuBorder.CornerRadius>
                    <MultiBinding Converter="{StaticResource TabItemsCornerRadiusRotate}">
                        <Binding Path="(tools_controls:DockedElementTabbedHost.DockingManager).(tools_controls:DockingManager.TabItemsCornerRadius)" RelativeSource="{RelativeSource AncestorType={x:Type tools_controls:DockedElementTabbedHost}}" />
                        <Binding Path="TabStripPlacement" RelativeSource="{RelativeSource TemplatedParent}" />
                    </MultiBinding>
                </tools_controls:ContextMenuBorder.CornerRadius>
                <Border.ContextMenu>
                    <tools_controls:CustomContextMenu Name="PART_ContextMenu" Focusable="false" />
                </Border.ContextMenu>
                <Border.LayoutTransform>
                    <RotateTransform Angle="0" />
                </Border.LayoutTransform>
                <DockPanel LastChildFill="True">
                    <Border
                        Name="Icon"
                        Width="16"
                        Margin="1"
                        Background="{Binding Path=(TabItem.Content).(tools_controls:DockingManager.Icon), RelativeSource={RelativeSource TemplatedParent}}"
                        DockPanel.Dock="Left" />
                    <ContentPresenter
                        x:Name="ContentSite"
                        Margin="2,2,2,2"
                        HorizontalAlignment="Center"
                        VerticalAlignment="Center"
                        ContentSource="Header"
                        ContentTemplate="{Binding Path=(TabItem.Content).(tools_controls:DockingManager.HeaderTemplate), RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type TabItem}}}"
                        ContentTemplateSelector="{StaticResource TabItemTrimmingTemplate}"
                        RecognizesAccessKey="True" />
                </DockPanel>
            </tools_controls:ContextMenuBorder>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger SourceName="Icon" Property="Background" Value="{x:Null}">
                <Setter TargetName="Icon" Property="Visibility" Value="Collapsed" />
            </Trigger>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter TargetName="Border" Property="Background" Value="{DynamicResource HoverBackgroundBrush}" />
                <Setter TargetName="Border" Property="BorderBrush" Value="{DynamicResource HoverBorderBrush}" />
                <Setter Property="Foreground" Value="{DynamicResource HoverForegroundBrush}" />
            </Trigger>
            <Trigger Property="TabItem.TabStripPlacement" Value="Left">
                <Setter TargetName="Border" Property="LayoutTransform">
                    <Setter.Value>
                        <RotateTransform Angle="90" />
                    </Setter.Value>
                </Setter>
                <Setter TargetName="Border" Property="Margin" Value="-0.5,-0.5,0.5,0" />
                <Setter TargetName="ContentSite" Property="Margin" Value="2.5,2.5,2.5,2.5" />
                <Setter TargetName="ContentSite" Property="TextBlock.FontFamily" Value="Microsoft Sans Serif" />
            </Trigger>
            <Trigger Property="TabItem.TabStripPlacement" Value="Right">
                <Setter TargetName="Border" Property="LayoutTransform">
                    <Setter.Value>
                        <RotateTransform Angle="90" />
                    </Setter.Value>
                </Setter>
                <Setter TargetName="Border" Property="Margin" Value="0.5,-0.5,-0.5,0" />
                <Setter TargetName="ContentSite" Property="Margin" Value="2.5,2.5,2.5,2.5" />
                <Setter TargetName="ContentSite" Property="TextBlock.FontFamily" Value="Microsoft Sans Serif" />
            </Trigger>
            <DataTrigger Binding="{Binding Path=(Border.DataContext).(tools_controls:DockingManager.CanClose), ElementName=Border}" Value="False">
                <Setter TargetName="PART_ContextMenu" Property="IsEnabledHiddenMenuItem" Value="False" />
            </DataTrigger>
            <DataTrigger Binding="{Binding Path=(Border.DataContext).(tools_controls:DockingManager.State), ElementName=Border}" Value="Float">
                <Setter TargetName="PART_ContextMenu" Property="IsEnabledAutoHideMenuItem" Value="False" />
            </DataTrigger>
            <DataTrigger Binding="{Binding Path=(Border.DataContext).(tools_controls:DockingManager.CanFloat), ElementName=Border}" Value="False">
                <Setter TargetName="PART_ContextMenu" Property="IsEnabledFloatingMenuItem" Value="False" />
            </DataTrigger>
            <DataTrigger Binding="{Binding Path=(Border.DataContext).(tools_controls:DockingManager.CanAutoHide), ElementName=Border}" Value="False">
                <Setter TargetName="PART_ContextMenu" Property="IsEnabledAutoHideMenuItem" Value="False" />
            </DataTrigger>
            <DataTrigger Binding="{Binding Path=(Border.DataContext).(tools_controls:DockingManager.CanDocument), ElementName=Border}" Value="False">
                <Setter TargetName="PART_ContextMenu" Property="IsEnabledTabbedMenuItem" Value="False" />
            </DataTrigger>

            <Trigger Property="IsSelected" Value="True">
                <Setter TargetName="ContentSite" Property="Panel.ZIndex" Value="100" />
                <Setter TargetName="ContentSite" Property="TextBlock.Foreground" Value="{DynamicResource ActiveForegroundBrush}" />
                <Setter TargetName="Border" Property="BorderThickness">
                    <Setter.Value>
                        <MultiBinding Converter="{StaticResource ThicknessRotate}">
                            <Binding Path="(tools_controls:DockedElementTabbedHost.DockingManager).(tools_controls:DockingManager.TabItemsBorderThicknessSelected)" RelativeSource="{RelativeSource AncestorType={x:Type tools_controls:DockedElementTabbedHost}}" />
                            <Binding Path="TabStripPlacement" RelativeSource="{RelativeSource TemplatedParent}" />
                        </MultiBinding>
                    </Setter.Value>
                </Setter>
                <Setter TargetName="Border" Property="Background" Value="{DynamicResource ActiveBackgroundBrush}" />
                <Setter TargetName="Border" Property="BorderBrush" Value="{DynamicResource ActiveBorderBrush}" />
                <Setter Property="Foreground" Value="{DynamicResource ActiveForegroundBrush}" />
            </Trigger>

            <Trigger SourceName="Border" Property="Visibility" Value="Visible">
                <Setter Property="Foreground" Value="{Binding Path=(tools_controls:DockedElementTabbedHost.DockingManager).(tools_controls:DockingManager.TabItemsForeground), RelativeSource={RelativeSource AncestorType={x:Type tools_controls:DockedElementTabbedHost}}}" />
                <Setter TargetName="Border" Property="Background" Value="{Binding Path=(tools_controls:DockedElementTabbedHost.DockingManager).(tools_controls:DockingManager.TabItemsBackground), RelativeSource={RelativeSource AncestorType={x:Type tools_controls:DockedElementTabbedHost}}}" />
                <Setter TargetName="Border" Property="BorderBrush" Value="{Binding Path=(tools_controls:DockedElementTabbedHost.DockingManager).(tools_controls:DockingManager.TabItemsBorderBrush), RelativeSource={RelativeSource AncestorType={x:Type tools_controls:DockedElementTabbedHost}}}" />
                <Setter TargetName="Border" Property="BorderThickness" Value="{Binding Path=(tools_controls:DockedElementTabbedHost.DockingManager).(tools_controls:DockingManager.TabItemBorderThickness), RelativeSource={RelativeSource AncestorType={x:Type tools_controls:DockedElementTabbedHost}}}" />
            </Trigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <!--<Condition Property="windows_shared:SkinStorage.VisualStyle" Value="Default" />-->
                    <Condition Property="IsSelected" Value="False" />
                    <Condition Property="IsMouseOver" Value="True" />
                </MultiTrigger.Conditions>
                <Setter TargetName="Border" Property="Background" Value="{DynamicResource HoverBackgroundBrush}" />
                <Setter TargetName="Border" Property="BorderBrush" Value="{DynamicResource HoverBorderBrush}" />
                <Setter Property="Foreground" Value="{DynamicResource HoverForegroundBrush}" />
            </MultiTrigger>
            <Trigger Property="IsSelected" Value="True">
                <Setter Property="Foreground" Value="{Binding Path=(tools_controls:DockedElementTabbedHost.DockingManager).(tools_controls:DockingManager.TabItemForegroundSelected),
							RelativeSource={RelativeSource AncestorType={x:Type tools_controls:DockedElementTabbedHost}}}" />
                <Setter TargetName="Border" Property="Background" Value="{Binding Path=(tools_controls:DockedElementTabbedHost.DockingManager).(tools_controls:DockingManager.TabItemBackgroundSelected), RelativeSource={RelativeSource AncestorType={x:Type tools_controls:DockedElementTabbedHost}}}" />
            </Trigger>

        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style x:Key="TabItemStyle" TargetType="{x:Type TabItem}">
        <Setter Property="Header" Value="{Binding Path=(tools_controls:DockingManager.Header)}" />
        <Setter Property="ToolTip" Value="{Binding Path=(tools_controls:DockingManager.CaptionToolTip)}" />
        <Setter Property="Foreground" Value="{DynamicResource ContentForegroundBrush}" />
        <Setter Property="tools_controls:DockingManager.ListenTabItemEvents" Value="True" />
        <Setter Property="MinWidth" Value="21" />
        <Setter Property="MinHeight" Value="21" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="Tag" Value="IsInternalTabItem" />
        <Setter Property="Template" Value="{DynamicResource TabItemTemplate}" />
        <Style.Triggers>
            <DataTrigger Binding="{Binding Path=(tools_controls:DockingManager.DockingManager).(tools_controls:DockingManager.IsTouchEnabled),
							RelativeSource={RelativeSource Self}}" Value="True">
                <Setter Property="MinHeight" Value="35" />
                <Setter Property="MinWidth" Value="35" />
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Geometry x:Key="DockCheckmark">M0,5.1L1.7,5.2 3.4,7.1 8,0.4 9.2,0 3.3,10.8z</Geometry>

    <Geometry x:Key="DockRightArrow">M1,1 L8,1 L8,8 L1,8 z M1,2 L8,2</Geometry>

    <ControlTemplate x:Key="SeparatorTemplate">
        <Border Background="{TemplateBinding Background}">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="24" />
                    <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>
                <Border Name="lineBorder" Height="{TemplateBinding BorderThickness}" 
                        BorderThickness="{TemplateBinding BorderThickness}" 
						Grid.Column="1" Margin="2"                        
                        BorderBrush="{TemplateBinding BorderBrush}" />
            </Grid>
        </Border>
    </ControlTemplate>
    
    <ControlTemplate x:Key="CustomMenuItemTemplate" TargetType="{x:Type tools_controls:CustomMenuItem}">
        <Grid SnapsToDevicePixels="true">
            <Rectangle
                            Name="Bg"
                            Fill="{TemplateBinding MenuItem.Background}"
                            RadiusX="2"
                            RadiusY="2"
                            Stroke="{TemplateBinding MenuItem.BorderBrush}"
                            StrokeThickness="1" />
            <Rectangle
                            x:Name="InnerBorder"
                            Margin="1"
                            RadiusX="2"
                            RadiusY="2" />
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition
                                    Width="Auto"
                                    MinWidth="24"
                                    SharedSizeGroup="MenuItemIconColumnGroup" />
                    <ColumnDefinition Width="4" />
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="37" />
                    <ColumnDefinition Width="Auto" SharedSizeGroup="MenuItemIGTColumnGroup" />
                    <ColumnDefinition Width="17" />
                </Grid.ColumnDefinitions>
                <ContentPresenter
                                x:Name="Icon"
                                Margin="1"
                                VerticalAlignment="Center"
                                ContentSource="Icon"
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                <Border
                                x:Name="GlyphPanel"
                                Width="22"
                                Height="22"
                                Margin="1"
                                Background="{DynamicResource BackgroundBrush}"
                                BorderBrush="{DynamicResource BorderBrush}"
                                BorderThickness="1"
                                CornerRadius="3"
                                Visibility="Hidden">
                    <Path
                                    Name="Glyph"
                                    Width="9"
                                    Height="11"
                                    Data="{StaticResource DockCheckmark}"
                                    Fill="{StaticResource GlyphBrush}"
                                    FlowDirection="LeftToRight" />
                </Border>
                <ContentPresenter
                                Grid.Column="2"
                                Margin="{TemplateBinding MenuItem.Padding}"
                                ContentSource="Header"
                                RecognizesAccessKey="True"
                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                <TextBlock
                                Grid.Column="4"
                                Margin="{TemplateBinding MenuItem.Padding}"
                                Text="{TemplateBinding MenuItem.InputGestureText}" />
            </Grid>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="Icon" Value="{x:Null}">
                <Setter TargetName="Icon" Property="Visibility" Value="Collapsed" />
            </Trigger>
            <Trigger Property="IsChecked" Value="true">
                <Setter TargetName="GlyphPanel" Property="Visibility" Value="Visible" />
                <Setter TargetName="Icon" Property="Visibility" Value="Collapsed" />
            </Trigger>
            <Trigger Property="IsHighlighted" Value="true">
                <Setter TargetName="Bg" Property="Fill" Value="{DynamicResource HoverBackgroundBrush}" />
                <Setter TargetName="Bg" Property="Stroke" Value="{DynamicResource HoverBorderBrush}" />
                <Setter TargetName="InnerBorder" Property="Stroke" Value="{DynamicResource HoverBorderBrush}" />
                <Setter Property="Foreground" Value="{DynamicResource HoverForegroundBrush}" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="false">
                <Setter Property="Opacity" Value="0.5" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    
    <Style x:Key="VistaCustomMenuItemStyle" TargetType="{x:Type tools_controls:CustomMenuItem}">
        <Setter Property="HorizontalContentAlignment" Value="Left" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="IsCheckable" Value="True" />
        <Setter Property="Background" Value="{DynamicResource ContentBackgroundBrush}" />
        <Setter Property="Foreground" Value="{DynamicResource ContentForegroundBrush}" />
        <Style.Triggers>
            <DataTrigger Binding="{Binding Path=IsSeparator, RelativeSource={RelativeSource Self},FallbackValue=False}" Value="False">
                <Setter Property="Control.Template" Value="{DynamicResource CustomMenuItemTemplate}"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding Path=IsSeparator, RelativeSource={RelativeSource Self},FallbackValue=False}" Value="True">
                <Setter Property="BorderBrush" Value="{DynamicResource ActiveBorderBrush}"/>
                <Setter Property="BorderThickness" Value="0.5"/>
                <Setter Property="Control.Template" Value="{DynamicResource SeparatorTemplate}"/>
            </DataTrigger>
            <Trigger Property="Role" Value="TopLevelItem">
                <Setter Property="Padding" Value="7,2,8,3" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type tools_controls:CustomMenuItem}">
                            <Grid SnapsToDevicePixels="true">
                                <Rectangle
                                    x:Name="OuterBorder"
                                    RadiusX="2"
                                    RadiusY="2" />
                                <Rectangle
                                    Name="Bg"
                                    Margin="1"
                                    Fill="{TemplateBinding MenuItem.Background}"
                                    RadiusX="1"
                                    RadiusY="1"
                                    Stroke="{TemplateBinding MenuItem.BorderBrush}"
                                    StrokeThickness="1" />
                                <Rectangle x:Name="InnerBorder" Margin="2" />
                                <DockPanel>
                                    <ContentPresenter
                                        x:Name="Icon"
                                        Margin="4,0,6,0"
                                        VerticalAlignment="Center"
                                        ContentSource="Icon"
                                        SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                    <Path
                                        x:Name="GlyphPanel"
                                        Margin="7,0,0,0"
                                        VerticalAlignment="Center"
                                        Data="{StaticResource DockCheckmark}"
                                        Fill="{StaticResource GlyphBrush}"
                                        FlowDirection="LeftToRight"
                                        Visibility="Collapsed" />
                                    <ContentPresenter
                                        Margin="{TemplateBinding MenuItem.Padding}"
                                        ContentSource="Header"
                                        RecognizesAccessKey="True"
                                        SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                </DockPanel>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="Icon" Value="{x:Null}">
                                    <Setter TargetName="Icon" Property="Visibility" Value="Collapsed" />
                                </Trigger>
                                <Trigger Property="IsChecked" Value="true">
                                    <Setter TargetName="GlyphPanel" Property="Visibility" Value="Visible" />
                                    <Setter TargetName="Icon" Property="Visibility" Value="Collapsed" />
                                </Trigger>
                                <Trigger Property="IsHighlighted" Value="true">
                                    <Setter TargetName="Bg" Property="Stroke" Value="{DynamicResource HoverGlyphBrush}" />
                                    <Setter TargetName="OuterBorder" Property="Stroke" Value="{DynamicResource HoverBorderBrush}" />
                                    <Setter TargetName="InnerBorder" Property="Stroke" Value="{DynamicResource HoverBorderBrush}" />
                                    <Setter Property="Foreground" Value="{DynamicResource HoverForegroundBrush}" />

                                </Trigger>
                                <Trigger Property="IsKeyboardFocused" Value="true">
                                    <Setter TargetName="Bg" Property="Stroke" Value="{DynamicResource HoverBorderBrush}" />
                                    <Setter TargetName="Bg" Property="Fill" Value="{DynamicResource ActiveBackgroundBrush}" />
                                    <Setter TargetName="InnerBorder" Property="Stroke" Value="{DynamicResource ActiveBorderBrush}" />
                                </Trigger>
                                <Trigger Property="IsEnabled" Value="false">
                                    <Setter Property="Opacity" Value="0.5" />
                                    <Setter TargetName="GlyphPanel" Property="Fill" Value="{DynamicResource ActiveGlyphBrush}" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="Role" Value="SubmenuHeader">
                <Setter Property="Padding" Value="8,3,8,3" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type tools_controls:CustomMenuItem}">
                            <Grid SnapsToDevicePixels="true">
                                <Rectangle
                                    Name="Bg"
                                    Fill="{TemplateBinding Background}"
                                    RadiusX="2"
                                    RadiusY="2"
                                    Stroke="{TemplateBinding MenuItem.BorderBrush}"
                                    StrokeThickness="1" />
                                <Rectangle
                                    x:Name="InnerBorder"
                                    Margin="1"
                                    RadiusX="2"
                                    RadiusY="2"
                                    Stroke="Transparent"
                                    StrokeThickness="1" />
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition
                                            Width="Auto"
                                            MinWidth="24"
                                            SharedSizeGroup="MenuItemIconColumnGroup" />
                                        <ColumnDefinition Width="4" />
                                        <ColumnDefinition Width="*" />
                                        <ColumnDefinition Width="37" />
                                        <ColumnDefinition Width="Auto" SharedSizeGroup="MenuItemIGTColumnGroup" />
                                        <ColumnDefinition Width="17" />
                                    </Grid.ColumnDefinitions>
                                    <ContentPresenter
                                        x:Name="Icon"
                                        Margin="1"
                                        VerticalAlignment="Center"
                                        ContentSource="Icon"
                                        SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                    <Border
                                        x:Name="GlyphPanel"
                                        Width="22"
                                        Height="22"
                                        Margin="1"
                                        Background="#E6EFF4"
                                        BorderBrush="#CDD3E6"
                                        BorderThickness="1"
                                        CornerRadius="3"
                                        Visibility="Hidden">
                                        <Path
                                            Name="Glyph"
                                            Width="9"
                                            Height="11"
                                            Data="{StaticResource DockCheckmark}"
                                            Fill="{StaticResource GlyphBrush}"
                                            FlowDirection="LeftToRight" />
                                    </Border>
                                    <ContentPresenter
                                        Grid.Column="2"
                                        Margin="{TemplateBinding MenuItem.Padding}"
                                        ContentSource="Header"
                                        RecognizesAccessKey="True"
                                        SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                    <TextBlock
                                        Grid.Column="4"
                                        Margin="{TemplateBinding MenuItem.Padding}"
                                        Text="{TemplateBinding MenuItem.InputGestureText}"
                                        Visibility="Collapsed" />
                                    <Path
                                        Grid.Column="5"
                                        Margin="4,0,0,0"
                                        VerticalAlignment="Center"
                                        Data="{StaticResource DockRightArrow}"
                                        Fill="{TemplateBinding Foreground}" />
                                </Grid>
                                <Popup
                                    x:Name="PART_Popup"
                                    AllowsTransparency="true"
                                    Focusable="false"
                                    HorizontalOffset="-2"
                                    IsOpen="{Binding Path=IsSubmenuOpen, RelativeSource={RelativeSource TemplatedParent}}"
                                    Placement="Right"
                                    PopupAnimation="{StaticResource {x:Static SystemParameters.MenuPopupAnimationKey}}"
                                    VerticalOffset="-3">
                                    <Microsoft_Windows_Aero:SystemDropShadowChrome Name="Shdw" Color="Transparent">
                                        <ContentControl
                                            Name="SubMenuBorder"
                                            IsTabStop="false"
                                            Template="{StaticResource {ComponentResourceKey TypeInTargetAssembly={x:Type FrameworkElement},
                                                                                            ResourceId=SubmenuContent}}">
                                            <ScrollViewer
                                                CanContentScroll="true"
                                                HorizontalScrollBarVisibility="Auto"
                                                VerticalScrollBarVisibility="Auto">
                                                <ItemsPresenter
                                                    Margin="2"
                                                    Grid.IsSharedSizeScope="true"
                                                    KeyboardNavigation.DirectionalNavigation="Cycle"
                                                    KeyboardNavigation.TabNavigation="Cycle"
                                                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                            </ScrollViewer>
                                        </ContentControl>
                                    </Microsoft_Windows_Aero:SystemDropShadowChrome>
                                </Popup>
                            </Grid>
                            <ControlTemplate.Triggers>
                                <Trigger Property="IsSuspendingPopupAnimation" Value="true">
                                    <Setter TargetName="PART_Popup" Property="PopupAnimation" Value="None" />
                                </Trigger>
                                <Trigger Property="IsHighlighted" Value="true">
                                    <Setter TargetName="InnerBorder" Property="Stroke" Value="{DynamicResource HoverBorderBrush}" />
                                    <Setter Property="Foreground" Value="{DynamicResource HoverForegroundBrush}" />
                                </Trigger>
                                <Trigger Property="Icon" Value="{x:Null}">
                                    <Setter TargetName="Icon" Property="Visibility" Value="Collapsed" />
                                </Trigger>
                                <Trigger Property="IsChecked" Value="true">
                                    <Setter TargetName="GlyphPanel" Property="Visibility" Value="Visible" />
                                    <Setter TargetName="Icon" Property="Visibility" Value="Collapsed" />
                                </Trigger>
                                <Trigger SourceName="PART_Popup" Property="Popup.HasDropShadow" Value="true">
                                    <Setter TargetName="Shdw" Property="Margin" Value="0,0,5,5" />
                                    <Setter TargetName="Shdw" Property="Color" Value="#71000000" />
                                </Trigger>
                                <Trigger Property="IsHighlighted" Value="true">
                                    <Setter TargetName="Bg" Property="Fill" Value="{DynamicResource HoverBackgroundBrush}" />
                                    <Setter TargetName="Bg" Property="Stroke" Value="{DynamicResource HoverBorderBrush}" />
                                    <Setter Property="Foreground" Value="{DynamicResource HoverForegroundBrush}" />
                                </Trigger>
                                <Trigger Property="IsEnabled" Value="false">
                                    <Setter Property="Foreground" Value="{DynamicResource Foreground}" />
                                    <Setter TargetName="GlyphPanel" Property="Opacity" Value="0.5" />
                                    <Setter TargetName="Glyph" Property="Opacity" Value="0.5" />
                                    <Setter Property="Opacity" Value="0.5" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="Role" Value="SubmenuItem">
                <Setter Property="Padding" Value="8,3,8,3" />
            </Trigger>
            <DataTrigger Binding="{Binding Path=IsTouchEnabled, RelativeSource={RelativeSource Self}}" Value="True">
                <Setter Property="Padding" Value="16,9,16,9" />
            </DataTrigger>
        </Style.Triggers>
    </Style>
    <Style BasedOn="{StaticResource VistaCustomMenuItemStyle}" TargetType="{x:Type tools_controls:CustomMenuItem}" />

    <Style TargetType="{x:Type tools_controls:Splitter}">
        <Style.Triggers>
            <Trigger Property="UseNativeFloatWindow" Value="True">
                <Setter Property="MinWidth" Value="{Binding Path=DockingManager.SplitterSize, RelativeSource={RelativeSource Self}}" />
                <Setter Property="MinHeight" Value="{Binding Path=DockingManager.SplitterSize, RelativeSource={RelativeSource Self}}" />
                <Setter Property="Background" Value="{Binding Path=DockingManager.SplitterBackground, RelativeSource={RelativeSource Self}}" />
            </Trigger>
            <Trigger Property="UseNativeFloatWindow" Value="False">
                <Setter Property="MinWidth" Value="{Binding Path=(tools_controls:DockingManager.DockingManager).(tools_controls:DockingManager.SplitterSize), RelativeSource={RelativeSource Self}}" />
                <Setter Property="MinHeight" Value="{Binding Path=(tools_controls:DockingManager.DockingManager).(tools_controls:DockingManager.SplitterSize), RelativeSource={RelativeSource Self}}" />
                <Setter Property="Background" Value="{Binding Path=(tools_controls:DockingManager.DockingManager).(tools_controls:DockingManager.SplitterBackground), RelativeSource={RelativeSource Self}}" />
            </Trigger>
        </Style.Triggers>
        <Setter Property="Margin" Value="0" />
        <Setter Property="Cursor" Value="SizeNS" />
        <Setter Property="AdornerTemplate">
            <Setter.Value>
                <ControlTemplate>
                    <StackPanel x:Name="stPanel" Orientation="Horizontal">
                        <Border MinWidth="4" MinHeight="4">
                            <Border.Background>
                                <SolidColorBrush Opacity="0.6" Color="Gray" />
                            </Border.Background>
                        </Border>
                    </StackPanel>
                    <ControlTemplate.Triggers>
                        <Trigger Property="tools_controls:SplitterAdorner.Orientation" Value="Horizontal">
                            <Setter TargetName="stPanel" Property="LayoutTransform">
                                <Setter.Value>
                                    <RotateTransform Angle="-90" />
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type tools_controls:Splitter}">
                    <Border
                        Name="border"
                        MinWidth="{TemplateBinding MinWidth}"
                        MinHeight="{TemplateBinding MinHeight}"
                        Margin="0"
                        Background="{TemplateBinding Background}" />
                </ControlTemplate>

            </Setter.Value>
        </Setter>
    </Style>




    <Geometry x:Key="NativeFlatKeyMaximizePath">F1 M 202.351,150.334L 183.571,150.334L 183.571,158.489L 177.649,158.489L 177.649,175.666L 196.429,175.666L 196.429,167.511L 202.351,167.511L 202.351,150.334 Z M 194.23,173.468L 179.848,173.468L 179.848,162.886L 183.571,162.886L 185.77,162.886L 194.23,162.886L 194.23,165.312L 194.23,167.511L 194.23,173.468 Z M 200.152,165.312L 196.429,165.312L 196.429,158.489L 185.77,158.489L 185.77,154.731L 200.152,154.731L 200.152,165.312 Z</Geometry>
    <Geometry x:Key="NativeFlatKeyMaximizeTouchPath">F1M377.597,302.937L363.046,302.937L363.046,292.232L377.597,292.232z M360.821,305.162L379.821,305.162L379.821,287.783L360.821,287.783z</Geometry>
    <ControlTemplate x:Key="FlatKeyMaximize" TargetType="{x:Type ToggleButton}">
        <StackPanel>
            <Border
                x:Name="brdBack"
                Width="15"
                Height="15"
                BorderBrush="Transparent"
                BorderThickness="0">
                <Grid HorizontalAlignment="Center" VerticalAlignment="Center">
                    <Path
                        Name="pathButton"
                        Width="9"
                        Height="8"
                        HorizontalAlignment="Center"
                        VerticalAlignment="Center"
                        Data="{StaticResource NativeFlatKeyMaximizePath}"
                        SnapsToDevicePixels="False"
                        Stretch="Fill"
                        Stroke="{TemplateBinding Foreground}"
                        StrokeThickness="1" />
                </Grid>
            </Border>
        </StackPanel>
        <ControlTemplate.Triggers>
            <DataTrigger Binding="{Binding Path=IsTouchEnabled, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type tools_controls:DockingManager}}}" Value="True">
                <Setter TargetName="brdBack" Property="Width" Value="35" />
                <Setter TargetName="brdBack" Property="Height" Value="35" />
                <Setter TargetName="pathButton" Property="Width" Value="13" />
                <Setter TargetName="pathButton" Property="Height" Value="13" />
                <Setter TargetName="pathButton" Property="Data" Value="{DynamicResource NativeFlatKeyMaximizeTouchPath}" />
                <Setter TargetName="pathButton" Property="StrokeThickness" Value="0" />
                <Setter TargetName="pathButton" Property="Stroke" Value="{DynamicResource GlyphBrush}" />
            </DataTrigger>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter TargetName="brdBack" Property="Background" Value="{DynamicResource HoverBackgroundBrush}" />
                <Setter TargetName="brdBack" Property="BorderBrush" Value="{DynamicResource HoverBorderBrush}" />
                <Setter TargetName="brdBack" Property="BorderThickness" Value="1" />
                <Setter TargetName="pathButton" Property="Stroke" Value="{DynamicResource HoverGlyphBrush}" />
            </Trigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding Path=IsMouseOver, RelativeSource={RelativeSource Self}}" Value="True" />
                    <Condition Binding="{Binding Path=IsTemplateParenKeyboardFocusWithin, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type tools_controls:DockHeaderPresenter}}}" Value="True" />
                </MultiDataTrigger.Conditions>
                <Setter TargetName="brdBack" Property="Background" Value="{DynamicResource HoverBackgroundBrush}" />
                <Setter TargetName="brdBack" Property="BorderBrush" Value="{DynamicResource HoverBorderBrush}" />
                <Setter TargetName="brdBack" Property="BorderThickness" Value="1" />
                <Setter TargetName="pathButton" Property="Stroke" Value="{DynamicResource HoverGlyphBrush}" />
            </MultiDataTrigger>

            <Trigger Property="IsEnabled" Value="False">
                <Setter TargetName="pathButton" Property="Opacity" Value="0.5" />
            </Trigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding Path=IsTemplateParenKeyboardFocusWithin, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type tools_controls:DockHeaderPresenter}}}" Value="True" />
                    <Condition Binding="{Binding Path=IsEnabled, RelativeSource={RelativeSource Self}}" Value="False" />
                </MultiDataTrigger.Conditions>
                <Setter TargetName="pathButton" Property="Opacity" Value="0.5" />
            </MultiDataTrigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter TargetName="brdBack" Property="Background" Value="{DynamicResource ActiveBackgroundBrush}" />
                <Setter TargetName="brdBack" Property="BorderBrush" Value="{DynamicResource ActiveBorderBrush}" />
                <Setter TargetName="brdBack" Property="BorderThickness" Value="1" />
                <Setter TargetName="pathButton" Property="Stroke" Value="{DynamicResource ActiveGlyphBrush}" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
    <ControlTemplate x:Key="FlatKeyMinimize" TargetType="{x:Type ToggleButton}">
        <StackPanel>
            <Border
                x:Name="brdBack"
                Width="15"
                Height="15"
                BorderBrush="Transparent"
                BorderThickness="0">
                <Rectangle
                    Name="pathButton"
                    Width="9"
                    Height="2"
                    Margin="0,0,0,4.5"
                    HorizontalAlignment="Center"
                    VerticalAlignment="Bottom"
                    Fill="{TemplateBinding Foreground}"
                    RadiusX="1"
                    RadiusY="1"
                    SnapsToDevicePixels="False"
                    Stretch="Fill"
                    StrokeThickness="1.5" />
            </Border>
        </StackPanel>
        <ControlTemplate.Triggers>
            <DataTrigger Binding="{Binding Path=IsTouchEnabled, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type tools_controls:DockingManager}}}" Value="True">
                <Setter TargetName="brdBack" Property="Width" Value="35" />
                <Setter TargetName="brdBack" Property="Height" Value="35" />
                <Setter TargetName="pathButton" Property="Width" Value="14" />
                <Setter TargetName="pathButton" Property="Height" Value="4" />
                <Setter TargetName="pathButton" Property="VerticalAlignment" Value="Center" />
                <Setter TargetName="pathButton" Property="Margin" Value="0" />
            </DataTrigger>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter TargetName="brdBack" Property="Background" Value="{DynamicResource HoverBackgroundBrush}" />
                <Setter TargetName="brdBack" Property="BorderBrush" Value="{DynamicResource HoverBorderBrush}" />
                <Setter TargetName="brdBack" Property="BorderThickness" Value="1" />
                <Setter TargetName="pathButton" Property="Fill" Value="{DynamicResource HoverGlyphBrush}" />
            </Trigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding Path=IsMouseOver, RelativeSource={RelativeSource Self}}" Value="True" />
                    <Condition Binding="{Binding Path=IsTemplateParenKeyboardFocusWithin, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type tools_controls:DockHeaderPresenter}}}" Value="True" />
                </MultiDataTrigger.Conditions>
                <Setter TargetName="brdBack" Property="Background" Value="{DynamicResource HoverBackgroundBrush}" />
                <Setter TargetName="brdBack" Property="BorderBrush" Value="{DynamicResource HoverBorderBrush}" />
                <Setter TargetName="brdBack" Property="BorderThickness" Value="1" />
                <Setter TargetName="pathButton" Property="Fill" Value="{DynamicResource HoverGlyphBrush}" />
            </MultiDataTrigger>
            <DataTrigger Binding="{Binding Path=IsKeyboardFocusWithin
								, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type tools_controls:NativeFloatWindow}}}"
							  Value="True" >
                <Setter TargetName="pathButton" Property="Stroke" Value="{DynamicResource ActiveGlyphBrush}"/>
            </DataTrigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter TargetName="pathButton" Property="Opacity" Value="0.5" />
            </Trigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding Path=IsTemplateParenKeyboardFocusWithin, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type tools_controls:DockHeaderPresenter}}}" Value="True" />
                    <Condition Binding="{Binding Path=IsEnabled, RelativeSource={RelativeSource Self}}" Value="False" />
                </MultiDataTrigger.Conditions>
                <Setter TargetName="pathButton" Property="Opacity" Value="0.5" />
            </MultiDataTrigger>
          
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding Path=IsMouseOver, RelativeSource={RelativeSource Self}}"
								Value="True"/>
                    <Condition Binding="{Binding Path=IsKeyboardFocusWithin
									, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type tools_controls:NativeFloatWindow}}}"
								Value="True" />
                </MultiDataTrigger.Conditions>
                <Setter TargetName="pathButton" Property="Stroke" Value="{DynamicResource HoverGlyphBrush}"/>
            </MultiDataTrigger>

            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding Path=IsKeyboardFocusWithin
									, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type tools_controls:NativeFloatWindow}}}"
								Value="True" />
                    <Condition Binding="{Binding Path=IsEnabled, RelativeSource={RelativeSource Self}}" Value="False" />
                </MultiDataTrigger.Conditions>
                <Setter TargetName="pathButton" Property="Opacity" Value="0.5"/>
            </MultiDataTrigger>

        </ControlTemplate.Triggers>
    </ControlTemplate>



    <Geometry x:Key="NativeFlatKeyRestorePath">M1,1 L8,1 L8,8 L1,8 z M1,2 L8,2</Geometry>
    <Geometry x:Key="NativeFlatKeyRestreTouchPath">F1M377.597,302.937L363.046,302.937L363.046,292.232L377.597,292.232z M360.821,305.162L379.821,305.162L379.821,287.783L360.821,287.783z</Geometry>
    <ControlTemplate x:Key="FlatKeyRestore" TargetType="{x:Type ToggleButton}">
        <StackPanel>
            <Border
                x:Name="brdBack"
                Width="15"
                Height="15"
                BorderBrush="Transparent"
                BorderThickness="0">
                <Grid>
                    <Path
                        Name="pathButton"
                        Width="8.714"
                        Height="9.517"
                        HorizontalAlignment="Center"
                        VerticalAlignment="Center"
                        Data="{StaticResource NativeFlatKeyRestorePath}"
                        Fill="{TemplateBinding Foreground}"
                        SnapsToDevicePixels="False"
                        Stretch="Fill"
                        StrokeThickness="0.5" />
                </Grid>
            </Border>
        </StackPanel>
        <ControlTemplate.Triggers>
            <DataTrigger Binding="{Binding Path=IsTouchEnabled, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type tools_controls:DockingManager}}}" Value="True">
                <Setter TargetName="brdBack" Property="Width" Value="35" />
                <Setter TargetName="brdBack" Property="Height" Value="35" />
                <Setter TargetName="pathButton" Property="Width" Value="13" />
                <Setter TargetName="pathButton" Property="Height" Value="13" />
                <Setter TargetName="pathButton" Property="Data" Value="{DynamicResource NativeFlatKeyRestreTouchPath}" />
                <Setter TargetName="pathButton" Property="Fill" Value="{DynamicResource GlyphBrush}" />
            </DataTrigger>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter TargetName="brdBack" Property="Background" Value="{DynamicResource HoverBackgroundBrush}" />
                <Setter TargetName="brdBack" Property="BorderBrush" Value="{DynamicResource HoverBorderBrush}" />
                <Setter TargetName="brdBack" Property="BorderThickness" Value="1" />
                <Setter TargetName="pathButton" Property="Fill" Value="{DynamicResource HoverGlyphBrush}" />
            </Trigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding Path=IsMouseOver, RelativeSource={RelativeSource Self}}" Value="True" />
                    <Condition Binding="{Binding Path=IsTemplateParenKeyboardFocusWithin, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type tools_controls:DockHeaderPresenter}}}" Value="True" />
                </MultiDataTrigger.Conditions>
                <Setter TargetName="brdBack" Property="Background" Value="{DynamicResource HoverBackgroundBrush}" />
                <Setter TargetName="brdBack" Property="BorderBrush" Value="{DynamicResource HoverBorderBrush}" />
                <Setter TargetName="brdBack" Property="BorderThickness" Value="1" />
                <Setter TargetName="pathButton" Property="Fill" Value="{DynamicResource HoverGlyphBrush}" />
            </MultiDataTrigger>

            <Trigger Property="IsEnabled" Value="False">
                <Setter TargetName="pathButton" Property="Opacity" Value="0.5" />
            </Trigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding Path=IsTemplateParenKeyboardFocusWithin, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type tools_controls:DockHeaderPresenter}}}" Value="True" />
                    <Condition Binding="{Binding Path=IsEnabled, RelativeSource={RelativeSource Self}}" Value="False" />
                </MultiDataTrigger.Conditions>
                <Setter TargetName="pathButton" Property="Opacity" Value="0.5" />
            </MultiDataTrigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter TargetName="brdBack" Property="Background" Value="{DynamicResource ActiveBackgroundBrush}" />
                <Setter TargetName="brdBack" Property="BorderBrush" Value="{DynamicResource ActiveBorderBrush}" />
                <Setter TargetName="brdBack" Property="BorderThickness" Value="1" />
                <Setter TargetName="pathButton" Property="Fill" Value="{DynamicResource ActiveGlyphBrush}" />

            </Trigger>

        </ControlTemplate.Triggers>
    </ControlTemplate>

    <!--  Defaulttemplate  -->
    <ControlTemplate x:Key="DefaultTemplateStyle" TargetType="{x:Type tools_controls:DockHeaderPresenter}">
        <Border
            x:Name="borderTop"
            Width="Auto"
            Height="Auto"
            Background="{TemplateBinding Background}"
            BorderBrush="{TemplateBinding BorderBrush}"
            BorderThickness="{TemplateBinding BorderThickness}">
            <Border.ContextMenu>
                <tools_controls:CustomContextMenu Name="PART_ContextMenu" Focusable="false" />
            </Border.ContextMenu>
            <Grid>
                <DockPanel LastChildFill="True">
                    <ToggleButton
                        Name="PART_CloseButton"
                        VerticalAlignment="Center"
                        AutomationProperties.Name="Hide"
                        Command="tools_controls:DockHeaderPresenter.CloseCommand"
                        DockPanel.Dock="Right"
                        Focusable="False" Foreground="{TemplateBinding Foreground}" Background="Transparent" BorderBrush="Transparent"
                        Template="{Binding Path=(tools_controls:DockingManager.DockingManager).(tools_controls:DockingManager.CloseButtonTemplate), RelativeSource={RelativeSource TemplatedParent}}">
                        <ToggleButton.ToolTip>
                            <ToolTip Name="tooltip">
                                <TextBlock Name="PART_CloseButtonTooltipText" Text="{Binding Source={StaticResource ToolsResourceWrapperKey}, Path=CloseButtonTooltipText}" />
                            </ToolTip>
                        </ToggleButton.ToolTip>
                    </ToggleButton>
                    <ToggleButton
                        Name="PART_AwlButton"
                        VerticalAlignment="Center"
                        AutomationProperties.Name="AutoHide"
                        Command="tools_controls:DockHeaderPresenter.ChangeAwlStateCommand"
                        DockPanel.Dock="Right"
                        Focusable="False"
                        Foreground="{TemplateBinding Foreground}"
                        Template="{Binding Path=(tools_controls:DockingManager.DockingManager).(tools_controls:DockingManager.AwlButtonTemplate), RelativeSource={RelativeSource TemplatedParent}}">
                        <ToggleButton.ToolTip>
                            <ToolTip Name="PART_AwlButtonTooltip">
                                <TextBlock Name="PART_AwlButtonTooltipText" Text="{Binding Source={StaticResource ToolsResourceWrapperKey}, Path=AwlButtonTooltipText}" />
                            </ToolTip>
                        </ToggleButton.ToolTip>
                        <!--    -->
                    </ToggleButton>
                    <ToggleButton
                        Name="PART_ContextMenuButton"
                        VerticalAlignment="Center"
                        AutomationProperties.Name="WindowMenu"
                        Command="tools_controls:DockHeaderPresenter.OpenContextMenuCommand"
                        DockPanel.Dock="Right"
                        Focusable="False"
                        Foreground="{TemplateBinding Foreground}"
                        IsChecked="{Binding Path=IsContextMenuOpen, RelativeSource={RelativeSource AncestorType={x:Type tools_controls:DockHeaderPresenter}}}"
                        Template="{Binding Path=(tools_controls:DockingManager.DockingManager).(tools_controls:DockingManager.MenuButtonTemplate), RelativeSource={RelativeSource TemplatedParent}}">
                        <ToggleButton.ToolTip>
                            <ToolTip Name="PART_ContextMenuButtonTooltip">
                                <TextBlock Name="PART_ContextMenuButtonTooltipText" Text="{Binding Source={StaticResource ToolsResourceWrapperKey}, Path=ContextMenuButtonTooltipText}" />
                            </ToolTip>
                        </ToggleButton.ToolTip>
                    </ToggleButton>
                    <ToggleButton
                        Name="PART_MaximizeButton"
                        VerticalAlignment="Center"
                        Command="tools_controls:DockHeaderPresenter.MaximizeStateCommand"
                        DockPanel.Dock="Right"
                        Focusable="False"
                        Foreground="{TemplateBinding Foreground}"
                        Template="{Binding Path=(tools_controls:DockingManager.DockingManager).(tools_controls:DockingManager.MaximizeButtonTemplate), RelativeSource={RelativeSource TemplatedParent}}"
                        Visibility="Collapsed">
                        <ToggleButton.ToolTip>
                            <ToolTip Name="PART_MaximizeButtonTooltip">
                                <TextBlock Name="PART_MaximizeButtonTooltipText" Text="{Binding Source={StaticResource ToolsResourceWrapperKey}, Path=Maximize}" />
                            </ToolTip>
                        </ToggleButton.ToolTip>
                    </ToggleButton>
                    <ToggleButton
                        Name="PART_RestoreButton"
                        VerticalAlignment="Center"
                        Command="tools_controls:DockHeaderPresenter.RestoreStateCommand"
                        DockPanel.Dock="Right"
                        Focusable="False"
                        Foreground="{TemplateBinding Foreground}"
                        Template="{Binding Path=(tools_controls:DockingManager.DockingManager).(tools_controls:DockingManager.RestoreButtonTemplate), RelativeSource={RelativeSource TemplatedParent}}"
                        Visibility="Collapsed">
                        <ToggleButton.ToolTip>
                            <ToolTip Name="PART_RestoreButtonTooltip">
                                <TextBlock Name="PART_RestoreButtonTooltipText" Text="{Binding Source={StaticResource ToolsResourceWrapperKey}, Path=Restore}" />
                            </ToolTip>
                        </ToggleButton.ToolTip>
                    </ToggleButton>
                    <ToggleButton
                        Name="PART_MinimizeButton"
                        VerticalAlignment="Center"
                        Command="tools_controls:DockHeaderPresenter.MinimizeStateCommand"
                        DockPanel.Dock="Right"
                        Focusable="False"
                        Foreground="{TemplateBinding Foreground}"
                        Template="{Binding Path=(tools_controls:DockingManager.DockingManager).(tools_controls:DockingManager.MinimizeButtonTemplate), RelativeSource={RelativeSource TemplatedParent}}"
                        Visibility="Collapsed">
                        <ToggleButton.ToolTip>
                            <ToolTip Name="PART_MinimizeButtonTooltip">
                                <TextBlock Name="PART_MinimizeButtonTooltipText" Text="{Binding Source={StaticResource ToolsResourceWrapperKey}, Path=Minimize}" />
                            </ToolTip>
                        </ToggleButton.ToolTip>
                    </ToggleButton>
                    <ContentPresenter
                        Name="PART_ContentPresenter"
                        Margin="2"
                        HorizontalAlignment="Left"
                        VerticalAlignment="Center"
                        Content="{Binding Path=(tools_controls:DockingManager.InternalDataContext).(tools_controls:DockingManager.Header), RelativeSource={RelativeSource TemplatedParent}}"
                        ToolTip="{Binding Path=(tools_controls:DockingManager.InternalDataContext).(tools_controls:DockingManager.CaptionToolTip), RelativeSource={RelativeSource TemplatedParent}}"
                        ContentTemplate="{Binding Path=(tools_controls:DockingManager.InternalDataContext).(tools_controls:DockingManager.HeaderTemplate), RelativeSource={RelativeSource TemplatedParent}}"
                        ContentTemplateSelector="{StaticResource DockTrimmingTemplate}"
                        IsHitTestVisible="True" />
                </DockPanel>
                <Border
                    Name="CoverletControl"
                    Background="Transparent"
                    Visibility="Collapsed" />
            </Grid>
        </Border>
        <ControlTemplate.Triggers>
            <DataTrigger Binding="{Binding Path=IsTouchEnabled, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type tools_controls:DockingManager}}}" Value="True">
                <Setter Property="FontSize" Value="18" />
            </DataTrigger>
            <DataTrigger Binding="{Binding Path=(tools_controls:DockingManager.InternalDataContext).(tools_controls:DockingManager.CanMaximize), RelativeSource={RelativeSource TemplatedParent}}" Value="false">
                <Setter TargetName="PART_MaximizeButton" Property="Visibility" Value="Collapsed" />
                <Setter TargetName="PART_ContextMenu" Property="IsEnabledMaximizeMenuItem" Value="False" />
            </DataTrigger>
            <DataTrigger Binding="{Binding Path=(tools_controls:DockingManager.InternalDataContext).(tools_controls:DockingManager.CanMinimize), RelativeSource={RelativeSource TemplatedParent}}" Value="false">
                <Setter TargetName="PART_MinimizeButton" Property="Visibility" Value="Collapsed" />
                <Setter TargetName="PART_ContextMenu" Property="IsEnabledMinimizeMenuItem" Value="False" />
            </DataTrigger>
            <DataTrigger Binding="{Binding Path=(tools_controls:DockingManager.DockingManager).(tools_controls:DockingManager.MaximizeButtonEnabled),
							RelativeSource={RelativeSource TemplatedParent}}" Value="False">
                <Setter TargetName="PART_MaximizeButton" Property="Visibility" Value="Collapsed" />
                <Setter TargetName="PART_ContextMenu" Property="IsEnabledMaximizeMenuItem" Value="False" />
            </DataTrigger>
            <DataTrigger Binding="{Binding Path=(tools_controls:DockingManager.DockingManager).(tools_controls:DockingManager.MinimizeButtonEnabled),
							RelativeSource={RelativeSource TemplatedParent}}" Value="False">
                <Setter TargetName="PART_MinimizeButton" Property="Visibility" Value="Collapsed" />
                <Setter TargetName="PART_ContextMenu" Property="IsEnabledMinimizeMenuItem" Value="False" />
            </DataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding Path=(tools_controls:DockingManager.DockingManager).(tools_controls:DockingManager.MaximizeButtonEnabled),
							RelativeSource={RelativeSource TemplatedParent}}" Value="True" />
                    <Condition Binding="{Binding Path=(tools_controls:DockingManager.InternalDataContext).(tools_controls:DockingManager.CanMaximize), RelativeSource={RelativeSource TemplatedParent}}" Value="false" />
                    <Condition Binding="{Binding Path=(tools_controls:DockingManager.DockingManager).(tools_controls:DockingManager.MaximizeButtonMode),
							RelativeSource={RelativeSource TemplatedParent}}" Value="Disable" />
                    <Condition Binding="{Binding Path=(tools_controls:DockingManager.InternalDataContext).(tools_controls:DockingManager.MaximizeButtonVisibility), RelativeSource={RelativeSource TemplatedParent}}" Value="Visible" />
                </MultiDataTrigger.Conditions>
                <Setter TargetName="PART_MaximizeButton" Property="Visibility" Value="Visible" />
                <Setter TargetName="PART_MaximizeButton" Property="IsEnabled" Value="False" />
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding Path=(tools_controls:DockingManager.DockingManager).(tools_controls:DockingManager.MaximizeButtonEnabled),
							RelativeSource={RelativeSource TemplatedParent}}" Value="True" />
                    <Condition Binding="{Binding Path=(tools_controls:DockingManager.InternalDataContext).(tools_controls:DockingManager.CanMaximize), RelativeSource={RelativeSource TemplatedParent}}" Value="true" />
                    <Condition Binding="{Binding Path=(tools_controls:DockingManager.DockingManager).(tools_controls:DockingManager.MaximizeButtonMode),
							RelativeSource={RelativeSource TemplatedParent}}" Value="Disable" />
                    <Condition Binding="{Binding Path=(tools_controls:DockingManager.InternalDataContext).(tools_controls:DockingManager.MaximizeButtonVisibility), RelativeSource={RelativeSource TemplatedParent}}" Value="Visible" />
                </MultiDataTrigger.Conditions>
                <Setter TargetName="PART_MaximizeButton" Property="IsEnabled" Value="True" />
            </MultiDataTrigger>

            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding Path=(tools_controls:DockingManager.DockingManager).(tools_controls:DockingManager.MaximizeButtonEnabled),
							RelativeSource={RelativeSource TemplatedParent}}" Value="True" />
                    <Condition Binding="{Binding Path=(tools_controls:DockingManager.InternalDataContext).(tools_controls:DockingManager.CanMaximize), RelativeSource={RelativeSource TemplatedParent}}" Value="True" />
                    <Condition Binding="{Binding Path=(tools_controls:DockingManager.InternalDataContext).(tools_controls:DockingManager.MaximizeButtonVisibility), RelativeSource={RelativeSource TemplatedParent}}" Value="Visible" />
                </MultiDataTrigger.Conditions>
                <Setter TargetName="PART_MaximizeButton" Property="Visibility" Value="Visible" />
                <Setter TargetName="PART_ContextMenu" Property="IsEnabledMaximizeMenuItem" Value="true" />
            </MultiDataTrigger>

            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding Path=(tools_controls:DockingManager.DockingManager).(tools_controls:DockingManager.MinimizeButtonEnabled),
							RelativeSource={RelativeSource TemplatedParent}}" Value="True" />
                    <Condition Binding="{Binding Path=(tools_controls:DockingManager.InternalDataContext).(tools_controls:DockingManager.CanMinimize), RelativeSource={RelativeSource TemplatedParent}}" Value="True" />
                    <Condition Binding="{Binding Path=(tools_controls:DockingManager.InternalDataContext).(tools_controls:DockingManager.MinimizeButtonVisibility), RelativeSource={RelativeSource TemplatedParent}}" Value="Visible" />
                </MultiDataTrigger.Conditions>
                <Setter TargetName="PART_MinimizeButton" Property="Visibility" Value="Visible" />
                <Setter TargetName="PART_ContextMenu" Property="IsEnabledMinimizeMenuItem" Value="true" />
            </MultiDataTrigger>

            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding Path=(tools_controls:DockingManager.DockingManager).(tools_controls:DockingManager.MaximizeButtonEnabled),
							RelativeSource={RelativeSource TemplatedParent}}" Value="True" />
                    <Condition Binding="{Binding Path=(tools_controls:DockingManager.InternalDataContext).(tools_controls:DockingManager.CanMaximize), RelativeSource={RelativeSource TemplatedParent}}" Value="True" />
                    <Condition Binding="{Binding Path=(tools_controls:DockingManager.InternalDataContext).(tools_controls:DockingManager.MaximizeButtonVisibility), RelativeSource={RelativeSource TemplatedParent}}" Value="Collapsed" />
                </MultiDataTrigger.Conditions>
                <Setter TargetName="PART_MaximizeButton" Property="Visibility" Value="Collapsed" />
                <Setter TargetName="PART_ContextMenu" Property="IsEnabledMaximizeMenuItem" Value="False" />
            </MultiDataTrigger>

            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding Path=(tools_controls:DockingManager.DockingManager).(tools_controls:DockingManager.MinimizeButtonEnabled),
							RelativeSource={RelativeSource TemplatedParent}}" Value="True" />
                    <Condition Binding="{Binding Path=(tools_controls:DockingManager.InternalDataContext).(tools_controls:DockingManager.CanMinimize), RelativeSource={RelativeSource TemplatedParent}}" Value="True" />
                    <Condition Binding="{Binding Path=(tools_controls:DockingManager.InternalDataContext).(tools_controls:DockingManager.MinimizeButtonVisibility), RelativeSource={RelativeSource TemplatedParent}}" Value="Collapsed" />
                </MultiDataTrigger.Conditions>
                <Setter TargetName="PART_MinimizeButton" Property="Visibility" Value="Collapsed" />
                <Setter TargetName="PART_ContextMenu" Property="IsEnabledMinimizeMenuItem" Value="False" />
            </MultiDataTrigger>


            <DataTrigger Binding="{Binding Path=(tools_controls:DockingManager.InternalDataContext).(tools_controls:DockingManager.RestoreButtonVisibility), RelativeSource={RelativeSource TemplatedParent}}" Value="Collapsed">
                <Setter TargetName="PART_RestoreButton" Property="Visibility" Value="Collapsed" />
            </DataTrigger>

            <DataTrigger Binding="{Binding Path=(tools_controls:DockingManager.InternalDataContext).(tools_controls:DockingManager.RestoreButtonVisibility), RelativeSource={RelativeSource TemplatedParent}}" Value="Visible">
                <Setter TargetName="PART_RestoreButton" Property="Visibility" Value="Visible" />
                <Setter TargetName="PART_MaximizeButton" Property="Visibility" Value="Collapsed" />
                <Setter TargetName="PART_MaximizeButton" Property="IsEnabled" Value="True" />
            </DataTrigger>

            <DataTrigger Binding="{Binding Path=(tools_controls:DockingManager.InternalDataContext).(tools_controls:DockingManager.State), RelativeSource={RelativeSource TemplatedParent}}" Value="Float">
                <Setter TargetName="PART_AwlButton" Property="Visibility" Value="Collapsed" />
                <Setter TargetName="PART_ContextMenu" Property="IsEnabledAutoHideMenuItem" Value="False" />
            </DataTrigger>

            <DataTrigger Binding="{Binding Path=(tools_controls:DockingManager.InternalDataContext).(tools_controls:DockingManager.State), RelativeSource={RelativeSource TemplatedParent}}" Value="AutoHidden">
                <Setter TargetName="PART_AwlButton" Property="RenderTransform">
                    <Setter.Value>
                        <RotateTransform Angle="90" CenterX="7.5" CenterY="7.5" />
                    </Setter.Value>
                </Setter>
            </DataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding Path=(tools_controls:DockingManager.InternalDataContext).(tools_controls:DockingManager.State), RelativeSource={RelativeSource TemplatedParent}}" Value="AutoHidden" />
                    <Condition Binding="{Binding Path=IsTouchEnabled, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type tools_controls:DockingManager}}}" Value="True" />
                </MultiDataTrigger.Conditions>
                <Setter TargetName="PART_AwlButton" Property="RenderTransform">
                    <Setter.Value>
                        <RotateTransform Angle="90" CenterX="17.5" CenterY="17.5" />
                    </Setter.Value>
                </Setter>
            </MultiDataTrigger>
            <DataTrigger Binding="{Binding Path=(tools_controls:DockingManager.InternalDataContext).(tools_controls:DockingManager.CanClose), RelativeSource={RelativeSource TemplatedParent}}" Value="False">
                <Setter TargetName="PART_ContextMenu" Property="IsEnabledHiddenMenuItem" Value="False" />
                <Setter TargetName="PART_CloseButton" Property="Visibility" Value="Collapsed" />
            </DataTrigger>
            <DataTrigger Binding="{Binding Path=(tools_controls:DockingManager.InternalDataContext).(tools_controls:DockingManager.CanFloat), RelativeSource={RelativeSource TemplatedParent}}" Value="False">
                <Setter TargetName="PART_ContextMenu" Property="IsEnabledFloatingMenuItem" Value="False" />
            </DataTrigger>
            <DataTrigger Binding="{Binding Path=(tools_controls:DockingManager.InternalDataContext).(tools_controls:DockingManager.CanDock), RelativeSource={RelativeSource TemplatedParent}}" Value="False">
                <Setter TargetName="PART_AwlButton" Property="Visibility" Value="Collapsed" />
                <Setter TargetName="PART_ContextMenu" Property="IsEnabledAutoHideMenuItem" Value="False" />
            </DataTrigger>
            <DataTrigger Binding="{Binding Path=(tools_controls:DockingManager.InternalDataContext).(tools_controls:DockingManager.CanDocument), RelativeSource={RelativeSource TemplatedParent}}" Value="False">
                <Setter TargetName="PART_ContextMenu" Property="IsEnabledTabbedMenuItem" Value="False" />
            </DataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding Path=(tools_controls:DockingManager.InternalDataContext).(tools_controls:DockedElementTabbedHost.ShowTabs), RelativeSource={RelativeSource TemplatedParent}}" Value="False" />
                    <Condition Binding="{Binding Path=(tools_controls:DockingManager.InternalDataContext).(tools_controls:DockingManager.CanClose), RelativeSource={RelativeSource TemplatedParent}}" Value="False" />
                </MultiDataTrigger.Conditions>
                <Setter TargetName="PART_CloseButton" Property="Visibility" Value="Collapsed" />
                <Setter TargetName="PART_ContextMenu" Property="IsEnabledHiddenMenuItem" Value="False" />
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding Path=(tools_controls:DockingManager.InternalDataContext).(tools_controls:DockedElementTabbedHost.ShowTabs), RelativeSource={RelativeSource TemplatedParent}}" Value="True" />
                    <Condition Binding="{Binding Path=(tools_controls:DockingManager.DockingManager).(tools_controls:DockingManager.CloseTabs), RelativeSource={RelativeSource TemplatedParent}}" Value="CloseActive" />
                    <Condition Binding="{Binding Path=(tools_controls:DockingManager.InternalDataContext).(tools_controls:DockingManager.CanClose), RelativeSource={RelativeSource TemplatedParent}}" Value="False" />
                </MultiDataTrigger.Conditions>
                <Setter TargetName="PART_CloseButton" Property="Visibility" Value="Collapsed" />
                <Setter TargetName="PART_ContextMenu" Property="IsEnabledHiddenMenuItem" Value="False" />
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding Path=(tools_controls:DockingManager.InternalDataContext).(tools_controls:DockedElementTabbedHost.ShowTabs), RelativeSource={RelativeSource TemplatedParent}}" Value="True" />
                    <Condition Binding="{Binding Path=(tools_controls:DockingManager.DockingManager).(tools_controls:DockingManager.CloseTabs), RelativeSource={RelativeSource TemplatedParent}}" Value="CloseAll" />
                    <Condition Binding="{Binding Path=CanCloseGroup, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type tools_controls:DockedElementTabbedHost}}}" Value="False" />
                </MultiDataTrigger.Conditions>
                <Setter TargetName="PART_CloseButton" Property="Visibility" Value="Collapsed" />
                <Setter TargetName="PART_ContextMenu" Property="IsEnabledHiddenMenuItem" Value="False" />
            </MultiDataTrigger>
            <DataTrigger Binding= "{Binding Path=(tools_controls:DockingManager.DockingManager).(tools_controls:DockingManager.AutoHideVisibility),
							RelativeSource={RelativeSource TemplatedParent}}" Value="False">
                <Setter TargetName="PART_AwlButton" Property="Visibility" Value="Collapsed" />
                <Setter TargetName="PART_ContextMenu" Property="IsEnabledAutoHideMenuItem" Value="False" />
            </DataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding Path=IsMouseOver, RelativeSource={RelativeSource Self}}" Value="True" />
                    <Condition Binding="{Binding Path=(tools_controls:DockingManager.DockingManager).(tools_controls:DockingManager.IsDragging), RelativeSource={RelativeSource TemplatedParent}}" Value="True" />
                </MultiDataTrigger.Conditions>
                <Setter TargetName="CoverletControl" Property="Visibility" Value="Visible" />
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding Path=(tools_controls:DockingManager.InternalDataContext).(tools_controls:DockedElementTabbedHost.ShowTabs), RelativeSource={RelativeSource TemplatedParent}}" Value="False" />
                    <Condition Binding="{Binding Path=(tools_controls:DockingManager.InternalDataContext).(tools_controls:DockingManager.CanAutoHide), RelativeSource={RelativeSource TemplatedParent}}" Value="False" />
                </MultiDataTrigger.Conditions>
                <Setter TargetName="PART_AwlButton" Property="Visibility" Value="Collapsed" />
                <Setter TargetName="PART_ContextMenu" Property="IsEnabledAutoHideMenuItem" Value="False" />
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding Path=(tools_controls:DockingManager.InternalDataContext).(tools_controls:DockedElementTabbedHost.ShowTabs), RelativeSource={RelativeSource TemplatedParent}}" Value="True" />
                    <Condition Binding="{Binding Path=(tools_controls:DockingManager.InternalDataContext).(tools_controls:DockingManager.CanAutoHide), RelativeSource={RelativeSource TemplatedParent}}" Value="False" />
                </MultiDataTrigger.Conditions>
                <Setter TargetName="PART_AwlButton" Property="Visibility" Value="Collapsed" />
                <Setter TargetName="PART_ContextMenu" Property="IsEnabledAutoHideMenuItem" Value="False" />
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding Path=(tools_controls:DockingManager.InternalDataContext).(tools_controls:DockedElementTabbedHost.ShowTabs), RelativeSource={RelativeSource TemplatedParent}}" Value="True" />
                    <Condition Binding="{Binding Path=AutoHideTabsMode, RelativeSource={RelativeSource AncestorType={x:Type tools_controls:DockingManager}}}" Value="AutoHideGroup" />
                    <Condition Binding="{Binding Path=CanAutoHideGroup, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type tools_controls:DockedElementTabbedHost}}}" Value="False" />
                </MultiDataTrigger.Conditions>
                <Setter TargetName="PART_AwlButton" Property="Visibility" Value="Collapsed" />
                <Setter TargetName="PART_ContextMenu" Property="IsEnabledHiddenMenuItem" Value="False" />
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding Path=(tools_controls:DockingManager.InternalDataContext).(tools_controls:DockedElementTabbedHost.ShowTabs), RelativeSource={RelativeSource TemplatedParent}}" Value="True" />
                    <Condition Binding="{Binding Path=(tools_controls:DockingManager.InternalDataContext).(tools_controls:DockingManager.CanAutoHide), RelativeSource={RelativeSource TemplatedParent}}" Value="False" />
                </MultiDataTrigger.Conditions>
                <Setter TargetName="PART_AwlButton" Property="Visibility" Value="Collapsed" />
                <Setter TargetName="PART_ContextMenu" Property="IsEnabledAutoHideMenuItem" Value="False" />
            </MultiDataTrigger>
            <Trigger Property="Visibility" Value="Collapsed">
                <Setter TargetName="PART_ContentPresenter" Property="Content" Value="{x:Null}" />
            </Trigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding Path=IsMouseOver, RelativeSource={RelativeSource Self}}" Value="True" />
                    <Condition Binding="{Binding Path=(tools_controls:DockingManager.DockingManager).(tools_controls:DockingManager.EnableMouseHoverBackground), RelativeSource={RelativeSource TemplatedParent}}" Value="True" />
                    <Condition Binding="{Binding Path=IsKeyboardFocusWithin, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type tools_controls:DockedElementTabbedHost}}}" Value="False" />
                </MultiDataTrigger.Conditions>
                <Setter TargetName="borderTop" Property="Background" Value="{Binding Path=(tools_controls:DockingManager.DockingManager).(tools_controls:DockingManager.HeaderMouseOverBackground), RelativeSource={RelativeSource TemplatedParent}}" />
                <Setter TargetName="PART_ContentPresenter" Property="TextElement.Foreground" Value="{DynamicResource HoverForegroundBrush}" />
                <Setter TargetName="borderTop" Property="BorderThickness" Value="1" />
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding Path=IsMouseOver, RelativeSource={RelativeSource TemplatedParent}}" Value="True" />
                    <Condition Binding="{Binding Path=(tools_controls:DockingManager.DockingManager).(tools_controls:DockingManager.IsEnableHotTracking), RelativeSource={RelativeSource TemplatedParent}}" Value="True" />
                </MultiDataTrigger.Conditions>
                <Setter TargetName="borderTop" Property="Background" Value="{Binding Path=(tools_controls:DockingManager.DockingManager).(tools_controls:DockingManager.SelectedHeaderBackground), RelativeSource={RelativeSource TemplatedParent}}" />
                <Setter TargetName="PART_ContentPresenter" Property="TextBlock.Foreground" Value="{DynamicResource ActiveForegroundBrush}" />
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding Path=IsKeyboardFocusWithin, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type tools_controls:DockedElementTabbedHost}}}" Value="True" />
                    <Condition Binding="{Binding Path=IsMouseOver, RelativeSource={RelativeSource Self}}" Value="True" />
                    <Condition Binding="{Binding Path=(tools_controls:DockingManager.DockingManager).(tools_controls:DockingManager.EnableMouseHoverBackground), RelativeSource={RelativeSource TemplatedParent}}" Value="True" />
                </MultiDataTrigger.Conditions>
                <Setter TargetName="borderTop" Property="Background" Value="{Binding Path=(tools_controls:DockingManager.DockingManager).(tools_controls:DockingManager.SelectedHeaderBackground), RelativeSource={RelativeSource TemplatedParent}}" />
                <Setter TargetName="borderTop" Property="BorderThickness" Value="1" />
                <Setter TargetName="PART_ContentPresenter" Property="TextBlock.Foreground" Value="{DynamicResource ActiveForegroundBrush}" />
            </MultiDataTrigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <!--  NativeFloatWindow  -->
    <ControlTemplate x:Key="NativeFloatWindowStyle" TargetType="{x:Type tools_controls:DockHeaderPresenter}">
        <Border
            x:Name="borderTop"
            Width="Auto"
            Height="Auto"
            Background="{TemplateBinding Background}"
            BorderBrush="{TemplateBinding BorderBrush}"
            BorderThickness="{TemplateBinding BorderThickness}">
            <Border.ContextMenu>
                <tools_controls:CustomContextMenu Name="PART_ContextMenu" Focusable="false" />
            </Border.ContextMenu>
            <Grid>
                <DockPanel LastChildFill="True">
                    <ToggleButton
                        Name="PART_CloseButton"
                        VerticalAlignment="Center"
                        AutomationProperties.Name="Hide"
                        Command="tools_controls:DockHeaderPresenter.CloseCommand"
                        DockPanel.Dock="Right"
                        Focusable="False"
                        Foreground="{TemplateBinding Foreground}" BorderBrush="Transparent" Background="Transparent"
                        Template="{Binding Path=DockingManager.CloseButtonTemplate, RelativeSource={RelativeSource TemplatedParent}}">
                        <ToggleButton.ToolTip>
                            <ToolTip Name="tooltip">
                                <TextBlock Name="PART_CloseButtonTooltipText" Text="{Binding Source={StaticResource ToolsResourceWrapperKey}, Path=CloseButtonTooltipText}" />
                            </ToolTip>
                        </ToggleButton.ToolTip>
                    </ToggleButton>
                    <ToggleButton
                        Name="PART_AwlButton"
                        VerticalAlignment="Center"
                        AutomationProperties.Name="AutoHide"
                        Command="tools_controls:DockHeaderPresenter.ChangeAwlStateCommand"
                        DockPanel.Dock="Right"
                        Focusable="False"
                        Foreground="{TemplateBinding Foreground}"
                        Template="{Binding Path=DockingManager.AwlButtonTemplate, RelativeSource={RelativeSource TemplatedParent}}">
                        <ToggleButton.ToolTip>
                            <ToolTip Name="PART_AwlButtonTooltip">
                                <TextBlock Name="PART_AwlButtonTooltipText" Text="{Binding Source={StaticResource ToolsResourceWrapperKey}, Path=AwlButtonTooltipText}" />
                            </ToolTip>
                        </ToggleButton.ToolTip>
                        <!--    -->
                    </ToggleButton>
                    <ToggleButton
                        Name="PART_ContextMenuButton"
                        VerticalAlignment="Center"
                        AutomationProperties.Name="WindowMenu"
                        Command="tools_controls:DockHeaderPresenter.OpenContextMenuCommand"
                        DockPanel.Dock="Right"
                        Focusable="False"
                        Foreground="{TemplateBinding Foreground}"
                        IsChecked="{Binding Path=IsContextMenuOpen, RelativeSource={RelativeSource AncestorType={x:Type tools_controls:DockHeaderPresenter}}}"
                        Template="{Binding Path=DockingManager.MenuButtonTemplate, RelativeSource={RelativeSource TemplatedParent}}">
                        <ToggleButton.ToolTip>
                            <ToolTip Name="PART_ContextMenuButtonTooltip">
                                <TextBlock Name="PART_ContextMenuButtonTooltipText" Text="{Binding Source={StaticResource ToolsResourceWrapperKey}, Path=ContextMenuButtonTooltipText}" />
                            </ToolTip>
                        </ToggleButton.ToolTip>
                    </ToggleButton>
                    <ToggleButton
                        Name="PART_MaximizeButton"
                        VerticalAlignment="Center"
                        Command="tools_controls:DockHeaderPresenter.MaximizeStateCommand"
                        DockPanel.Dock="Right"
                        Focusable="False"
                        Foreground="{TemplateBinding Foreground}"
                        Template="{Binding Path=DockingManager.MaximizeButtonTemplate, RelativeSource={RelativeSource TemplatedParent}}"
                        Visibility="Collapsed">
                        <ToggleButton.ToolTip>
                            <ToolTip Name="PART_MaximizeButtonTooltip">
                                <TextBlock Name="PART_MaximizeButtonTooltipText" Text="{Binding Source={StaticResource ToolsResourceWrapperKey}, Path=Maximize}" />
                            </ToolTip>
                        </ToggleButton.ToolTip>
                    </ToggleButton>
                    <ToggleButton
                        Name="PART_RestoreButton"
                        VerticalAlignment="Center"
                        Command="tools_controls:DockHeaderPresenter.RestoreStateCommand"
                        DockPanel.Dock="Right"
                        Focusable="False"
                        Foreground="{TemplateBinding Foreground}"
                        Template="{Binding Path=DockingManager.RestoreButtonTemplate, RelativeSource={RelativeSource TemplatedParent}}"
                        Visibility="Collapsed">
                        <ToggleButton.ToolTip>
                            <ToolTip Name="PART_RestoreButtonTooltip">
                                <TextBlock Name="PART_RestoreButtonTooltipText" Text="{Binding Source={StaticResource ToolsResourceWrapperKey}, Path=Restore}" />
                            </ToolTip>
                        </ToggleButton.ToolTip>
                    </ToggleButton>
                    <ToggleButton
                        Name="PART_MinimizeButton"
                        VerticalAlignment="Center"
                        Command="tools_controls:DockHeaderPresenter.MinimizeStateCommand"
                        DockPanel.Dock="Right"
                        Focusable="False"
                        Foreground="{TemplateBinding Foreground}"
                        Template="{Binding Path=DockingManager.MinimizeButtonTemplate, RelativeSource={RelativeSource TemplatedParent}}"
                        Visibility="Collapsed">
                        <ToggleButton.ToolTip>
                            <ToolTip Name="PART_MinimizeButtonTooltip">
                                <TextBlock Name="PART_MinimizeButtonTooltipText" Text="{Binding Source={StaticResource ToolsResourceWrapperKey}, Path=Minimize}" />
                            </ToolTip>
                        </ToggleButton.ToolTip>
                    </ToggleButton>
                    <ContentPresenter
                        Name="PART_ContentPresenter"
                        Margin="0"
                        HorizontalAlignment="Left"
                        VerticalAlignment="Center"
                        Content="{Binding Path=(tools_controls:DockingManager.InternalDataContext).(tools_controls:DockingManager.Header), RelativeSource={RelativeSource TemplatedParent}}"
                        ToolTip="{Binding Path=(tools_controls:DockingManager.InternalDataContext).(tools_controls:DockingManager.CaptionToolTip), RelativeSource={RelativeSource TemplatedParent}}"
                        ContentTemplate="{Binding Path=(tools_controls:DockingManager.InternalDataContext).(tools_controls:DockingManager.HeaderTemplate), RelativeSource={RelativeSource TemplatedParent}}"
                        ContentTemplateSelector="{StaticResource DockTrimmingTemplate}"
                        IsHitTestVisible="True" />
                </DockPanel>
                <Border
                    Name="CoverletControl"
                    Background="{DynamicResource BackgroundBrush}"
                    Visibility="Collapsed" />
            </Grid>
        </Border>
        <ControlTemplate.Triggers>
            <DataTrigger Binding="{Binding Path=IsTouchEnabled, RelativeSource={RelativeSource Self}}" Value="True">
                <Setter Property="FontSize" Value="18" />
            </DataTrigger>
            <DataTrigger Binding="{Binding Path=(tools_controls:DockingManager.InternalDataContext).(tools_controls:DockingManager.CanMaximize), RelativeSource={RelativeSource TemplatedParent}}" Value="false">
                <Setter TargetName="PART_MaximizeButton" Property="Visibility" Value="Collapsed" />
                <Setter TargetName="PART_ContextMenu" Property="IsEnabledMaximizeMenuItem" Value="False" />
            </DataTrigger>
            <DataTrigger Binding="{Binding Path=(tools_controls:DockingManager.InternalDataContext).(tools_controls:DockingManager.CanMinimize), RelativeSource={RelativeSource TemplatedParent}}" Value="false">
                <Setter TargetName="PART_MinimizeButton" Property="Visibility" Value="Collapsed" />
                <Setter TargetName="PART_ContextMenu" Property="IsEnabledMinimizeMenuItem" Value="False" />
            </DataTrigger>
            <DataTrigger Binding="{Binding Path=(tools_controls:DockingManager.DockingManager).(tools_controls:DockingManager.MaximizeButtonEnabled),
							RelativeSource={RelativeSource TemplatedParent}}" Value="False">
                <Setter TargetName="PART_MaximizeButton" Property="Visibility" Value="Collapsed" />
                <Setter TargetName="PART_ContextMenu" Property="IsEnabledMaximizeMenuItem" Value="False" />
            </DataTrigger>
            <DataTrigger Binding="{Binding Path=(tools_controls:DockingManager.DockingManager).(tools_controls:DockingManager.MinimizeButtonEnabled),
							RelativeSource={RelativeSource TemplatedParent}}" Value="False">
                <Setter TargetName="PART_MinimizeButton" Property="Visibility" Value="Collapsed" />
                <Setter TargetName="PART_ContextMenu" Property="IsEnabledMinimizeMenuItem" Value="False" />
            </DataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding Path=(tools_controls:DockingManager.DockingManager).(tools_controls:DockingManager.MaximizeButtonEnabled),
							RelativeSource={RelativeSource TemplatedParent}}" Value="True" />
                    <Condition Binding="{Binding Path=(tools_controls:DockingManager.InternalDataContext).(tools_controls:DockingManager.CanMaximize), RelativeSource={RelativeSource TemplatedParent}}" Value="false" />
                    <Condition Binding="{Binding Path=(tools_controls:DockingManager.DockingManager).(tools_controls:DockingManager.MaximizeButtonMode),
							RelativeSource={RelativeSource TemplatedParent}}" Value="Disable" />
                    <Condition Binding="{Binding Path=(tools_controls:DockingManager.InternalDataContext).(tools_controls:DockingManager.MaximizeButtonVisibility), RelativeSource={RelativeSource TemplatedParent}}" Value="Visible" />
                </MultiDataTrigger.Conditions>
                <Setter TargetName="PART_MaximizeButton" Property="Visibility" Value="Visible" />
                <Setter TargetName="PART_MaximizeButton" Property="IsEnabled" Value="False" />
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding Path=(tools_controls:DockingManager.DockingManager).(tools_controls:DockingManager.MaximizeButtonEnabled),
							RelativeSource={RelativeSource TemplatedParent}}" Value="True" />
                    <Condition Binding="{Binding Path=(tools_controls:DockingManager.InternalDataContext).(tools_controls:DockingManager.CanMaximize), RelativeSource={RelativeSource TemplatedParent}}" Value="true" />
                    <Condition Binding="{Binding Path=(tools_controls:DockingManager.DockingManager).(tools_controls:DockingManager.MaximizeButtonMode),
							RelativeSource={RelativeSource TemplatedParent}}" Value="Disable" />
                    <Condition Binding="{Binding Path=(tools_controls:DockingManager.InternalDataContext).(tools_controls:DockingManager.MaximizeButtonVisibility), RelativeSource={RelativeSource TemplatedParent}}" Value="Visible" />
                </MultiDataTrigger.Conditions>
                <Setter TargetName="PART_MaximizeButton" Property="IsEnabled" Value="True" />
            </MultiDataTrigger>

            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding Path=(tools_controls:DockingManager.DockingManager).(tools_controls:DockingManager.MaximizeButtonEnabled),
							RelativeSource={RelativeSource TemplatedParent}}" Value="True" />
                    <Condition Binding="{Binding Path=(tools_controls:DockingManager.InternalDataContext).(tools_controls:DockingManager.CanMaximize), RelativeSource={RelativeSource TemplatedParent}}" Value="True" />
                    <Condition Binding="{Binding Path=(tools_controls:DockingManager.InternalDataContext).(tools_controls:DockingManager.MaximizeButtonVisibility), RelativeSource={RelativeSource TemplatedParent}}" Value="Visible" />
                </MultiDataTrigger.Conditions>
                <Setter TargetName="PART_MaximizeButton" Property="Visibility" Value="Visible" />
                <Setter TargetName="PART_ContextMenu" Property="IsEnabledMaximizeMenuItem" Value="true" />
            </MultiDataTrigger>

            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding Path=(tools_controls:DockingManager.DockingManager).(tools_controls:DockingManager.MinimizeButtonEnabled),
							RelativeSource={RelativeSource TemplatedParent}}" Value="True" />
                    <Condition Binding="{Binding Path=(tools_controls:DockingManager.InternalDataContext).(tools_controls:DockingManager.CanMinimize), RelativeSource={RelativeSource TemplatedParent}}" Value="True" />
                    <Condition Binding="{Binding Path=(tools_controls:DockingManager.InternalDataContext).(tools_controls:DockingManager.MinimizeButtonVisibility), RelativeSource={RelativeSource TemplatedParent}}" Value="Visible" />
                </MultiDataTrigger.Conditions>
                <Setter TargetName="PART_MinimizeButton" Property="Visibility" Value="Visible" />
                <Setter TargetName="PART_ContextMenu" Property="IsEnabledMinimizeMenuItem" Value="true" />
            </MultiDataTrigger>

            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding Path=(tools_controls:DockingManager.DockingManager).(tools_controls:DockingManager.MaximizeButtonEnabled),
							RelativeSource={RelativeSource TemplatedParent}}" Value="True" />
                    <Condition Binding="{Binding Path=(tools_controls:DockingManager.InternalDataContext).(tools_controls:DockingManager.CanMaximize), RelativeSource={RelativeSource TemplatedParent}}" Value="True" />
                    <Condition Binding="{Binding Path=(tools_controls:DockingManager.InternalDataContext).(tools_controls:DockingManager.MaximizeButtonVisibility), RelativeSource={RelativeSource TemplatedParent}}" Value="Collapsed" />
                </MultiDataTrigger.Conditions>
                <Setter TargetName="PART_MaximizeButton" Property="Visibility" Value="Collapsed" />
                <Setter TargetName="PART_ContextMenu" Property="IsEnabledMaximizeMenuItem" Value="False" />
            </MultiDataTrigger>

            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding Path=(tools_controls:DockingManager.DockingManager).(tools_controls:DockingManager.MinimizeButtonEnabled),
							RelativeSource={RelativeSource TemplatedParent}}" Value="True" />
                    <Condition Binding="{Binding Path=(tools_controls:DockingManager.InternalDataContext).(tools_controls:DockingManager.CanMinimize), RelativeSource={RelativeSource TemplatedParent}}" Value="True" />
                    <Condition Binding="{Binding Path=(tools_controls:DockingManager.InternalDataContext).(tools_controls:DockingManager.MinimizeButtonVisibility), RelativeSource={RelativeSource TemplatedParent}}" Value="Collapsed" />
                </MultiDataTrigger.Conditions>
                <Setter TargetName="PART_MinimizeButton" Property="Visibility" Value="Collapsed" />
                <Setter TargetName="PART_ContextMenu" Property="IsEnabledMinimizeMenuItem" Value="False" />
            </MultiDataTrigger>


            <DataTrigger Binding="{Binding Path=(tools_controls:DockingManager.InternalDataContext).(tools_controls:DockingManager.RestoreButtonVisibility), RelativeSource={RelativeSource TemplatedParent}}" Value="Collapsed">
                <Setter TargetName="PART_RestoreButton" Property="Visibility" Value="Collapsed" />
            </DataTrigger>

            <DataTrigger Binding="{Binding Path=(tools_controls:DockingManager.InternalDataContext).(tools_controls:DockingManager.RestoreButtonVisibility), RelativeSource={RelativeSource TemplatedParent}}" Value="Visible">
                <Setter TargetName="PART_RestoreButton" Property="Visibility" Value="Visible" />
                <Setter TargetName="PART_MaximizeButton" Property="Visibility" Value="Collapsed" />
                <Setter TargetName="PART_MaximizeButton" Property="IsEnabled" Value="True" />
            </DataTrigger>

            <DataTrigger Binding="{Binding Path=(tools_controls:DockingManager.InternalDataContext).(tools_controls:DockingManager.State), RelativeSource={RelativeSource TemplatedParent}}" Value="Float">
                <Setter TargetName="PART_AwlButton" Property="Visibility" Value="Collapsed" />
                <Setter TargetName="PART_ContextMenu" Property="IsEnabledAutoHideMenuItem" Value="False" />
            </DataTrigger>

            <DataTrigger Binding="{Binding Path=(tools_controls:DockingManager.InternalDataContext).(tools_controls:DockingManager.State), RelativeSource={RelativeSource TemplatedParent}}" Value="AutoHidden">
                <Setter TargetName="PART_AwlButton" Property="RenderTransform">
                    <Setter.Value>
                        <RotateTransform Angle="90" CenterX="7.5" CenterY="7.5" />
                    </Setter.Value>
                </Setter>
            </DataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding Path=(tools_controls:DockingManager.InternalDataContext).(tools_controls:DockingManager.State), RelativeSource={RelativeSource TemplatedParent}}" Value="AutoHidden" />
                    <Condition Binding="{Binding Path=IsTouchEnabled, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type tools_controls:DockingManager}}}" Value="True" />
                </MultiDataTrigger.Conditions>
                <Setter TargetName="PART_AwlButton" Property="RenderTransform">
                    <Setter.Value>
                        <RotateTransform Angle="90" CenterX="17.5" CenterY="17.5" />
                    </Setter.Value>
                </Setter>
            </MultiDataTrigger>
            <DataTrigger Binding="{Binding Path=(tools_controls:DockingManager.InternalDataContext).(tools_controls:DockingManager.CanClose), RelativeSource={RelativeSource TemplatedParent}}" Value="False">
                <Setter TargetName="PART_ContextMenu" Property="IsEnabledHiddenMenuItem" Value="False" />
                <Setter TargetName="PART_CloseButton" Property="Visibility" Value="Collapsed" />
            </DataTrigger>
            <DataTrigger Binding="{Binding Path=(tools_controls:DockingManager.InternalDataContext).(tools_controls:DockingManager.CanFloat), RelativeSource={RelativeSource TemplatedParent}}" Value="False">
                <Setter TargetName="PART_ContextMenu" Property="IsEnabledFloatingMenuItem" Value="False" />
            </DataTrigger>
            <DataTrigger Binding="{Binding Path=(tools_controls:DockingManager.InternalDataContext).(tools_controls:DockingManager.CanDock), RelativeSource={RelativeSource TemplatedParent}}" Value="False">
                <Setter TargetName="PART_AwlButton" Property="Visibility" Value="Collapsed" />
                <Setter TargetName="PART_ContextMenu" Property="IsEnabledAutoHideMenuItem" Value="False" />
            </DataTrigger>
            <DataTrigger Binding="{Binding Path=(tools_controls:DockingManager.InternalDataContext).(tools_controls:DockingManager.CanDocument), RelativeSource={RelativeSource TemplatedParent}}" Value="False">
                <Setter TargetName="PART_ContextMenu" Property="IsEnabledTabbedMenuItem" Value="False" />
            </DataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding Path=(tools_controls:DockingManager.InternalDataContext).(tools_controls:DockedElementTabbedHost.ShowTabs), RelativeSource={RelativeSource TemplatedParent}}" Value="False" />
                    <Condition Binding="{Binding Path=(tools_controls:DockingManager.InternalDataContext).(tools_controls:DockingManager.CanClose), RelativeSource={RelativeSource TemplatedParent}}" Value="False" />
                </MultiDataTrigger.Conditions>
                <Setter TargetName="PART_CloseButton" Property="Visibility" Value="Collapsed" />
                <Setter TargetName="PART_ContextMenu" Property="IsEnabledHiddenMenuItem" Value="False" />
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding Path=(tools_controls:DockingManager.InternalDataContext).(tools_controls:DockedElementTabbedHost.ShowTabs), RelativeSource={RelativeSource TemplatedParent}}" Value="True" />
                    <Condition Binding="{Binding Path=(tools_controls:DockingManager.InternalDataContext).(tools_controls:DockingManager.CloseTabs), RelativeSource={RelativeSource TemplatedParent}}" Value="CloseActive" />
                    <Condition Binding="{Binding Path=(tools_controls:DockingManager.InternalDataContext).(tools_controls:DockingManager.CanClose), RelativeSource={RelativeSource TemplatedParent}}" Value="False" />
                </MultiDataTrigger.Conditions>
                <Setter TargetName="PART_CloseButton" Property="Visibility" Value="Collapsed" />
                <Setter TargetName="PART_ContextMenu" Property="IsEnabledHiddenMenuItem" Value="False" />
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding Path=(tools_controls:DockingManager.InternalDataContext).(tools_controls:DockedElementTabbedHost.ShowTabs), RelativeSource={RelativeSource TemplatedParent}}" Value="True" />
                    <Condition Binding="{Binding Path=(tools_controls:DockingManager.InternalDataContext).(tools_controls:DockingManager.CloseTabs), RelativeSource={RelativeSource TemplatedParent}}" Value="CloseAll" />
                    <Condition Binding="{Binding Path=CanCloseGroup, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type tools_controls:DockedElementTabbedHost}}}" Value="False" />
                </MultiDataTrigger.Conditions>
                <Setter TargetName="PART_CloseButton" Property="Visibility" Value="Collapsed" />
                <Setter TargetName="PART_ContextMenu" Property="IsEnabledHiddenMenuItem" Value="False" />
            </MultiDataTrigger>
            <DataTrigger Binding="{Binding Path=(tools_controls:DockingManager.DockingManager).(tools_controls:DockingManager.AutoHideVisibility),
							RelativeSource={RelativeSource TemplatedParent}}" Value="False">
                <Setter TargetName="PART_AwlButton" Property="Visibility" Value="Collapsed" />
                <Setter TargetName="PART_ContextMenu" Property="IsEnabledAutoHideMenuItem" Value="False" />
            </DataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding Path=IsMouseOver, RelativeSource={RelativeSource Self}}" Value="True" />
                    <Condition Binding="{Binding Path=(tools_controls:DockingManager.InternalDataContext).(tools_controls:DockingManager.IsDragging), RelativeSource={RelativeSource TemplatedParent}}" Value="True" />
                </MultiDataTrigger.Conditions>
                <Setter TargetName="CoverletControl" Property="Visibility" Value="Visible" />
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding Path=(tools_controls:DockingManager.InternalDataContext).(tools_controls:DockedElementTabbedHost.ShowTabs), RelativeSource={RelativeSource TemplatedParent}}" Value="False" />
                    <Condition Binding="{Binding Path=(tools_controls:DockingManager.InternalDataContext).(tools_controls:DockingManager.CanAutoHide), RelativeSource={RelativeSource TemplatedParent}}" Value="False" />
                </MultiDataTrigger.Conditions>
                <Setter TargetName="PART_AwlButton" Property="Visibility" Value="Collapsed" />
                <Setter TargetName="PART_ContextMenu" Property="IsEnabledAutoHideMenuItem" Value="False" />
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding Path=(tools_controls:DockingManager.InternalDataContext).(tools_controls:DockedElementTabbedHost.ShowTabs), RelativeSource={RelativeSource TemplatedParent}}" Value="True" />
                    <Condition Binding="{Binding Path=(tools_controls:DockingManager.InternalDataContext).(tools_controls:DockingManager.CanAutoHide), RelativeSource={RelativeSource TemplatedParent}}" Value="False" />
                </MultiDataTrigger.Conditions>
                <Setter TargetName="PART_AwlButton" Property="Visibility" Value="Collapsed" />
                <Setter TargetName="PART_ContextMenu" Property="IsEnabledAutoHideMenuItem" Value="False" />
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding Path=(tools_controls:DockingManager.InternalDataContext).(tools_controls:DockedElementTabbedHost.ShowTabs), RelativeSource={RelativeSource TemplatedParent}}" Value="True" />
                    <Condition Binding="{Binding Path=AutoHideTabsMode, RelativeSource={RelativeSource AncestorType={x:Type tools_controls:DockingManager}}}" Value="AutoHideGroup" />
                    <Condition Binding="{Binding Path=CanAutoHideGroup, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type tools_controls:DockedElementTabbedHost}}}" Value="False" />
                </MultiDataTrigger.Conditions>
                <Setter TargetName="PART_AwlButton" Property="Visibility" Value="Collapsed" />
                <Setter TargetName="PART_ContextMenu" Property="IsEnabledHiddenMenuItem" Value="False" />
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding Path=(tools_controls:DockingManager.InternalDataContext).(tools_controls:DockedElementTabbedHost.ShowTabs), RelativeSource={RelativeSource TemplatedParent}}" Value="False" />
                    <Condition Binding="{Binding Path=(tools_controls:DockingManager.InternalDataContext).(tools_controls:DockingManager.CanAutoHide), RelativeSource={RelativeSource TemplatedParent}}" Value="False" />
                </MultiDataTrigger.Conditions>
                <Setter TargetName="PART_AwlButton" Property="Visibility" Value="Collapsed" />
                <Setter TargetName="PART_ContextMenu" Property="IsEnabledAutoHideMenuItem" Value="False" />
            </MultiDataTrigger>
            <Trigger Property="Visibility" Value="Collapsed">
                <Setter TargetName="PART_ContentPresenter" Property="Content" Value="{x:Null}" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style x:Key="DockHeaderStyle" TargetType="{x:Type tools_controls:DockHeaderPresenter}">
        <Setter Property="Focusable" Value="False" />
        <Setter Property="MinHeight" Value="17" />
        <Setter Property="Foreground" 
						Value="{Binding Path=DockingManager.HeaderForeground,
							RelativeSource={RelativeSource Mode=Self}}" />
        <Setter Property="Background" 
				Value="{Binding Path=DockingManager.HeaderBackground,
					RelativeSource={RelativeSource Mode=Self}}" />
        <Setter Property="BorderBrush" 
				Value="{Binding Path=DockingManager.HeaderBorderBrush,
					RelativeSource={RelativeSource Mode=Self}}" />
        <Setter Property="BorderThickness" 
				Value="{Binding Path=DockingManager.HeaderBorderThickness,
					RelativeSource={RelativeSource Mode=Self}}" />
        <Style.Triggers>
            <Trigger Property="UseNativeFloatWindow" Value="True">
                <Setter Property="Template" Value="{DynamicResource NativeFloatWindowStyle}" />
            </Trigger>
            <Trigger Property="UseNativeFloatWindow" Value="False">
                <Setter Property="Template" Value="{DynamicResource DefaultTemplateStyle}" />
            </Trigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="windows_shared:SkinStorage.VisualStyle" Value="Default" />
                    <Condition Property="IsRichHeader" Value="False" />
                </MultiTrigger.Conditions>
                <Setter Property="MinHeight" 
						Value="{Binding Path=(tools_controls:DockingManager.DockingManager).(tools_controls:DockingManager.EndDockHeaderHeight),
							RelativeSource={RelativeSource TemplatedParent}}" />
            </MultiTrigger>
            <DataTrigger Binding="{Binding Path=IsTemplateParenKeyboardFocusWithin, RelativeSource={RelativeSource Self}}"
						Value="True">
                <Setter Property="Foreground" 
						Value="{Binding Path=DockingManager.HeaderForegroundSelected,
							RelativeSource={RelativeSource Mode=Self}}" />
                <Setter Property="Background" 
						Value="{Binding Path=DockingManager.SelectedHeaderBackground,
							RelativeSource={RelativeSource Mode=Self}}" />
                <Setter Property="BorderBrush" Value="{DynamicResource ActiveBorderBrush}" />
                <Setter Property="BorderThickness" Value="1" />
            </DataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding Path=IsMouseOver
							       , RelativeSource={RelativeSource Self}}"
						    Value="True" />
                    <Condition Binding="{Binding Path=DockingManager.EnableMouseHoverBackground
									, RelativeSource={RelativeSource Self}}"
								Value="True" />
                </MultiDataTrigger.Conditions>
                <Setter Property="Background" 
                        Value="{Binding Path=DockingManager.HeaderMouseOverBackground
									, RelativeSource={RelativeSource Mode=Self}}"/>
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding Path=IsMouseOver, RelativeSource={RelativeSource Self}}" 
								Value="True" />
                    <Condition Binding="{Binding Path=DockingManager.IsEnableHotTracking,
							RelativeSource={RelativeSource Mode=Self}}"
						    Value="True" />
                </MultiDataTrigger.Conditions>
                <Setter Property="Background" 
						Value="{Binding Path=DockingManager.HeaderMouseOverBackground,
							RelativeSource={RelativeSource Mode=Self}}" />
            </MultiDataTrigger>
        </Style.Triggers>
    </Style>
    <Style BasedOn="{StaticResource DockHeaderStyle}" TargetType="{x:Type tools_controls:DockHeaderPresenter}"/>
	
    <Style x:Key="{x:Type tools_controls:DraggedObjectShader}" TargetType="{x:Type windows_shared:TemplatedAdornerInternalControl}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type windows_shared:TemplatedAdornerInternalControl}">
                    <Border Background="{DynamicResource BackgroundBrush}" Opacity="0.2">
                        <TextBlock
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center"
                            Foreground="{StaticResource ForegroundBrush}"
                            Text="Dragged" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--<Style x:Key="{x:Type tools_controls:FloatWindow}" TargetType="{x:Type ContentControl}">
       <Setter Property="tools_controls:DockingManager.InternalDataContext" Value="{Binding Path=PrimaryElement
			, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type tools_controls:IWindow}}}" />
        <Setter Property="SnapsToDevicePixels" Value="true"/>
        <Setter Property="Template" Value="{Binding Path=FloatWindowTemplate
									, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type tools_controls:DockingManager}}}"/>
    </Style>-->

    <!--<Style BasedOn="{StaticResource FloatWindowStyle}" TargetType="{x:Type ContentControl}"/>-->

    <Style x:Key="{x:Type tools_controls:HostAdornerVS2003}" TargetType="{x:Type windows_shared:TemplatedAdornerInternalControl}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate>
                    <DockPanel IsHitTestVisible="False" LastChildFill="False">
                        <Border
                            MinWidth="60"
                            MinHeight="60"
                            Background="{DynamicResource BorderBrush}"
                            DockPanel.Dock="{Binding Path=Side, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type tools_controls:HostAdornerVS2003}}}"
                            IsHitTestVisible="False" />
                    </DockPanel>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>



    <Style x:Key="{x:Type tools_controls:UIElementAdorner}" TargetType="{x:Type windows_shared:TemplatedAdornerInternalControl}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="windows_shared:TemplatedAdornerInternalControl">
                    <ContentPresenter
                        Name="PART_ContentPresenter"
                        Width="Auto"
                        Height="Auto" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Geometry x:Key="NativeFlatKeyClosePath">M0.99999994,4.6419678 L0.99999994,8.3919678 L6,8.3294678 L6,4.6419678 z M2.7139893,2.000144 L2.7139893,2.5169678 L7,2.5169678 L7,5.6879282 L7.7139893,5.6879282 L7.7139893,2.000144 z M1.7139893,0 L8.7139893,0 L8.7139893,6.6880002 L7,6.6880002 L7,9.5169678 L0,9.5169678 L0,2.5169678 L1.7139893,2.5169678 z</Geometry>
    <Geometry x:Key="NativeFlatKeyCloseTouchPath">F1 M 202.351,150.334L 183.571,150.334L 183.571,158.489L 177.649,158.489L 177.649,175.666L 196.429,175.666L 196.429,167.511L 202.351,167.511L 202.351,150.334 Z M 194.23,173.468L 179.848,173.468L 179.848,162.886L 183.571,162.886L 185.77,162.886L 194.23,162.886L 194.23,165.312L 194.23,167.511L 194.23,173.468 Z M 200.152,165.312L 196.429,165.312L 196.429,158.489L 185.77,158.489L 185.77,154.731L 200.152,154.731L 200.152,165.312 Z</Geometry>
    <ControlTemplate x:Key="NativeFlatKeyClose" TargetType="{x:Type ToggleButton}">
        <StackPanel>
            <Border
                x:Name="brdBack"
                Width="20"
                Height="20"
                Margin="0,0,1,1"
                Background="{TemplateBinding Background}"
                BorderBrush="{TemplateBinding BorderBrush}"
                BorderThickness="1">
                <Path
                    Name="pathButton"
                    Width="9"
                    Height="9"
                    HorizontalAlignment="Center"
                    VerticalAlignment="Center"
                    Data="M109,51 L216,142 M215,52 L109,142"
                    SnapsToDevicePixels="False"
                    Stretch="Fill"
                    Stroke="{TemplateBinding Foreground}"
                    StrokeThickness="1.5" />
            </Border>
        </StackPanel>
        <ControlTemplate.Triggers>
            <DataTrigger Binding="{Binding Path=(tools_controls:DockingManager.DockingManager).(tools_controls:DockingManager.IsTouchEnabled),
							RelativeSource={RelativeSource TemplatedParent}}" Value="True">
                <Setter TargetName="brdBack" Property="Width" Value="35" />
                <Setter TargetName="brdBack" Property="Height" Value="35" />
                <Setter TargetName="pathButton" Property="Data" Value="{DynamicResource NativeFlatKeyCloseTouchPath}" />
                <Setter TargetName="pathButton" Property="Width" Value="13" />
                <Setter TargetName="pathButton" Property="Height" Value="13" />
                <Setter TargetName="pathButton" Property="StrokeThickness" Value="0" />
                <Setter TargetName="pathButton" Property="Stroke" Value="{DynamicResource GlyphBrush}" />
            </DataTrigger>

            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding Path=(tools_controls:NativeFloatWindow.DockingManager).(tools_controls:DockingManager.IsTouchEnabled), RelativeSource={RelativeSource TemplatedParent}}" Value="True" />
                </MultiDataTrigger.Conditions>
                <Setter TargetName="brdBack" Property="Width" Value="35" />
                <Setter TargetName="brdBack" Property="Height" Value="35" />
                <Setter TargetName="pathButton" Property="Data" Value="F1M481.917,290.3564L479.344,287.7834L472.417,294.7094L465.49,287.7834L462.917,290.3564L469.844,297.2834L462.917,304.2094L465.49,306.7824L472.417,299.8564L479.344,306.7824L481.917,304.2094L474.99,297.2834z" />
                <Setter TargetName="pathButton" Property="Width" Value="13" />
                <Setter TargetName="pathButton" Property="Height" Value="13" />
                <Setter TargetName="pathButton" Property="StrokeThickness" Value="0" />
                <Setter TargetName="pathButton" Property="Stroke" Value="{DynamicResource GlyphBrush}" />
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding Path=IsMouseOver, RelativeSource={RelativeSource Self}}" Value="True" />
                </MultiDataTrigger.Conditions>
                <Setter TargetName="brdBack" Property="Background" Value="{DynamicResource HoverBackgroundBrush}" />
                <Setter TargetName="brdBack" Property="BorderBrush" Value="{DynamicResource HoverBorderBrush}" />
                <Setter TargetName="pathButton" Property="Stroke" Value="{DynamicResource HoverGlyphBrush}" />

            </MultiDataTrigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter TargetName="pathButton" Property="Opacity" Value="0.5" />
            </Trigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding Path=IsEnabled, RelativeSource={RelativeSource Self}}" Value="False" />
                </MultiDataTrigger.Conditions>
                <Setter TargetName="pathButton" Property="Opacity" Value="0.5" />
            </MultiDataTrigger>
            <!--<MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding Path=(tools_controls:DockingManager.InternalDataContext).(tools_controls:DockedElementTabbedHost.HostedElement).(tools_controls:DockingManager.State),RelativeSource={RelativeSource TemplatedParent}}" Value="Float" />
                                    </MultiDataTrigger.Conditions>
                                    <Setter TargetName="brdBack" Property="Background" >

                                        <Setter.Value>
                                            <ImageBrush ImageSource="pack://application:,,,/Syncfusion.Tools.WPF;component/Framework/DockingManager/Resources/FloatHeaderCloseBtnNormalImg.png" />
                                        </Setter.Value>
                                    </Setter>

                                    <Setter TargetName="brdBack" Property="BorderBrush" Value="#00FFFFFF"></Setter>

                                    <Setter TargetName="pathButton" Property="Stretch" Value="None"/>
                                </MultiDataTrigger>
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding Path=IsEnabled, RelativeSource={RelativeSource Self}}"
							   Value="False" />
                                        <Condition Binding="{Binding Path=IsKeyboardFocusWithin, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type tools_controls:NativeFloatWindow}}}"
							   Value="False" />
                                    </MultiDataTrigger.Conditions>
                                    <Setter TargetName="brdBack" Property="Background">
                                        <Setter.Value>
                                            <ImageBrush ImageSource="pack://application:,,,/Syncfusion.Tools.WPF;component/Framework/DockingManager/Resources/FloatHeaderCloseBtnDisabledInactiveImg.png" />
                                        </Setter.Value>
                                    </Setter>
                                </MultiDataTrigger>
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding Path=IsEnabled, RelativeSource={RelativeSource Self}}"
							Value="False" />
                                        <Condition Binding="{Binding Path=IsKeyboardFocusWithin, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type tools_controls:NativeFloatWindow}}}"
							   Value="True" />
                                    </MultiDataTrigger.Conditions>
                                    <Setter TargetName="brdBack" Property="Background">
                                        <Setter.Value>
                                            <ImageBrush ImageSource="pack://application:,,,/Syncfusion.Tools.WPF;component/Framework/DockingManager/Resources/FloatHeaderCloseBtnDisabledImg.png" />
                                        </Setter.Value>
                                    </Setter>
                                </MultiDataTrigger>-->

        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Geometry x:Key="FlatKeyClosePath">M109,51 L216,142 M215,52 L109,142</Geometry>
    <Geometry x:Key="FlatKeyCloseTouchPath">F1M481.917,290.3564L479.344,287.7834L472.417,294.7094L465.49,287.7834L462.917,290.3564L469.844,297.2834L462.917,304.2094L465.49,306.7824L472.417,299.8564L479.344,306.7824L481.917,304.2094L474.99,297.2834z</Geometry>
    <ControlTemplate x:Key="FlatKeyClose" TargetType="{x:Type ToggleButton}">
        <StackPanel>
            <Border
                x:Name="brdBack"
                Width="15"
                Height="15"
                Margin="0,0,1,1"
                Background="{TemplateBinding Background}"
                BorderBrush="{TemplateBinding BorderBrush}"
                BorderThickness="1">
                <Path
                    Name="pathButton"
                    Width="9"
                    Height="8"
                    HorizontalAlignment="Center"
                    VerticalAlignment="Center"
                    Data="{StaticResource FlatKeyClosePath}"
                    SnapsToDevicePixels="False"
                    Stretch="Fill"
                    Stroke="{TemplateBinding Foreground}"
                    StrokeThickness="1.5" />
            </Border>
        </StackPanel>
        <ControlTemplate.Triggers>
            <DataTrigger Binding="{Binding Path=IsTouchEnabled, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type tools_controls:DockingManager}}}" Value="True">
                <Setter TargetName="brdBack" Property="Width" Value="35" />
                <Setter TargetName="brdBack" Property="Height" Value="35" />
                <Setter TargetName="pathButton" Property="Data" Value="{DynamicResource FlatKeyCloseTouchPath}" />
                <Setter TargetName="pathButton" Property="Width" Value="13" />
                <Setter TargetName="pathButton" Property="Height" Value="13" />
                <Setter TargetName="pathButton" Property="StrokeThickness" Value="0" />
                <Setter TargetName="pathButton" Property="Fill" Value="{DynamicResource HoverGlyphBrush}" />
            </DataTrigger>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter TargetName="brdBack" Property="Background" Value="{DynamicResource HoverBackgroundBrush}" />
                <Setter TargetName="brdBack" Property="BorderBrush" Value="{DynamicResource HoverBorderBrush}" />

                <Setter TargetName="pathButton" Property="Stroke" Value="{DynamicResource HoverGlyphBrush}" />
            </Trigger>
            
            <Trigger Property="IsEnabled" Value="False">
                <Setter TargetName="pathButton" Property="Opacity" Value="0.5" />
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter TargetName="brdBack" Property="Background" Value="{DynamicResource ActiveBackgroundBrush}" />
                <Setter TargetName="brdBack" Property="BorderBrush" Value="{DynamicResource ActiveBorderBrush}" />

                <Setter TargetName="pathButton" Property="Stroke" Value="{DynamicResource ActiveGlyphBrush}" />
            </Trigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding Path=IsEnabled, RelativeSource={RelativeSource Self}}" Value="False" />
                </MultiDataTrigger.Conditions>
                <Setter TargetName="pathButton" Property="Opacity" Value="0.5" />
            </MultiDataTrigger>
            <!--<MultiDataTrigger>
               <MultiDataTrigger.Conditions>
                   <Condition Binding="{Binding Path=(tools_controls:DockingManager.InternalDataContext).(tools_controls:DockedElementTabbedHost.HostedElement).(tools_controls:DockingManager.State),RelativeSource={RelativeSource AncestorType={x:Type tools_controls:IWindow}}}" Value="Float" />
               </MultiDataTrigger.Conditions>
                                    <Setter TargetName="brdBack" Property="Background" >

                                        <Setter.Value>
                                            <ImageBrush ImageSource="pack://application:,,,/Syncfusion.Tools.WPF;component/Framework/DockingManager/Resources/FloatHeaderCloseBtnNormalImg.png" />
                                        </Setter.Value>
                                    </Setter>

                                    <Setter TargetName="brdBack" Property="BorderBrush" Value="#00FFFFFF"></Setter>
                                    <Setter TargetName="pathButton" Property="Stretch" Value="None"/>
            </MultiDataTrigger>
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding Path=IsMouseOver, RelativeSource={RelativeSource Self}}"
							   Value="True" />
                                        <Condition Binding="{Binding Path=IsKeyboardFocusWithin, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type tools_controls:FloatWindow}}}"
							   Value="True" />
                                    </MultiDataTrigger.Conditions>
                                    <Setter TargetName="brdBack" Property="Background">
                                        <Setter.Value>
                                            <ImageBrush ImageSource="pack://application:,,,/Syncfusion.Tools.WPF;component/Framework/DockingManager/Resources/FloatHeaderCloseBtnOverImg.png" />
                                        </Setter.Value>
                                    </Setter>
                                </MultiDataTrigger>
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding Path=IsMouseOver, RelativeSource={RelativeSource Self}}"
							   Value="True" />
                                        <Condition Binding="{Binding Path=IsKeyboardFocusWithin, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type tools_controls:FloatWindow}}}"
							   Value="False" />
                                    </MultiDataTrigger.Conditions>
                                    <Setter TargetName="brdBack" Property="Background" >
                                        <Setter.Value>
                                            <ImageBrush ImageSource="pack://application:,,,/Syncfusion.Tools.WPF;component/Framework/DockingManager/Resources/FloatHeaderCloseBtnOverInactiveImg.png" />
                                        </Setter.Value>
                                    </Setter>
                                </MultiDataTrigger>
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding Path=IsPressed, RelativeSource={RelativeSource Self}}"
							   Value="True" />
                                        <Condition Binding="{Binding Path=IsKeyboardFocusWithin, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type tools_controls:FloatWindow}}}"
							   Value="True" />
                                    </MultiDataTrigger.Conditions>
                                    <Setter TargetName="brdBack" Property="Background">
                                        <Setter.Value>
                                            <ImageBrush ImageSource="pack://application:,,,/Syncfusion.Tools.WPF;component/Framework/DockingManager/Resources/FloatHeaderCloseBtnPressImg.png" />
                                        </Setter.Value>
                                    </Setter>
                                </MultiDataTrigger>
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding Path=IsEnabled, RelativeSource={RelativeSource Self}}"
							   Value="False" />
                                        <Condition Binding="{Binding Path=IsKeyboardFocusWithin, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type tools_controls:FloatWindow}}}"
							   Value="False" />
                                    </MultiDataTrigger.Conditions>
                                    <Setter TargetName="brdBack" Property="Background">
                                        <Setter.Value>
                                            <ImageBrush ImageSource="pack://application:,,,/Syncfusion.Tools.WPF;component/Framework/DockingManager/Resources/FloatHeaderCloseBtnDisabledInactiveImg.png" />
                                        </Setter.Value>
                                    </Setter>
                                </MultiDataTrigger>
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding Path=IsEnabled, RelativeSource={RelativeSource Self}}"
							Value="False" />
                                        <Condition Binding="{Binding Path=IsKeyboardFocusWithin, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type tools_controls:FloatWindow}}}"
							   Value="True" />
                                    </MultiDataTrigger.Conditions>
                                    <Setter TargetName="brdBack" Property="Background">
                                        <Setter.Value>
                                            <ImageBrush ImageSource="pack://application:,,,/Syncfusion.Tools.WPF;component/Framework/DockingManager/Resources/FloatHeaderCloseBtnDisabledImg.png" />
                                        </Setter.Value>
                                    </Setter>
                                </MultiDataTrigger>-->

        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Geometry x:Key="FlatKeyPath">M109,51 L216,142 M215,52 L109,142</Geometry>
    <Geometry x:Key="FlatKeyTouchPath">F1M481.917,290.3564L479.344,287.7834L472.417,294.7094L465.49,287.7834L462.917,290.3564L469.844,297.2834L462.917,304.2094L465.49,306.7824L472.417,299.8564L479.344,306.7824L481.917,304.2094L474.99,297.2834z</Geometry>
    <ControlTemplate x:Key="FlatKeyMenu" TargetType="{x:Type ToggleButton}">
        <StackPanel>
            <Border
                x:Name="brdBack"
                Width="20"
                Height="20"
                BorderThickness="1">
                <Path
                    Name="pathButton"
                    Width="12.333"
                    Margin="3,7.583,3,4.25"
                    HorizontalAlignment="Center"
                    Data="F1 M 496.01,346L 492.01,342L 499.99,342L 496.01,346 Z "
                    Fill="{TemplateBinding Foreground}"
                    Stretch="Fill" />
            </Border>
        </StackPanel>

        <ControlTemplate.Triggers>
            <DataTrigger Binding="{Binding Path=(tools_controls:DockingManager.DockingManager).(tools_controls:DockingManager.IsTouchEnabled),
							RelativeSource={RelativeSource TemplatedParent}}" Value="True">
                <Setter TargetName="brdBack" Property="Width" Value="35" />
                <Setter TargetName="brdBack" Property="Height" Value="35" />
                <Setter TargetName="pathButton" Property="Width" Value="13" />
                <Setter TargetName="pathButton" Property="Height" Value="10" />
                <Setter TargetName="pathButton" Property="Data" Value="{DynamicResource FlatKeyTouchPath}" />
                <Setter TargetName="pathButton" Property="Stretch" Value="Fill" />
            </DataTrigger>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter TargetName="brdBack" Property="Background" Value="{DynamicResource HoverBackgroundBrush}" />
                <Setter TargetName="brdBack" Property="BorderBrush" Value="{DynamicResource HoverBorderBrush}" />
                <Setter TargetName="pathButton" Property="Fill" Value="{DynamicResource HoverGlyphBrush}" />
            </Trigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding Path=IsMouseOver, RelativeSource={RelativeSource Self}}" Value="True" />
                    <Condition Binding="{Binding Path=IsTemplateParenKeyboardFocusWithin, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type tools_controls:DockHeaderPresenter}}}" Value="True" />
                </MultiDataTrigger.Conditions>
                <Setter TargetName="brdBack" Property="Background" Value="{DynamicResource HoverBackgroundBrush}" />
                <Setter TargetName="brdBack" Property="BorderBrush" Value="{DynamicResource HoverBorderBrush}" />
                <Setter TargetName="pathButton" Property="Fill" Value="{DynamicResource HoverGlyphBrush}" />
            </MultiDataTrigger>
            <Trigger Property="IsChecked" Value="True">
                <Setter TargetName="brdBack" Property="Background" Value="{DynamicResource ActiveBackgroundBrush}" />
                <Setter TargetName="brdBack" Property="BorderBrush" Value="{DynamicResource ActiveBorderBrush}" />
                <Setter TargetName="pathButton" Property="Fill" Value="{DynamicResource ActiveGlyphBrush}" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter TargetName="pathButton" Property="Opacity" Value="0.5" />
            </Trigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding Path=IsTemplateParenKeyboardFocusWithin, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type tools_controls:DockHeaderPresenter}}}" Value="True" />
                    <Condition Binding="{Binding Path=IsEnabled, RelativeSource={RelativeSource Self}}" Value="False" />
                </MultiDataTrigger.Conditions>
                <Setter TargetName="pathButton" Property="Opacity" Value="0.5" />
            </MultiDataTrigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter TargetName="brdBack" Property="Background" Value="{DynamicResource ActiveBackgroundBrush}" />
                <Setter TargetName="brdBack" Property="BorderBrush" Value="{DynamicResource ActiveBorderBrush}" />
                <Setter TargetName="pathButton" Property="Fill" Value="{DynamicResource ActiveGlyphBrush}" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Geometry x:Key="pin2Path1">M0,0 L1.29944,0 L1.29944,6.60547 L0,6.60547 z</Geometry>
    <Geometry x:Key="pin2Path2">M0,0 L1.99609,0 L1.99609,6.60547 L0,6.60547 z</Geometry>
    <Geometry x:Key="pin2Path3">M 7.5 9 L 7.5 2</Geometry>
    <Geometry x:Key="pin2Path4">M 2 8.5 L 11 8.5</Geometry>
    <Geometry x:Key="AwlKeyPath1">M 6.5 9 L 6.5 12</Geometry>
    <Geometry x:Key="AwlKeyPath2">F1M427.416,296.4727L446.416,296.4727L436.917,305.9727z</Geometry>
    <Geometry x:Key="AwlKeyPath3">F1M427.416,296.4727L446.416,296.4727L436.917,305.9727z</Geometry>
    <ControlTemplate x:Key="AwlKey" TargetType="{x:Type ToggleButton}">
        <StackPanel>
            <Border
                x:Name="brdBack"
                Width="20"
                Height="20"
                Margin="0,0,1,1"
                Background="Transparent"
                BorderThickness="1">
                <Canvas
                    Width="15"
                    Height="15"
                    Margin="0,4,0,0">
                    <Viewbox
                        Canvas.Top="-1.227"
                        Width="12.125"
                        Height="13.227"
                        Stretch="Fill">
                        <Grid Width="11" Height="12">
                            <Rectangle
                                x:Name="AwlBtnImg"
                                Margin="4,2,2,3"
                                Stroke="{TemplateBinding Foreground}"
                                StrokeThickness="1" />
                            <Path
                                x:Name="AwlInnerShadowBtnImg"
                                Margin="0,0,3,3"
                                Data="M 7.5 9 L 7.5 2"
                                SnapsToDevicePixels="True"
                                Stroke="{TemplateBinding Foreground}" />
                            <Path
                                x:Name="AwlLineBtnImg"
                                Margin="0,0,0,3"
                                Data="M 2 8.5 L 11 8.5"
                                Stroke="{TemplateBinding Foreground}" />
                            <Path
                                x:Name="AwlBottomLineBtnImg"
                                Margin="0,-1,4,0"
                                Data="M 6.5 9 L 6.5 12"
                                SnapsToDevicePixels="True"
                                Stroke="{TemplateBinding Foreground}" />
                        </Grid>
                    </Viewbox>
                </Canvas>
            </Border>
        </StackPanel>
        <ControlTemplate.Triggers>

            <Trigger Property="IsMouseOver" Value="True">
                <Setter TargetName="brdBack" Property="Background" Value="{DynamicResource HoverBackgroundBrush}" />
                <Setter TargetName="brdBack" Property="BorderBrush" Value="{DynamicResource HoverBorderBrush}" />

                <Setter TargetName="AwlBtnImg" Property="Stroke" Value="{DynamicResource HoverGlyphBrush}" />
                <Setter TargetName="AwlInnerShadowBtnImg" Property="Stroke" Value="{DynamicResource HoverGlyphBrush}" />
                <Setter TargetName="AwlLineBtnImg" Property="Stroke" Value="{DynamicResource HoverGlyphBrush}" />
                <Setter TargetName="AwlBottomLineBtnImg" Property="Stroke" Value="{DynamicResource HoverGlyphBrush}" />
            </Trigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding Path=IsMouseOver, RelativeSource={RelativeSource Self}}" Value="True" />
                    <Condition Binding="{Binding Path=IsTemplateParenKeyboardFocusWithin, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type tools_controls:DockHeaderPresenter}}}" Value="True" />
                </MultiDataTrigger.Conditions>
                <Setter TargetName="brdBack" Property="Background" Value="{DynamicResource HoverBackgroundBrush}" />
                <Setter TargetName="brdBack" Property="BorderBrush" Value="{DynamicResource HoverBorderBrush}" />

                <Setter TargetName="AwlBtnImg" Property="Stroke" Value="{DynamicResource HoverGlyphBrush}" />
                <Setter TargetName="AwlInnerShadowBtnImg" Property="Stroke" Value="{DynamicResource HoverGlyphBrush}" />
                <Setter TargetName="AwlLineBtnImg" Property="Stroke" Value="{DynamicResource HoverGlyphBrush}" />
                <Setter TargetName="AwlBottomLineBtnImg" Property="Stroke" Value="{DynamicResource HoverGlyphBrush}" />
            </MultiDataTrigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter TargetName="AwlBtnImg" Property="Opacity" Value="0.5" />
                <Setter TargetName="AwlInnerShadowBtnImg" Property="Opacity" Value="0.5" />
                <Setter TargetName="AwlLineBtnImg" Property="Opacity" Value="0.5" />
                <Setter TargetName="AwlBottomLineBtnImg" Property="Opacity" Value="0.5" />
            </Trigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding Path=IsTemplateParenKeyboardFocusWithin, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type tools_controls:DockHeaderPresenter}}}" Value="True" />
                    <Condition Binding="{Binding Path=IsEnabled, RelativeSource={RelativeSource Self}}" Value="False" />
                </MultiDataTrigger.Conditions>
                <Setter TargetName="AwlBtnImg" Property="Opacity" Value="0.5" />
                <Setter TargetName="AwlInnerShadowBtnImg" Property="Opacity" Value="0.5" />
                <Setter TargetName="AwlLineBtnImg" Property="Opacity" Value="0.5" />
                <Setter TargetName="AwlBottomLineBtnImg" Property="Opacity" Value="0.5" />
            </MultiDataTrigger>
            <DataTrigger Binding= "{Binding Path=(tools_controls:DockingManager.DockingManager).(tools_controls:DockingManager.AutoHideVisibility),
							RelativeSource={RelativeSource TemplatedParent}}" Value="False">
                <Setter TargetName="AwlBtnImg" Property="Visibility" Value="Collapsed" />
                <Setter TargetName="AwlInnerShadowBtnImg" Property="Visibility" Value="Collapsed" />
                <Setter TargetName="AwlLineBtnImg" Property="Visibility" Value="Collapsed" />
                <Setter TargetName="AwlBottomLineBtnImg" Property="Visibility" Value="Collapsed" />

                <Setter TargetName="brdBack" Property="Margin" Value="0" />
                <Setter TargetName="brdBack" Property="BorderThickness" Value="0" />
            </DataTrigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter TargetName="brdBack" Property="Background" Value="{DynamicResource ActiveBackgroundBrush}" />
                <Setter TargetName="brdBack" Property="BorderBrush" Value="{DynamicResource ActiveBorderBrush}" />

                <Setter TargetName="AwlBtnImg" Property="Stroke" Value="{DynamicResource ActiveGlyphBrush}" />
                <Setter TargetName="AwlInnerShadowBtnImg" Property="Stroke" Value="{DynamicResource ActiveGlyphBrush}" />
                <Setter TargetName="AwlLineBtnImg" Property="Stroke" Value="{DynamicResource ActiveGlyphBrush}" />
                <Setter TargetName="AwlBottomLineBtnImg" Property="Stroke" Value="{DynamicResource ActiveGlyphBrush}" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <ControlTemplate x:Key="TouchAwlKey" TargetType="{x:Type ToggleButton}">
        <Border
            x:Name="brdBack"
            Width="35"
            Height="35"
            Margin="0,0,1,1"
            BorderBrush="Transparent"
            BorderThickness="1">
            <!--<Canvas Name="canvas" Width="15" Height="15" >
                <Rectangle Name="AwlBtnImg" Stroke="{TemplateBinding ToggleButton.Foreground}" StrokeThickness="1" Width="5" Height="7" Canvas.Top="2" Canvas.Left="4" />
                <Path Name="AwlInnerShadowBtnImg" SnapsToDevicePixels="True" Stroke="{TemplateBinding ToggleButton.Foreground}" Fill="Transparent" Data="M 7.5 9 L 7.5 2" />
                <Path Name="AwlLineBtnImg"  Stroke="{TemplateBinding ToggleButton.Foreground}" Fill="Transparent" Data="M 2 8.5 L 11 8.5" />
                <Path Name="AwlBottomLineBtnImg" SnapsToDevicePixels="True" Stroke="{TemplateBinding ToggleButton.Foreground}" Fill="Transparent" Data="M 6.5 9 L 6.5 12" />
            </Canvas>-->
            <!--<Path x:Name="pathButton" SnapsToDevicePixels="True" StrokeThickness="1" Fill="{TemplateBinding ToggleButton.Foreground}"
                  Data="F1M403.841,291.727L408,291.727L408,300.005L403.841,300.005z M411.131,300.005L411.131,289.668L401.782,289.668L401.782,300.005L398.265,300.005L398.265,302.492L405.855,302.492L405.855,308.668L407.657,308.668L407.657,302.492L414.562,302.492L414.562,300.005z"
                  Stroke="{TemplateBinding ToggleButton.Foreground}" Height="8" Stretch="Fill" Width="9" HorizontalAlignment="Center"
                  VerticalAlignment="Center"/>-->
            <Viewbox
                x:Name="pin2"
                Width="13"
                Height="19">
                <Canvas Width="8.444" Height="12.4564">
                    <Rectangle
                        Name="AwlBottomHorizontalLine"
                        Canvas.Left="0"
                        Canvas.Top="7.55669"
                        Width="8.444"
                        Height="0.998657"
                        Fill="{TemplateBinding ToggleButton.Foreground}"
                        Stretch="Fill" />
                    <Path
                        Name="AwlBottomVerticalLine"
                        Canvas.Left="3.93758"
                        Canvas.Top="8.28386"
                        Width="0.78508"
                        Height="4.17253"
                        Data="{StaticResource pin2Path1}"
                        Fill="{TemplateBinding ToggleButton.Foreground}"
                        Stretch="Fill" />
                    <Path
                        Name="AwlTopHorizontalLine"
                        Canvas.Left="1.43628"
                        Canvas.Top="0"
                        Width="5.57022"
                        Height="1.27734"
                        Data="{StaticResource pin2Path2}"
                        Fill="{TemplateBinding ToggleButton.Foreground}"
                        Stretch="Fill" />
                    <Path
                        Name="AwlLeftVerticalLine"
                        Canvas.Left="1.43628"
                        Canvas.Top="1.20122"
                        Width="1.29944"
                        Height="6.60547"
                        Data="{StaticResource pin2Path3}"
                        Fill="{TemplateBinding ToggleButton.Foreground}"
                        Stretch="Fill" />
                    <Path
                        Name="AwlRightVerticalLine"
                        Canvas.Left="5.01"
                        Canvas.Top="0.951"
                        Width="1.996"
                        Height="6.856"
                        Data="{StaticResource pin2Path4}"
                        Fill="{TemplateBinding ToggleButton.Foreground}"
                        Stretch="Fill" />
                </Canvas>
            </Viewbox>
        </Border>
        <ControlTemplate.Triggers>
            <!--<DataTrigger Binding="{Binding Path=IsTouchEnabled, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type tools_controls:DockingManager}}}" Value="True">
                <Setter TargetName="brdBack" Property="Width" Value="35"/>
                <Setter TargetName="brdBack" Property="Height" Value="35"/>
                <Setter TargetName="pathButton" Property="Width" Value="17"/>
                <Setter TargetName="pathButton" Property="Height" Value="17"/>
                <Setter TargetName="pathButton" Property="Data" Value="F1M403.841,291.727L408,291.727L408,300.005L403.841,300.005z M411.131,300.005L411.131,289.668L401.782,289.668L401.782,300.005L398.265,300.005L398.265,302.492L405.855,302.492L405.855,308.668L407.657,308.668L407.657,302.492L414.562,302.492L414.562,300.005z"/>
                <Setter TargetName="pathButton" Property="Fill" Value="{Binding Path=Foreground,RelativeSource={RelativeSource AncestorType={x:Type ToggleButton}}}"/>
            </DataTrigger>-->

            <Trigger Property="IsMouseOver" Value="True">
                <Setter TargetName="brdBack" Property="Background" Value="{DynamicResource HoverBackgroundBrush}" />
                <Setter TargetName="brdBack" Property="BorderBrush" Value="{DynamicResource HoverBorderBrush}" />
                <Setter TargetName="AwlBottomHorizontalLine" Property="Fill" Value="{DynamicResource HoverGlyphBrush}" />
                <Setter TargetName="AwlBottomVerticalLine" Property="Fill" Value="{DynamicResource HoverGlyphBrush}" />
                <Setter TargetName="AwlTopHorizontalLine" Property="Fill" Value="{DynamicResource HoverGlyphBrush}" />
                <Setter TargetName="AwlLeftVerticalLine" Property="Fill" Value="{DynamicResource HoverGlyphBrush}" />
                <Setter TargetName="AwlRightVerticalLine" Property="Fill" Value="{DynamicResource HoverGlyphBrush}" />
            </Trigger>
            <DataTrigger Binding="{Binding Path=IsTemplateParenKeyboardFocusWithin, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type tools_controls:DockHeaderPresenter}}}" Value="True">
                <Setter TargetName="AwlBottomHorizontalLine" Property="Fill" Value="{DynamicResource ActiveGlyphBrush}" />
                <Setter TargetName="AwlBottomVerticalLine" Property="Fill" Value="{DynamicResource ActiveGlyphBrush}" />
                <Setter TargetName="AwlTopHorizontalLine" Property="Fill" Value="{DynamicResource ActiveGlyphBrush}" />
                <Setter TargetName="AwlLeftVerticalLine" Property="Fill" Value="{DynamicResource ActiveGlyphBrush}" />
                <Setter TargetName="AwlRightVerticalLine" Property="Fill" Value="{DynamicResource ActiveGlyphBrush}" />
            </DataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding Path=IsMouseOver, RelativeSource={RelativeSource Self}}" Value="True" />
                    <Condition Binding="{Binding Path=IsTemplateParenKeyboardFocusWithin, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type tools_controls:DockHeaderPresenter}}}" Value="True" />
                </MultiDataTrigger.Conditions>
                <Setter TargetName="brdBack" Property="Background" Value="{DynamicResource HoverBackgroundBrush}" />
                <Setter TargetName="brdBack" Property="BorderBrush" Value="{DynamicResource HoverBorderBrush}" />

                <Setter TargetName="AwlBottomHorizontalLine" Property="Fill" Value="{DynamicResource HoverGlyphBrush}" />
                <Setter TargetName="AwlBottomVerticalLine" Property="Fill" Value="{DynamicResource HoverGlyphBrush}" />
                <Setter TargetName="AwlTopHorizontalLine" Property="Fill" Value="{DynamicResource HoverGlyphBrush}" />
                <Setter TargetName="AwlLeftVerticalLine" Property="Fill" Value="{DynamicResource HoverGlyphBrush}" />
                <Setter TargetName="AwlRightVerticalLine" Property="Fill" Value="{DynamicResource HoverGlyphBrush}" />
            </MultiDataTrigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter TargetName="AwlBottomHorizontalLine" Property="Opacity" Value="0.5" />
                <Setter TargetName="AwlBottomVerticalLine" Property="Opacity" Value="0.5" />
                <Setter TargetName="AwlTopHorizontalLine" Property="Opacity" Value="0.5" />
                <Setter TargetName="AwlLeftVerticalLine" Property="Opacity" Value="0.5" />
                <Setter TargetName="AwlRightVerticalLine" Property="Opacity" Value="0.5" />
            </Trigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding Path=IsTemplateParenKeyboardFocusWithin, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type tools_controls:DockHeaderPresenter}}}" Value="True" />
                    <Condition Binding="{Binding Path=IsEnabled, RelativeSource={RelativeSource Self}}" Value="False" />
                </MultiDataTrigger.Conditions>
                <Setter TargetName="AwlBottomHorizontalLine" Property="Opacity" Value="0.5" />
                <Setter TargetName="AwlBottomVerticalLine" Property="Opacity" Value="0.5" />
                <Setter TargetName="AwlTopHorizontalLine" Property="Opacity" Value="0.5" />
                <Setter TargetName="AwlLeftVerticalLine" Property="Opacity" Value="0.5" />
                <Setter TargetName="AwlRightVerticalLine" Property="Opacity" Value="0.5" />
            </MultiDataTrigger>
            <DataTrigger Binding= "{Binding Path=(tools_controls:DockingManager.DockingManager).(tools_controls:DockingManager.AutoHideVisibility),
							RelativeSource={RelativeSource TemplatedParent}}" Value="False">
                <Setter TargetName="AwlBottomHorizontalLine" Property="Visibility" Value="Collapsed" />
                <Setter TargetName="AwlBottomVerticalLine" Property="Visibility" Value="Collapsed" />
                <Setter TargetName="AwlTopHorizontalLine" Property="Visibility" Value="Collapsed" />
                <Setter TargetName="AwlLeftVerticalLine" Property="Visibility" Value="Collapsed" />
                <Setter TargetName="AwlRightVerticalLine" Property="Visibility" Value="Collapsed" />
                <Setter TargetName="brdBack" Property="Margin" Value="0" />
                <Setter TargetName="brdBack" Property="BorderThickness" Value="0" />
            </DataTrigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>


    <Style x:Key="{x:Type tools_controls:CustomContextMenu}" TargetType="{x:Type tools_controls:CustomContextMenu}">
        <Setter Property="Foreground" Value="{DynamicResource ContentForegroundBrush}" />
        <Setter Property="Background" Value="{DynamicResource ContentBackgroundBrush}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type tools_controls:CustomContextMenu}">
                    <Border
                        Background="{StaticResource ContentBackgroundBrush}"
                        BorderBrush="{StaticResource ContentBorderBrush}"
                        BorderThickness="1">
                        <DockPanel Margin="0,2,0,2">
                            <ItemsPresenter DockPanel.Dock="Top" />
                        </DockPanel>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <Style x:Key="DocumentTabItemStyle" TargetType="{x:Type tools_controls:TabItemExt}">
        <Setter Property="HeaderTemplate">
            <Setter.Value>
                <DataTemplate>
                    <TextBlock
                        Padding="4,0,4,1"
                        Focusable="False"
                        IsHitTestVisible="False"
                        Text="{Binding}"
                        TextTrimming="CharacterEllipsis" />
                </DataTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <DataTemplate x:Key="DocumentTabItemHeaderTemplate">
        <TextBlock
            Focusable="False"
            IsHitTestVisible="False"
            Text="{Binding}"
            TextTrimming="CharacterEllipsis" />
    </DataTemplate>

    <Style x:Key="DefaultRepeatButtonStyle" TargetType="{x:Type RepeatButton}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <Border
                        Name="brdBack"
                        Background="{StaticResource BackgroundBrush}"
                        BorderBrush="{DynamicResource BorderBrush}"
                        BorderThickness="0">
                        <ContentPresenter Name="Content" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="brdBack" Property="BorderBrush" Value="{DynamicResource HoverBorderBrush}" />
                            <Setter TargetName="brdBack" Property="Background" Value="{DynamicResource HoverBackgroundBrush}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Geometry x:Key="HomePath1">M4,0L8,3.5 4,7</Geometry>
    <Geometry x:Key="HomePath2">M4,0L8,3.5 4,7</Geometry>
    <Geometry x:Key="PreviousTabPath">M0,0 L0.78508,0 L0.78508,4.17253 L0,4.17253 z</Geometry>
    <Geometry x:Key="NextTabPath">M0,0 L5.57022,0 L5.57022,1.27734 L0,1.27734 z</Geometry>
    <Geometry x:Key="EndPagePath1">M5,0L5,7</Geometry>
    <Geometry x:Key="EndPagePath2">M4,0L8,3.5 4,7</Geometry>
    <Style x:Key="DefaultScrollButtonsBarStyle" TargetType="{x:Type tools_controls:ScrollButtonsBar}">
        <Setter Property="Background" Value="{Binding Background, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type tools_controls:SidePanel}}}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type tools_controls:ScrollButtonsBar}">
                    <StackPanel
                        Canvas.Left="0"
                        Canvas.Top="0"
                        Panel.ZIndex="2"
                        Background="{TemplateBinding Background}"
                        Orientation="Horizontal">
                        <RepeatButton
                            Name="PART_HomePage"
                            Width="15"
                            Height="{TemplateBinding ActualHeight}"
                            Background="{TemplateBinding Background}"
                            Command="tools_controls:SidePanel.HomePageCommand"
                            Style="{StaticResource DefaultRepeatButtonStyle}">
                            <RepeatButton.Content>
                                <Canvas Height="{TemplateBinding ActualHeight}">
                                    <Path
                                        Name="PART_Path1"
                                        Canvas.Left="14"
                                        Canvas.Top="14"
                                        Data="{StaticResource HomePath1}"
                                        Fill="Black"
                                        Stroke="Black">
                                        <Path.RenderTransform>
                                            <RotateTransform Angle="180" />
                                        </Path.RenderTransform>
                                    </Path>
                                    <Path
                                        Name="PART_Path5"
                                        Canvas.Left="0"
                                        Canvas.Top="7"
                                        Data="{StaticResource HomePath2}"
                                        Fill="Black"
                                        Stroke="Black" />
                                </Canvas>
                            </RepeatButton.Content>
                        </RepeatButton>
                        <RepeatButton
                            Name="PART_PreviousTab"
                            Width="15"
                            Height="{TemplateBinding ActualHeight}"
                            Background="{TemplateBinding Background}"
                            Command="tools_controls:SidePanel.PreviousCommand"
                            Style="{StaticResource DefaultRepeatButtonStyle}">
                            <RepeatButton.Content>
                                <Canvas Height="{TemplateBinding ActualHeight}">
                                    <Path
                                        Name="PART_Path2"
                                        Canvas.Left="12"
                                        Canvas.Top="14"
                                        Data="{StaticResource PreviousTabPath}"
                                        Fill="Black"
                                        Stroke="Black">
                                        <Path.RenderTransform>
                                            <RotateTransform Angle="180" />
                                        </Path.RenderTransform>
                                    </Path>
                                </Canvas>
                            </RepeatButton.Content>
                        </RepeatButton>
                        <RepeatButton
                            Name="PART_NextTab"
                            Width="15"
                            Height="{TemplateBinding ActualHeight}"
                            Background="{TemplateBinding Background}"
                            Command="tools_controls:SidePanel.NextCommand"
                            Style="{StaticResource DefaultRepeatButtonStyle}">
                            <RepeatButton.Content>
                                <Canvas Height="{TemplateBinding ActualHeight}">
                                    <Path
                                        Name="PART_Path3"
                                        Canvas.Left="0"
                                        Canvas.Top="7"
                                        Data="{StaticResource NextTabPath}"
                                        Fill="Black"
                                        Stroke="Black" />
                                </Canvas>
                            </RepeatButton.Content>
                        </RepeatButton>
                        <RepeatButton
                            Name="PART_EndPage"
                            Width="15"
                            Height="{TemplateBinding ActualHeight}"
                            Background="{TemplateBinding Background}"
                            Command="tools_controls:SidePanel.EndPageCommand"
                            Style="{StaticResource DefaultRepeatButtonStyle}">
                            <RepeatButton.Content>
                                <Canvas Height="{TemplateBinding ActualHeight}">
                                    <Path
                                        Name="PART_Path4"
                                        Canvas.Left="0"
                                        Canvas.Top="7"
                                        Data="{StaticResource EndPagePath1}"
                                        Fill="Black"
                                        Stroke="Black" />
                                    <Path
                                        Name="PART_Path6"
                                        Canvas.Left="4"
                                        Canvas.Top="7"
                                        Data="{StaticResource EndPagePath2}"
                                        Fill="Black"
                                        Stroke="Black" />
                                </Canvas>
                            </RepeatButton.Content>
                        </RepeatButton>
                    </StackPanel>
                    <ControlTemplate.Triggers>

                        <Trigger SourceName="PART_HomePage" Property="IsMouseOver" Value="True">
                            <Setter TargetName="PART_HomePage" Property="Background" Value="{DynamicResource HoverBackgroundBrush}" />
                            <Setter TargetName="PART_HomePage" Property="BorderBrush" Value="{DynamicResource HoverBorderBrush}" />
                        </Trigger>
                        <Trigger SourceName="PART_PreviousTab" Property="IsMouseOver" Value="True">
                            <Setter TargetName="PART_PreviousTab" Property="Background" Value="{DynamicResource HoverBackgroundBrush}" />
                            <Setter TargetName="PART_PreviousTab" Property="BorderBrush" Value="{DynamicResource HoverBorderBrush}" />
                        </Trigger>
                        <Trigger SourceName="PART_NextTab" Property="IsMouseOver" Value="True">
                            <Setter TargetName="PART_NextTab" Property="Background" Value="{DynamicResource HoverBackgroundBrush}" />
                            <Setter TargetName="PART_NextTab" Property="BorderBrush" Value="{DynamicResource HoverBorderBrush}" />
                        </Trigger>
                        <Trigger SourceName="PART_EndPage" Property="IsMouseOver" Value="True">
                            <Setter TargetName="PART_EndPage" Property="Background" Value="{DynamicResource HoverBackgroundBrush}" />
                            <Setter TargetName="PART_EndPage" Property="BorderBrush" Value="{DynamicResource HoverBorderBrush}" />
                        </Trigger>

                        <Trigger SourceName="PART_HomePage" Property="IsEnabled" Value="False">
                            <Setter TargetName="PART_HomePage" Property="Opacity" Value="0.5" />
                        </Trigger>
                        <Trigger SourceName="PART_PreviousTab" Property="IsEnabled" Value="False">
                            <Setter TargetName="PART_PreviousTab" Property="Opacity" Value="0.5" />
                        </Trigger>
                        <Trigger SourceName="PART_NextTab" Property="IsEnabled" Value="False">
                            <Setter TargetName="PART_NextTab" Property="Opacity" Value="0.5" />
                        </Trigger>
                        <Trigger SourceName="PART_EndPage" Property="IsEnabled" Value="False">
                            <Setter TargetName="PART_EndPage" Property="Opacity" Value="0.5" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style BasedOn="{StaticResource DefaultScrollButtonsBarStyle}" TargetType="{x:Type tools_controls:ScrollButtonsBar}" />

    <ControlTemplate x:Key="ScrollableLeftSidePanelTemplate" TargetType="{x:Type tools_controls:SidePanel}" >
        <Canvas KeyboardNavigation.TabNavigation="Local" ClipToBounds="False" >
            <tools_controls:ScrollButtonsBar x:Name="PART_ScrollButtons" 
                                         Visibility="Collapsed" 
                                         Style="{Binding Path=ScrollButtonsBarStyle, RelativeSource={RelativeSource FindAncestor,AncestorType={x:Type tools_controls:DockingManager}}}"
                                         Canvas.Left="0"  Canvas.Top="0" Panel.ZIndex="2"
                                         Height="{TemplateBinding ActualWidth}" >
                <tools_controls:ScrollButtonsBar.RenderTransform>
                    <RotateTransform Angle="90" CenterX="10.5" CenterY="10.5"/>
                </tools_controls:ScrollButtonsBar.RenderTransform>
            </tools_controls:ScrollButtonsBar>
            <Border Name="PART_BorderSeparator"  Panel.ZIndex="3" 
                    Background="{TemplateBinding Background}" Canvas.Top="{Binding ActualWidth,ElementName=PART_ScrollButtons}"
                    Height="8" Width="{TemplateBinding ActualWidth}"
                    Visibility="Collapsed"/>
            <Border Name="PART_BorderName"  Height="{TemplateBinding ActualHeight}" 
					Margin="0" ClipToBounds="True" Background="{TemplateBinding Background}"
					Panel.ZIndex="1" KeyboardNavigation.TabIndex="1"
					BorderThickness="{Binding Path=SidePanelBorderThickness
						, RelativeSource={RelativeSource FindAncestor
						, AncestorType={x:Type tools_controls:DockingManager}}}"
					BorderBrush="{DynamicResource BorderBrush}"
				>
                <Border.ContextMenu>
                    <ContextMenu ItemsSource="{TemplateBinding TabChildren}" Style="{StaticResource SideContextMenuStyle}" />
                </Border.ContextMenu>
                <ScrollViewer Name="PART_ScrollPanel" VerticalScrollBarVisibility="Hidden" HorizontalScrollBarVisibility="Hidden">
                    <tools_controls:DirectTabPanel Name="PART_PanelName" KeyboardNavigation.TabNavigation="Local"
										   IsItemsHost="True"
						 />
                </ScrollViewer>
            </Border>
            <tools_controls:OpacityDockPanel LastChildFill="True" Opacity="{Binding Path=ContentOpacity, RelativeSource={RelativeSource TemplatedParent}}">
                <DockPanel.RenderTransform>
                    <TransformGroup>
                        <TranslateTransform>
                            <TranslateTransform.X>
                                <MultiBinding Converter="{StaticResource SideToCoordinate}" ConverterParameter="XCoordinate" >
                                    <Binding Path="TabStripPlacement" RelativeSource="{RelativeSource TemplatedParent}" />
                                    <Binding Path="(Selector.SelectedItem).(tools_controls:DockingManager.DesiredWidthInDockedMode)"
										 RelativeSource="{RelativeSource TemplatedParent}" />
                                    <Binding Path="ContentRenderTransformX" RelativeSource="{RelativeSource TemplatedParent}" />
                                    <Binding Path="(ShadowBorder).(FrameworkElement.Width)" RelativeSource="{RelativeSource TemplatedParent}"/>
                                    <Binding Path="(tools_controls:SidePanel.DockingManager).(tools_controls:DockingManager.SidePanelBorderThickness)" RelativeSource="{RelativeSource TemplatedParent}" />
                                    <Binding Path="(tools_controls:SidePanel.DockingManager).(tools_controls:DockingManager.SidePanelSize)" RelativeSource="{RelativeSource TemplatedParent}"/>
                                </MultiBinding>
                            </TranslateTransform.X>
                            <TranslateTransform.Y>
                                <MultiBinding Converter="{StaticResource SideToCoordinate}" ConverterParameter="YCoordinate">
                                    <Binding Path="TabStripPlacement" RelativeSource="{RelativeSource TemplatedParent}" />
                                    <Binding Path="(Selector.SelectedItem).(tools_controls:DockingManager.DesiredHeightInDockedMode)"
										 RelativeSource="{RelativeSource TemplatedParent}" />
                                    <Binding Path="ContentRenderTransformY" RelativeSource="{RelativeSource TemplatedParent}" />
                                    <Binding Path="(ShadowBorder).(FrameworkElement.Height)" RelativeSource="{RelativeSource TemplatedParent}"/>
                                    <Binding Path="(tools_controls:SidePanel.DockingManager).(tools_controls:DockingManager.SidePanelBorderThickness)" RelativeSource="{RelativeSource TemplatedParent}" />
                                    <Binding Path="(tools_controls:SidePanel.DockingManager).(tools_controls:DockingManager.SidePanelSize)" RelativeSource="{RelativeSource TemplatedParent}"/>
                                </MultiBinding>
                            </TranslateTransform.Y>
                        </TranslateTransform>
                        <ScaleTransform ScaleX="{Binding Path=ContentScaleX, RelativeSource={RelativeSource TemplatedParent}}" ScaleY="{Binding Path=ContentScaleY, RelativeSource={RelativeSource TemplatedParent}}" />
                    </TransformGroup>
                </DockPanel.RenderTransform>
                <Border x:Name="PART_Shadow"
						DockPanel.Dock="{Binding Path=PanelSide
										   , RelativeSource={RelativeSource TemplatedParent}
										   , Converter={StaticResource InvertDock}}" Background="{DynamicResource BackgroundBrush}"
					>

                </Border>
                <DockPanel Background="{Binding Path=(tools_controls:SidePanel.DockingManager).(tools_controls:DockingManager.PreviewPanelBackground),RelativeSource={RelativeSource TemplatedParent}}" >
                    <tools_controls:Splitter x:Name="PART_SideSplitter"
									   Orientation="{Binding Path=PanelSide
										   , RelativeSource={RelativeSource TemplatedParent}
										   , Converter={StaticResource DockToOrientation}}"
									   DockPanel.Dock="{Binding Path=PanelSide
										   , RelativeSource={RelativeSource TemplatedParent}
										   , Converter={StaticResource InvertDock}}" />

                    <Border Name="WrapBorder"
                  BorderBrush="{StaticResource Default.BrushSlot}"	Background="Transparent"
                  BorderThickness="1">
                        <DockPanel Name="FlyPanel" >
                            <DockPanel.Width>
                                <MultiBinding Converter="{StaticResource ActualWidthSubstractBorder}" ConverterParameter="ContentWidthParameter"
                        UpdateSourceTrigger="PropertyChanged"
									  >
                                    <Binding Path="(Selector.SelectedItem).(tools_controls:DockingManager.DesiredWidthInDockedMode)"
                       RelativeSource="{RelativeSource TemplatedParent}"
                       UpdateSourceTrigger="PropertyChanged"
									 />
                                    <Binding Path="ActualWidth" RelativeSource="{RelativeSource TemplatedParent}" />
                                    <Binding Path="ActualWidth" ElementName="PART_SideSplitter"  />
                                    <Binding Path="PanelSide" RelativeSource="{RelativeSource TemplatedParent}" />
                                    <Binding Path="BorderThickness" ElementName="WrapBorder" />
                                </MultiBinding>
                            </DockPanel.Width>
                            <DockPanel.Height>
                                <MultiBinding Converter="{StaticResource ActualWidthSubstractBorder}" ConverterParameter="ContentHeightParameter">
                                    <Binding Path="(Selector.SelectedItem).(tools_controls:DockingManager.DesiredHeightInDockedMode)"
                       RelativeSource="{RelativeSource TemplatedParent}" />
                                    <Binding Path="ActualHeight" RelativeSource="{RelativeSource TemplatedParent}" />
                                    <Binding Path="ActualHeight" ElementName="PART_SideSplitter"  />
                                    <Binding Path="PanelSide" RelativeSource="{RelativeSource TemplatedParent}" />
                                    <Binding Path="BorderThickness" ElementName="WrapBorder" />
                                </MultiBinding>
                            </DockPanel.Height>
                            <tools_controls:DockHeaderPresenter x:Name="PART_Header" DockPanel.Dock="Top"
                              IsRichHeader="False" 
                              Style="{Binding Path=(tools_controls:DockingManager.InternalDataContext).(tools_controls:DockingManager.HeaderStyle)
							    , RelativeSource={RelativeSource Self}}"
                              IsTemplateParenKeyboardFocusWithin="{TemplateBinding IsShowedFocusedItem}"
													/>
                            <Border Name="Content">
                                <ContentPresenter  Margin="{TemplateBinding Margin}"
                        		ContentSource="SelectedContent" />
                            </Border>
                        </DockPanel>
                    </Border>
                </DockPanel>
            </tools_controls:OpacityDockPanel>
        </Canvas>
        <ControlTemplate.Triggers>
            <Trigger SourceName="PART_ScrollButtons" Property="Visibility" Value="Visible">
                <Setter TargetName="PART_BorderName" Property="Canvas.Top" Value="{Binding ActualWidth, ElementName=PART_ScrollButtons}" />
                <Setter TargetName="PART_BorderSeparator" Property="Visibility" Value="Visible" />
            </Trigger>
            <Trigger SourceName="PART_ScrollButtons" Property="Visibility" Value="Collapsed">
                <Setter TargetName="PART_BorderName" Property="Canvas.Top" Value="0" />
                <Setter TargetName="PART_BorderSeparator" Property="Visibility" Value="Collapsed" />
            </Trigger>
            <DataTrigger Binding="{Binding Path=(tools_controls:DockingManager.IsDragging), RelativeSource={RelativeSource AncestorType={x:Type tools_controls:DockingManager}}}" Value="True">
                <Setter Property="IsEnabled" Value="False" />
            </DataTrigger>
            <Trigger Property="PanelSide" Value="Top">
                <Setter TargetName="PART_Shadow" Property="Height" Value="4" />
                <Setter TargetName="PART_Shadow" Property="Background" Value="{DynamicResource BackgroundBrush}" />

            </Trigger>
            <Trigger Property="PanelSide" Value="Bottom">
                <Setter TargetName="PART_Shadow" Property="Height" Value="4" />
                <Setter TargetName="PART_Shadow" Property="Background" Value="{DynamicResource BackgroundBrush}" />
            </Trigger>
            <Trigger Property="PanelSide" Value="Right">
                <Setter TargetName="PART_Shadow" Property="Width" Value="4" />
                <Setter TargetName="PART_Shadow" Property="Background" Value="{DynamicResource BackgroundBrush}" />
            </Trigger>
            <Trigger Property="PanelSide" Value="Left">
                <Setter TargetName="PART_Shadow" Property="Width" Value="4" />
            </Trigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding Path=(tools_controls:SidePanel.DockingManager).(tools_controls:DockingManager.AutoHideAnimationMode)
								, RelativeSource={RelativeSource Self}}"
							   Value="Slide" />
                    <Condition Binding="{Binding Path=IsContentHiden, RelativeSource={RelativeSource Self}}"
							   Value="True" />
                    <Condition Binding="{Binding Path=PanelSide, RelativeSource={RelativeSource Self}
										   , Converter={StaticResource DockToOrientation}}"
							   Value="Vertical"/>
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.EnterActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation
                                Storyboard.TargetName="PART_Shadow"
                                Storyboard.TargetProperty="Width"
                                To="0"
                                Duration="{StaticResource ShadowDuration}" />
                        </Storyboard>
                    </BeginStoryboard>
                </MultiDataTrigger.EnterActions>
                <MultiDataTrigger.ExitActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation
                                Storyboard.TargetName="PART_Shadow"
                                Storyboard.TargetProperty="Width"
                                To="4"
                                Duration="{StaticResource ShadowDuration}" />
                        </Storyboard>
                    </BeginStoryboard>
                </MultiDataTrigger.ExitActions>
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding Path=(tools_controls:SidePanel.DockingManager).(tools_controls:DockingManager.AutoHideAnimationMode)
								, RelativeSource={RelativeSource Self}}"
							   Value="Slide" />
                    <Condition Binding="{Binding Path=IsContentHiden, RelativeSource={RelativeSource Self}}"
							   Value="True" />
                    <Condition Binding="{Binding Path=PanelSide, RelativeSource={RelativeSource Self}
										   , Converter={StaticResource DockToOrientation}}"
							   Value="Horizontal"/>
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.EnterActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation
                                Storyboard.TargetName="PART_Shadow"
                                Storyboard.TargetProperty="Height"
                                To="0"
                                Duration="{StaticResource ShadowDuration}" />
                        </Storyboard>
                    </BeginStoryboard>
                </MultiDataTrigger.EnterActions>
                <MultiDataTrigger.ExitActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation
                                Storyboard.TargetName="PART_Shadow"
                                Storyboard.TargetProperty="Height"
                                To="4"
                                Duration="{StaticResource ShadowDuration}" />
                        </Storyboard>
                    </BeginStoryboard>
                </MultiDataTrigger.ExitActions>
            </MultiDataTrigger>
            <Trigger SourceName="WrapBorder" Property="Visibility" Value="Visible">
                <Setter Property="BorderThickness" TargetName="WrapBorder" Value="{Binding Path=ElementBorderThickness
						, RelativeSource={RelativeSource AncestorType={x:Type tools_controls:DockingManager}}}" />
                <Setter TargetName="PART_BorderName" Property="BorderBrush" Value="{Binding Path=(tools_controls:SidePanel.DockingManager).(tools_controls:DockingManager.SidePanelBorderBrush), RelativeSource={RelativeSource TemplatedParent}}" />
            </Trigger>
            <DataTrigger Binding="{Binding Path=(tools_controls:SidePanel.DockingManager).(tools_controls:DockingManager.ShowShadowOnSidePanel)
								, RelativeSource={RelativeSource Self}}"
						 Value="False">
                <Setter TargetName="PART_Shadow" Property="Background" Value="{DynamicResource BackgroundBrush}"></Setter>
            </DataTrigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <ControlTemplate x:Key="ScrollableTopSidePanelTemplate" TargetType="{x:Type tools_controls:SidePanel}" >
        <Canvas KeyboardNavigation.TabNavigation="Local" ClipToBounds="False" >
            <tools_controls:ScrollButtonsBar Name="PART_ScrollButtons" Visibility="Collapsed" 
                                         Style="{Binding Path=ScrollButtonsBarStyle, RelativeSource={RelativeSource FindAncestor,AncestorType={x:Type tools_controls:DockingManager}}}"
                                        Canvas.Left="0"  
                                        Height="{TemplateBinding ActualHeight}"
                                        Canvas.Top="0" Panel.ZIndex="2" />
            <Border Name="PART_BorderSeparator"  Panel.ZIndex="3" 
                    Background="{TemplateBinding Background}" Canvas.Left="{Binding ActualWidth,ElementName=PART_ScrollButtons}"
                    Height="{TemplateBinding ActualHeight}" Width="8"
                    Visibility="Collapsed"/>
            <Border Name="PART_BorderName"  Height="{TemplateBinding ActualHeight}" Width="{TemplateBinding ActualWidth}"
					Margin="0" ClipToBounds="True" Background="{TemplateBinding Background}"
					Panel.ZIndex="1" KeyboardNavigation.TabIndex="1"
					BorderThickness="{Binding Path=SidePanelBorderThickness
						, RelativeSource={RelativeSource FindAncestor
						, AncestorType={x:Type tools_controls:DockingManager}}}"
					BorderBrush="{DynamicResource BorderBrush}"
				>
                <Border.ContextMenu>
                    <ContextMenu ItemsSource="{TemplateBinding TabChildren}" Style="{StaticResource SideContextMenuStyle}" />
                </Border.ContextMenu>
                <ScrollViewer Name="PART_ScrollPanel" VerticalScrollBarVisibility="Hidden" HorizontalScrollBarVisibility="Hidden">
                    <tools_controls:DirectTabPanel Name="PART_PanelName" KeyboardNavigation.TabNavigation="Local"
										   IsItemsHost="True"
						 />
                </ScrollViewer>
            </Border>
            <tools_controls:OpacityDockPanel LastChildFill="True" Opacity="{Binding Path=ContentOpacity, RelativeSource={RelativeSource TemplatedParent}}">
                <DockPanel.RenderTransform>
                    <TransformGroup>
                        <TranslateTransform>
                            <TranslateTransform.X>
                                <MultiBinding Converter="{StaticResource SideToCoordinate}" ConverterParameter="XCoordinate" >
                                    <Binding Path="TabStripPlacement" RelativeSource="{RelativeSource TemplatedParent}" />
                                    <Binding Path="(Selector.SelectedItem).(tools_controls:DockingManager.DesiredWidthInDockedMode)" RelativeSource="{RelativeSource TemplatedParent}" />
                                    <Binding Path="ContentRenderTransformX" RelativeSource="{RelativeSource TemplatedParent}" />
                                    <Binding Path="(ShadowBorder).(FrameworkElement.Width)" RelativeSource="{RelativeSource TemplatedParent}"/>
                                    <Binding Path="(tools_controls:SidePanel.DockingManager).(tools_controls:DockingManager.SidePanelBorderThickness)" RelativeSource="{RelativeSource TemplatedParent}" />
                                    <Binding Path="(tools_controls:SidePanel.DockingManager).(tools_controls:DockingManager.SidePanelSize)" RelativeSource="{RelativeSource TemplatedParent}"/>
                                </MultiBinding>
                            </TranslateTransform.X>
                            <TranslateTransform.Y>
                                <MultiBinding Converter="{StaticResource SideToCoordinate}" ConverterParameter="YCoordinate">
                                    <Binding Path="TabStripPlacement" RelativeSource="{RelativeSource TemplatedParent}" />
                                    <Binding Path="(Selector.SelectedItem).(tools_controls:DockingManager.DesiredHeightInDockedMode)" RelativeSource="{RelativeSource TemplatedParent}" />
                                    <Binding Path="ContentRenderTransformY" RelativeSource="{RelativeSource TemplatedParent}" />
                                    <Binding Path="(ShadowBorder).(FrameworkElement.Height)" RelativeSource="{RelativeSource TemplatedParent}"/>
                                    <Binding Path="(tools_controls:SidePanel.DockingManager).(tools_controls:DockingManager.SidePanelBorderThickness)" RelativeSource="{RelativeSource TemplatedParent}" />
                                    <Binding Path="(tools_controls:SidePanel.DockingManager).(tools_controls:DockingManager.SidePanelSize)" RelativeSource="{RelativeSource TemplatedParent}"/>
                                </MultiBinding>
                            </TranslateTransform.Y>
                        </TranslateTransform>
                        <ScaleTransform ScaleX="{Binding Path=ContentScaleX, RelativeSource={RelativeSource TemplatedParent}}" ScaleY="{Binding Path=ContentScaleY, RelativeSource={RelativeSource TemplatedParent}}" />
                    </TransformGroup>
                </DockPanel.RenderTransform>
                <Border x:Name="PART_Shadow"
						DockPanel.Dock="{Binding Path=PanelSide
										   , RelativeSource={RelativeSource TemplatedParent}
										   , Converter={StaticResource InvertDock}}" Background="{StaticResource ActiveBorderBrush}"
					>

                </Border>
                <DockPanel Background="{Binding Path=(tools_controls:SidePanel.DockingManager).(tools_controls:DockingManager.PreviewPanelBackground),RelativeSource={RelativeSource TemplatedParent}}" >
                    <tools_controls:Splitter x:Name="PART_SideSplitter"
									   Orientation="{Binding Path=PanelSide
										   , RelativeSource={RelativeSource TemplatedParent}
										   , Converter={StaticResource DockToOrientation}}"
									   DockPanel.Dock="{Binding Path=PanelSide
										   , RelativeSource={RelativeSource TemplatedParent}
										   , Converter={StaticResource InvertDock}}" />

                    <Border Name="WrapBorder"
                  BorderBrush="{StaticResource Default.BrushSlot}"	Background="Transparent"
                  BorderThickness="1">
                        <DockPanel Name="FlyPanel" >
                            <DockPanel.Width>
                                <MultiBinding Converter="{StaticResource ActualWidthSubstractBorder}" ConverterParameter="ContentWidthParameter"
                        UpdateSourceTrigger="PropertyChanged"
									  >
                                    <Binding Path="(Selector.SelectedItem).(tools_controls:DockingManager.DesiredWidthInDockedMode)"
                       RelativeSource="{RelativeSource TemplatedParent}"
                       UpdateSourceTrigger="PropertyChanged"
									 />
                                    <Binding Path="ActualWidth" RelativeSource="{RelativeSource TemplatedParent}" />
                                    <Binding Path="ActualWidth" ElementName="PART_SideSplitter"  />
                                    <Binding Path="PanelSide" RelativeSource="{RelativeSource TemplatedParent}" />
                                    <Binding Path="BorderThickness" ElementName="WrapBorder" />
                                </MultiBinding>
                            </DockPanel.Width>
                            <DockPanel.Height>
                                <MultiBinding Converter="{StaticResource ActualWidthSubstractBorder}" ConverterParameter="ContentHeightParameter">
                                    <Binding Path="(Selector.SelectedItem).(tools_controls:DockingManager.DesiredHeightInDockedMode)"
                       RelativeSource="{RelativeSource TemplatedParent}" />
                                    <Binding Path="ActualHeight" RelativeSource="{RelativeSource TemplatedParent}" />
                                    <Binding Path="ActualHeight" ElementName="PART_SideSplitter"  />
                                    <Binding Path="PanelSide" RelativeSource="{RelativeSource TemplatedParent}" />
                                    <Binding Path="BorderThickness" ElementName="WrapBorder" />
                                </MultiBinding>
                            </DockPanel.Height>
                            <tools_controls:DockHeaderPresenter x:Name="PART_Header" DockPanel.Dock="Top"
                              IsRichHeader="False" 
                              Style="{Binding Path=(tools_controls:DockingManager.InternalDataContext).(tools_controls:DockingManager.HeaderStyle)
							    , RelativeSource={RelativeSource Self}}"
                              IsTemplateParenKeyboardFocusWithin="{TemplateBinding IsShowedFocusedItem}"
													/>
                            <Border Name="Content">
                                <ContentPresenter  Margin="{TemplateBinding Margin}"
                        		ContentSource="SelectedContent" />
                            </Border>
                        </DockPanel>
                    </Border>
                </DockPanel>
            </tools_controls:OpacityDockPanel>
        </Canvas>
        <ControlTemplate.Triggers>
            <Trigger SourceName="PART_ScrollButtons" Property="Visibility" Value="Visible">
                <Setter TargetName="PART_BorderName" Property="Canvas.Left" Value="{Binding ActualWidth, ElementName=PART_ScrollButtons}" />
                <Setter TargetName="PART_BorderSeparator" Property="Visibility" Value="Visible" />
            </Trigger>
            <Trigger SourceName="PART_ScrollButtons" Property="Visibility" Value="Collapsed">
                <Setter TargetName="PART_BorderName" Property="Canvas.Left" Value="0" />
                <Setter TargetName="PART_BorderSeparator" Property="Visibility" Value="Collapsed" />
            </Trigger>
            <DataTrigger Binding="{Binding Path=(tools_controls:DockingManager.IsDragging), RelativeSource={RelativeSource AncestorType={x:Type tools_controls:DockingManager}}}" Value="True">
                <Setter Property="IsEnabled" Value="False" />
            </DataTrigger>
            <Trigger Property="PanelSide" Value="Top">
                <Setter TargetName="PART_Shadow" Property="Height" Value="4" />
                <Setter TargetName="PART_Shadow" Property="Background" Value="{DynamicResource BackgroundBrush}" />
            </Trigger>
            <Trigger Property="PanelSide" Value="Bottom">
                <Setter TargetName="PART_Shadow" Property="Height" Value="4" />
                <Setter TargetName="PART_Shadow" Property="Background" Value="{DynamicResource BackgroundBrush}" />
            </Trigger>
            <Trigger Property="PanelSide" Value="Right">
                <Setter TargetName="PART_Shadow" Property="Width" Value="4" />
                <Setter TargetName="PART_Shadow" Property="Background" Value="{DynamicResource BackgroundBrush}" />
            </Trigger>
            <Trigger Property="PanelSide" Value="Left">
                <Setter TargetName="PART_Shadow" Property="Width" Value="4" />
            </Trigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding Path=(tools_controls:SidePanel.DockingManager).(tools_controls:DockingManager.AutoHideAnimationMode)
								, RelativeSource={RelativeSource Self}}"
							   Value="Slide" />
                    <Condition Binding="{Binding Path=IsContentHiden, RelativeSource={RelativeSource Self}}"
							   Value="True" />
                    <Condition Binding="{Binding Path=PanelSide, RelativeSource={RelativeSource Self}
										   , Converter={StaticResource DockToOrientation}}"
							   Value="Vertical"/>
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.EnterActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation
                                Storyboard.TargetName="PART_Shadow"
                                Storyboard.TargetProperty="Width"
                                To="0"
                                Duration="{StaticResource ShadowDuration}" />
                        </Storyboard>
                    </BeginStoryboard>
                </MultiDataTrigger.EnterActions>
                <MultiDataTrigger.ExitActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation
                                Storyboard.TargetName="PART_Shadow"
                                Storyboard.TargetProperty="Width"
                                To="4"
                                Duration="{StaticResource ShadowDuration}" />
                        </Storyboard>
                    </BeginStoryboard>
                </MultiDataTrigger.ExitActions>
            </MultiDataTrigger>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding Path=(tools_controls:SidePanel.DockingManager).(tools_controls:DockingManager.AutoHideAnimationMode)
								, RelativeSource={RelativeSource Self}}"
							   Value="Slide" />
                    <Condition Binding="{Binding Path=IsContentHiden, RelativeSource={RelativeSource Self}}"
							   Value="True" />
                    <Condition Binding="{Binding Path=PanelSide, RelativeSource={RelativeSource Self}
										   , Converter={StaticResource DockToOrientation}}"
							   Value="Horizontal"/>
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.EnterActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation
                                Storyboard.TargetName="PART_Shadow"
                                Storyboard.TargetProperty="Height"
                                To="0"
                                Duration="{StaticResource ShadowDuration}" />
                        </Storyboard>
                    </BeginStoryboard>
                </MultiDataTrigger.EnterActions>
                <MultiDataTrigger.ExitActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation
                                Storyboard.TargetName="PART_Shadow"
                                Storyboard.TargetProperty="Height"
                                To="4"
                                Duration="{StaticResource ShadowDuration}" />
                        </Storyboard>
                    </BeginStoryboard>
                </MultiDataTrigger.ExitActions>
            </MultiDataTrigger>
            <Trigger SourceName="WrapBorder" Property="Visibility" Value="Visible">
                <Setter Property="BorderThickness" TargetName="WrapBorder" Value="{Binding Path=ElementBorderThickness
						, RelativeSource={RelativeSource AncestorType={x:Type tools_controls:DockingManager}}}" />
                <Setter TargetName="PART_BorderName" Property="BorderBrush" Value="{Binding Path=(tools_controls:SidePanel.DockingManager).(tools_controls:DockingManager.SidePanelBorderBrush), RelativeSource={RelativeSource TemplatedParent}}" />
            </Trigger>
            <DataTrigger Binding="{Binding Path=(tools_controls:SidePanel.DockingManager).(tools_controls:DockingManager.ShowShadowOnSidePanel)
								, RelativeSource={RelativeSource Self}}"
						 Value="False">
                <Setter TargetName="PART_Shadow" Property="Background" Value="{DynamicResource BackgroundBrush}"></Setter>
            </DataTrigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <ControlTemplate x:Key="PopupScrollableLeftSidePanelTemplate" TargetType="{x:Type tools_controls:SidePanel}" >
        <Canvas KeyboardNavigation.TabNavigation="Local" ClipToBounds="False" >
            <tools_controls:ScrollButtonsBar x:Name="PART_ScrollButtons" 
                                         Visibility="Collapsed" 
                                         Style="{Binding Path=ScrollButtonsBarStyle, RelativeSource={RelativeSource FindAncestor,AncestorType={x:Type tools_controls:DockingManager}}}"
                                         Canvas.Left="0"  Canvas.Top="0" Panel.ZIndex="2"
                                         Height="{TemplateBinding ActualWidth}" >
                <tools_controls:ScrollButtonsBar.RenderTransform>
                    <RotateTransform Angle="90" CenterX="10.5" CenterY="10.5"/>
                </tools_controls:ScrollButtonsBar.RenderTransform>
            </tools_controls:ScrollButtonsBar>
            <Border Name="PART_BorderSeparator"  Panel.ZIndex="3" 
                    Background="{TemplateBinding Background}" Canvas.Top="{Binding ActualWidth,ElementName=PART_ScrollButtons}"
                    Height="8" Width="{TemplateBinding ActualWidth}"
                    Visibility="Collapsed"/>
            <Border Name="PART_BorderName"  Height="{TemplateBinding ActualHeight}" 
					Margin="0" ClipToBounds="True" Background="{TemplateBinding Background}"
					Panel.ZIndex="1" KeyboardNavigation.TabIndex="1"
					BorderThickness="{Binding Path=SidePanelBorderThickness
						, RelativeSource={RelativeSource FindAncestor
						, AncestorType={x:Type tools_controls:DockingManager}}}"
					BorderBrush="{DynamicResource BorderBrush}"
				>
                <Border.ContextMenu>
                    <ContextMenu ItemsSource="{TemplateBinding TabChildren}" Style="{StaticResource SideContextMenuStyle}" />
                </Border.ContextMenu>
                <ScrollViewer
                    Name="PART_ScrollPanel"
                    HorizontalScrollBarVisibility="Hidden"
                    VerticalScrollBarVisibility="Hidden">
                    <tools_controls:DirectTabPanel
                        Name="PART_PanelName"
                        IsItemsHost="True"
                        KeyboardNavigation.TabNavigation="Local" />
                </ScrollViewer>
            </Border>
            <tools_controls:PopupSidePanel x:Name="PART_PopupPanel">
                <DockPanel>
                    <DockPanel Background="{Binding Path=(tools_controls:SidePanel.DockingManager).(tools_controls:DockingManager.PreviewPanelBackground),RelativeSource={RelativeSource TemplatedParent}}" >
                        <tools_controls:Splitter x:Name="PART_SideSplitter"
									   Orientation="{Binding Path=PanelSide
										   , RelativeSource={RelativeSource TemplatedParent}
										   , Converter={StaticResource DockToOrientation}}"
									   DockPanel.Dock="{Binding Path=PanelSide
										   , RelativeSource={RelativeSource TemplatedParent}
										   , Converter={StaticResource InvertDock}}" />

                        <Border Name="WrapBorder"
                  BorderBrush="{StaticResource Default.BrushSlot}"	Background="Transparent"
                  BorderThickness="1">
                            <DockPanel Name="FlyPanel" >
                                <DockPanel.Width>
                                    <MultiBinding Converter="{StaticResource ActualWidthSubstractBorder}" ConverterParameter="ContentWidthParameter"
                        UpdateSourceTrigger="PropertyChanged"
									  >
                                        <Binding Path="(Selector.SelectedItem).(tools_controls:DockingManager.DesiredWidthInDockedMode)"
                       RelativeSource="{RelativeSource TemplatedParent}"
                       UpdateSourceTrigger="PropertyChanged"
									 />
                                        <Binding Path="ActualWidth" RelativeSource="{RelativeSource TemplatedParent}" />
                                        <Binding Path="ActualWidth" ElementName="PART_SideSplitter"  />
                                        <Binding Path="PanelSide" RelativeSource="{RelativeSource TemplatedParent}" />
                                        <Binding Path="BorderThickness" ElementName="WrapBorder" />
                                    </MultiBinding>
                                </DockPanel.Width>
                                <DockPanel.Height>
                                    <MultiBinding Converter="{StaticResource ActualWidthSubstractBorder}" ConverterParameter="ContentHeightParameter">
                                        <Binding Path="(Selector.SelectedItem).(tools_controls:DockingManager.DesiredHeightInDockedMode)"
                       RelativeSource="{RelativeSource TemplatedParent}" />
                                        <Binding Path="ActualHeight" RelativeSource="{RelativeSource TemplatedParent}" />
                                        <Binding Path="ActualHeight" ElementName="PART_SideSplitter"  />
                                        <Binding Path="PanelSide" RelativeSource="{RelativeSource TemplatedParent}" />
                                        <Binding Path="BorderThickness" ElementName="WrapBorder" />
                                    </MultiBinding>
                                </DockPanel.Height>
                                <tools_controls:DockHeaderPresenter x:Name="PART_Header" DockPanel.Dock="Top"
                              IsRichHeader="False" 
                              Style="{Binding Path=(tools_controls:DockingManager.InternalDataContext).(tools_controls:DockingManager.HeaderStyle)
							    , RelativeSource={RelativeSource Self}}"
                              IsTemplateParenKeyboardFocusWithin="{TemplateBinding IsShowedFocusedItem}"
													/>
                                <Border Name="Content">
                                    <ContentPresenter  Margin="{TemplateBinding Margin}"
                        		ContentSource="SelectedContent" />
                                </Border>
                            </DockPanel>
                        </Border>
                    </DockPanel>
                </DockPanel>
            </tools_controls:PopupSidePanel>
        </Canvas>
        <ControlTemplate.Triggers>
            <Trigger SourceName="PART_ScrollButtons" Property="Visibility" Value="Visible">
                <Setter TargetName="PART_BorderName" Property="Canvas.Top" Value="{Binding ActualWidth, ElementName=PART_ScrollButtons}" />
                <Setter TargetName="PART_BorderSeparator" Property="Visibility" Value="Visible" />
            </Trigger>
            <Trigger SourceName="PART_ScrollButtons" Property="Visibility" Value="Collapsed">
                <Setter TargetName="PART_BorderName" Property="Canvas.Top" Value="0" />
                <Setter TargetName="PART_BorderSeparator" Property="Visibility" Value="Collapsed" />
            </Trigger>
            <DataTrigger Binding="{Binding Path=(tools_controls:DockingManager.IsDragging), RelativeSource={RelativeSource AncestorType={x:Type tools_controls:DockingManager}}}" Value="True">
                <Setter Property="IsEnabled" Value="False" />
            </DataTrigger>
            <Trigger SourceName="WrapBorder" Property="Visibility" Value="Visible">
                <Setter Property="BorderThickness" TargetName="WrapBorder" Value="{Binding Path=ElementBorderThickness
						, RelativeSource={RelativeSource AncestorType={x:Type tools_controls:DockingManager}}}" />
                <Setter TargetName="PART_BorderName" Property="BorderBrush" Value="{Binding Path=(tools_controls:SidePanel.DockingManager).(tools_controls:DockingManager.SidePanelBorderBrush), RelativeSource={RelativeSource TemplatedParent}}" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <ControlTemplate x:Key="PopupScrollableTopSidePanelTemplate" TargetType="{x:Type tools_controls:SidePanel}" >
        <Canvas KeyboardNavigation.TabNavigation="Local" ClipToBounds="False" >
            <tools_controls:ScrollButtonsBar Name="PART_ScrollButtons" Visibility="Collapsed" 
                                         Style="{Binding Path=ScrollButtonsBarStyle, RelativeSource={RelativeSource FindAncestor,AncestorType={x:Type tools_controls:DockingManager}}}"
                                        Canvas.Left="0"  
                                        Height="{TemplateBinding ActualHeight}"
                                        Canvas.Top="0" Panel.ZIndex="2" />
            <Border Name="PART_BorderSeparator"  Panel.ZIndex="3" 
                    Background="{TemplateBinding Background}" Canvas.Left="{Binding ActualWidth,ElementName=PART_ScrollButtons}"
                    Height="{TemplateBinding ActualHeight}" Width="8"
                    Visibility="Collapsed"/>
            <Border Name="PART_BorderName"  Height="{TemplateBinding ActualHeight}" Width="{TemplateBinding ActualWidth}"
					Margin="0" ClipToBounds="True" Background="{TemplateBinding Background}"
					Panel.ZIndex="1" KeyboardNavigation.TabIndex="1"
					BorderThickness="{Binding Path=SidePanelBorderThickness
						, RelativeSource={RelativeSource FindAncestor
						, AncestorType={x:Type tools_controls:DockingManager}}}"
					BorderBrush="{DynamicResource BorderBrush}"
				>
                <Border.ContextMenu>
                    <ContextMenu ItemsSource="{TemplateBinding TabChildren}" Style="{StaticResource SideContextMenuStyle}" />
                </Border.ContextMenu>
                <ScrollViewer
                    Name="PART_ScrollPanel"
                    HorizontalScrollBarVisibility="Hidden"
                    VerticalScrollBarVisibility="Hidden">
                    <tools_controls:DirectTabPanel
                        Name="PART_PanelName"
                        IsItemsHost="True"
                        KeyboardNavigation.TabNavigation="Local" />
                </ScrollViewer>
            </Border>
            <tools_controls:PopupSidePanel x:Name="PART_PopupPanel">
                <DockPanel>
                    <DockPanel Background="{Binding Path=(tools_controls:SidePanel.DockingManager).(tools_controls:DockingManager.PreviewPanelBackground),RelativeSource={RelativeSource TemplatedParent}}" >
                        <tools_controls:Splitter x:Name="PART_SideSplitter"
									   Orientation="{Binding Path=PanelSide
										   , RelativeSource={RelativeSource TemplatedParent}
										   , Converter={StaticResource DockToOrientation}}"
									   DockPanel.Dock="{Binding Path=PanelSide
										   , RelativeSource={RelativeSource TemplatedParent}
										   , Converter={StaticResource InvertDock}}" />

                        <Border Name="WrapBorder"
                  BorderBrush="{StaticResource Default.BrushSlot}"	Background="Transparent"
                  BorderThickness="1">
                            <DockPanel Name="FlyPanel" >
                                <DockPanel.Width>
                                    <MultiBinding Converter="{StaticResource ActualWidthSubstractBorder}" ConverterParameter="ContentWidthParameter"
                        UpdateSourceTrigger="PropertyChanged"
									  >
                                        <Binding Path="(Selector.SelectedItem).(tools_controls:DockingManager.DesiredWidthInDockedMode)"
                       RelativeSource="{RelativeSource TemplatedParent}"
                       UpdateSourceTrigger="PropertyChanged"
									 />
                                        <Binding Path="ActualWidth" RelativeSource="{RelativeSource TemplatedParent}" />
                                        <Binding Path="ActualWidth" ElementName="PART_SideSplitter"  />
                                        <Binding Path="PanelSide" RelativeSource="{RelativeSource TemplatedParent}" />
                                        <Binding Path="BorderThickness" ElementName="WrapBorder" />
                                    </MultiBinding>
                                </DockPanel.Width>
                                <DockPanel.Height>
                                    <MultiBinding Converter="{StaticResource ActualWidthSubstractBorder}" ConverterParameter="ContentHeightParameter">
                                        <Binding Path="(Selector.SelectedItem).(tools_controls:DockingManager.DesiredHeightInDockedMode)"
                       RelativeSource="{RelativeSource TemplatedParent}" />
                                        <Binding Path="ActualHeight" RelativeSource="{RelativeSource TemplatedParent}" />
                                        <Binding Path="ActualHeight" ElementName="PART_SideSplitter"  />
                                        <Binding Path="PanelSide" RelativeSource="{RelativeSource TemplatedParent}" />
                                        <Binding Path="BorderThickness" ElementName="WrapBorder" />
                                    </MultiBinding>
                                </DockPanel.Height>
                                <tools_controls:DockHeaderPresenter x:Name="PART_Header" DockPanel.Dock="Top"
                              IsRichHeader="False" 
                              Style="{Binding Path=(tools_controls:DockingManager.InternalDataContext).(tools_controls:DockingManager.HeaderStyle)
							    , RelativeSource={RelativeSource Self}}"
                              IsTemplateParenKeyboardFocusWithin="{TemplateBinding IsShowedFocusedItem}"
													/>
                                <Border Name="Content">
                                    <ContentPresenter  Margin="{TemplateBinding Margin}"
                        		ContentSource="SelectedContent" />
                                </Border>
                            </DockPanel>
                        </Border>
                    </DockPanel>
                </DockPanel>
            </tools_controls:PopupSidePanel>
        </Canvas>
        <ControlTemplate.Triggers>
            <Trigger SourceName="PART_ScrollButtons" Property="Visibility" Value="Visible">
                <Setter TargetName="PART_BorderName" Property="Canvas.Left" Value="{Binding ActualWidth, ElementName=PART_ScrollButtons}" />
                <Setter TargetName="PART_BorderSeparator" Property="Visibility" Value="Visible" />
            </Trigger>
            <Trigger SourceName="PART_ScrollButtons" Property="Visibility" Value="Collapsed">
                <Setter TargetName="PART_BorderName" Property="Canvas.Left" Value="0" />
                <Setter TargetName="PART_BorderSeparator" Property="Visibility" Value="Collapsed" />
            </Trigger>
            <DataTrigger Binding="{Binding Path=(tools_controls:DockingManager.IsDragging), RelativeSource={RelativeSource AncestorType={x:Type tools_controls:DockingManager}}}" Value="True">
                <Setter Property="IsEnabled" Value="False" />
            </DataTrigger>

            <Trigger SourceName="WrapBorder" Property="Visibility" Value="Visible">
                <Setter Property="BorderThickness" TargetName="WrapBorder" Value="{Binding Path=ElementBorderThickness
						, RelativeSource={RelativeSource AncestorType={x:Type tools_controls:DockingManager}}}" />
                <Setter TargetName="PART_BorderName" Property="BorderBrush" Value="{Binding Path=(tools_controls:SidePanel.DockingManager).(tools_controls:DockingManager.SidePanelBorderBrush), RelativeSource={RelativeSource TemplatedParent}}" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

     <Style x:Key="SidePanelRowDefinitionStyle" TargetType="RowDefinition">
        <Setter Property="Height">
            <Setter.Value>
                <MultiBinding Converter="{StaticResource ThicknessToSize}" ConverterParameter="XCoordinate">
                    <Binding Path="SidePanelBorderThickness" RelativeSource="{RelativeSource AncestorType={x:Type syncfusion:DockingManager}}"/>
                    <Binding Path="SidePanelSize" RelativeSource="{RelativeSource AncestorType={x:Type syncfusion:DockingManager}}"/>
                </MultiBinding>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="SidePanelColumnDefinitionStyle" TargetType="ColumnDefinition">
        <Setter Property="Width">
            <Setter.Value>

                <MultiBinding Converter="{StaticResource ThicknessToSize}" ConverterParameter="YCoordinate">
                    <Binding Path="SidePanelBorderThickness" RelativeSource="{RelativeSource AncestorType={x:Type syncfusion:DockingManager}}"/>
                    <Binding Path="SidePanelSize" RelativeSource="{RelativeSource AncestorType={x:Type syncfusion:DockingManager}}"/>
                </MultiBinding>
            </Setter.Value>
        </Setter>
    </Style>
  
    <Style x:Key="DefaultMainHostStyle" TargetType="{x:Type tools_controls:MainHost}">
        <Setter Property="FocusVisualStyle" Value="{Binding Path=FocusVisualStyle, RelativeSource={RelativeSource AncestorType={x:Type tools_controls:DockingManager}}}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type tools_controls:MainHost}">
                    <Grid Name="Sieve" ShowGridLines="False">
                        <Grid.RowDefinitions>
                            <RowDefinition Name="RowFirst" Style="{StaticResource SidePanelRowDefinitionStyle}" />
                            <RowDefinition />
                            <RowDefinition Name="RowLast" Style="{StaticResource SidePanelRowDefinitionStyle}" />
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Name="ColumnFirst" Style="{StaticResource SidePanelColumnDefinitionStyle}" />
                            <ColumnDefinition />
                            <ColumnDefinition Name="ColumnLast" Style="{StaticResource SidePanelColumnDefinitionStyle}" />
                        </Grid.ColumnDefinitions>
                        <ContentPresenter
                            Name="PART_ExpandSite"
                            Grid.Row="1"
                            Grid.Column="1"
                            Content="{TemplateBinding ContentControl.Content}"
                            ContentTemplate="{TemplateBinding ContentControl.ContentTemplate}"
                            Focusable="False" />
                        <StackPanel
                            Name="LeftTopSquare"
                            Grid.Row="0"
                            Grid.Column="0"
                            Background="{Binding Path=SidePanelBackground, RelativeSource={RelativeSource AncestorType={x:Type tools_controls:DockingManager}}}" />
                        <tools_controls:SidePanel
                            Name="PART_TopPanel"
                            Grid.Row="0"
                            Grid.Column="1"
                            ContentRenderTransformY="1"
                            PanelSide="Top"
                            TabStripPlacement="Top">
                            <tools_controls:SidePanel.Triggers>
                                <EventTrigger RoutedEvent="tools_controls:SidePanel.ShowEvent">
                                    <EventTrigger.Actions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <DoubleAnimation
                                                    x:Name="PART_TopShowAnimation"
                                                    BeginTime="{StaticResource ShadowTimeSpan}"
                                                    Storyboard.TargetProperty="ContentRenderTransformY"
                                                    To="0"
                                                    Duration="{Binding Path=(TabControl.SelectedItem).(tools_controls:DockingManager.AnimationDelay), RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type tools_controls:SidePanel}}}" />
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </EventTrigger.Actions>
                                </EventTrigger>
                                <EventTrigger RoutedEvent="tools_controls:SidePanel.HideEvent">
                                    <EventTrigger.Actions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <DoubleAnimation
                                                    x:Name="PART_TopHideAnimation"
                                                    Storyboard.TargetProperty="ContentRenderTransformY"
                                                    To="1"
                                                    Duration="{Binding Path=(TabControl.SelectedItem).(tools_controls:DockingManager.AnimationDelay), RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type tools_controls:SidePanel}}}" />
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </EventTrigger.Actions>
                                </EventTrigger>
                            </tools_controls:SidePanel.Triggers>
                        </tools_controls:SidePanel>
                        <StackPanel
                            Name="RightTopSquare"
                            Grid.Row="0"
                            Grid.Column="2"
                            Background="{Binding Path=SidePanelBackground, RelativeSource={RelativeSource AncestorType={x:Type tools_controls:DockingManager}}}" />
                        <tools_controls:SidePanel
                            Name="PART_LeftPanel"
                            Grid.Row="1"
                            Grid.Column="0"
                            ContentRenderTransformX="1"
                            PanelSide="Left"
                            TabStripPlacement="Left">
                            <tools_controls:SidePanel.Triggers>
                                <EventTrigger RoutedEvent="tools_controls:SidePanel.ShowEvent">
                                    <EventTrigger.Actions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <DoubleAnimation
                                                    x:Name="PART_LeftShowAnimation"
                                                    BeginTime="{StaticResource ShadowTimeSpan}"
                                                    Storyboard.TargetProperty="ContentRenderTransformX"
                                                    To="0"
                                                    Duration="{Binding Path=(TabControl.SelectedItem).(tools_controls:DockingManager.AnimationDelay), RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type tools_controls:SidePanel}}}" />
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </EventTrigger.Actions>
                                </EventTrigger>
                                <EventTrigger RoutedEvent="tools_controls:SidePanel.HideEvent">
                                    <EventTrigger.Actions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <DoubleAnimation
                                                    x:Name="PART_LeftHideAnimation"
                                                    Storyboard.TargetProperty="ContentRenderTransformX"
                                                    To="1"
                                                    Duration="{Binding Path=(TabControl.SelectedItem).(tools_controls:DockingManager.AnimationDelay), RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type tools_controls:SidePanel}}}" />
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </EventTrigger.Actions>
                                </EventTrigger>
                            </tools_controls:SidePanel.Triggers>
                        </tools_controls:SidePanel>
                        <tools_controls:SidePanel
                            Name="PART_RightPanel"
                            Grid.Row="1"
                            Grid.Column="2"
                            ContentRenderTransformX="1"
                            PanelSide="Right"
                            TabStripPlacement="Right">
                            <tools_controls:SidePanel.Triggers>
                                <EventTrigger RoutedEvent="tools_controls:SidePanel.ShowEvent">
                                    <EventTrigger.Actions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <DoubleAnimation
                                                    x:Name="PART_RightShowAnimation"
                                                    BeginTime="{StaticResource ShadowTimeSpan}"
                                                    Storyboard.TargetProperty="ContentRenderTransformX"
                                                    To="0"
                                                    Duration="{Binding Path=(TabControl.SelectedItem).(tools_controls:DockingManager.AnimationDelay), RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type tools_controls:SidePanel}}}" />
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </EventTrigger.Actions>
                                </EventTrigger>
                                <EventTrigger RoutedEvent="tools_controls:SidePanel.HideEvent">
                                    <EventTrigger.Actions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <DoubleAnimation
                                                    x:Name="PART_RightHideAnimation"
                                                    Storyboard.TargetProperty="ContentRenderTransformX"
                                                    To="1"
                                                    Duration="{Binding Path=(TabControl.SelectedItem).(tools_controls:DockingManager.AnimationDelay), RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type tools_controls:SidePanel}}}" />
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </EventTrigger.Actions>
                                </EventTrigger>
                            </tools_controls:SidePanel.Triggers>
                        </tools_controls:SidePanel>
                        <StackPanel
                            Name="LeftBottomSquare"
                            Grid.Row="2"
                            Grid.Column="0"
                            Background="{Binding Path=SidePanelBackground, RelativeSource={RelativeSource AncestorType={x:Type tools_controls:DockingManager}}}" />
                        <tools_controls:SidePanel
                            Name="PART_BottomPanel"
                            Grid.Row="2"
                            Grid.Column="1"
                            ContentRenderTransformY="1"
                            PanelSide="Bottom"
                            TabStripPlacement="Bottom">
                            <tools_controls:SidePanel.Triggers>
                                <EventTrigger RoutedEvent="tools_controls:SidePanel.ShowEvent">
                                    <EventTrigger.Actions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <DoubleAnimation
                                                    x:Name="PART_BottomShowAnimation"
                                                    BeginTime="{StaticResource ShadowTimeSpan}"
                                                    Storyboard.TargetProperty="ContentRenderTransformY"
                                                    To="0"
                                                    Duration="{Binding Path=(TabControl.SelectedItem).(tools_controls:DockingManager.AnimationDelay), RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type tools_controls:SidePanel}}}" />
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </EventTrigger.Actions>
                                </EventTrigger>
                                <EventTrigger RoutedEvent="tools_controls:SidePanel.HideEvent">
                                    <EventTrigger.Actions>
                                        <BeginStoryboard>
                                            <Storyboard>
                                                <DoubleAnimation
                                                    x:Name="PART_BottomHideAnimation"
                                                    Storyboard.TargetProperty="ContentRenderTransformY"
                                                    To="1"
                                                    Duration="{Binding Path=(TabControl.SelectedItem).(tools_controls:DockingManager.AnimationDelay), RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type tools_controls:SidePanel}}}" />
                                            </Storyboard>
                                        </BeginStoryboard>
                                    </EventTrigger.Actions>
                                </EventTrigger>
                            </tools_controls:SidePanel.Triggers>
                        </tools_controls:SidePanel>
                        <StackPanel
                            Name="RigthBottomSquare"
                            Grid.Row="2"
                            Grid.Column="2"
                            Background="{Binding Path=SidePanelBackground, RelativeSource={RelativeSource AncestorType={x:Type tools_controls:DockingManager}}}" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <DataTrigger Binding="{Binding Path=EnableScrollableSidePanel, RelativeSource={RelativeSource AncestorType={x:Type tools_controls:DockingManager}}}" Value="True">
                            <Setter TargetName="PART_BottomPanel" Property="Template" Value="{DynamicResource ScrollableTopSidePanelTemplate}" />
                            <Setter TargetName="PART_RightPanel" Property="Template" Value="{DynamicResource ScrollableLeftSidePanelTemplate}" />
                            <Setter TargetName="PART_TopPanel" Property="Template" Value="{DynamicResource ScrollableTopSidePanelTemplate}" />
                            <Setter TargetName="PART_LeftPanel" Property="Template" Value="{DynamicResource ScrollableLeftSidePanelTemplate}" />
                        </DataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding Path=EnableScrollableSidePanel, RelativeSource={RelativeSource AncestorType={x:Type tools_controls:DockingManager}}}" Value="True" />
                                <Condition Binding="{Binding Path=(tools_controls:DockingManager.InternalDataContext).(tools_controls:DockingManager.UsePopupAutoHidePreview), RelativeSource={RelativeSource AncestorType={x:Type tools_controls:DockingManager}}}" Value="True" />
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="PART_BottomPanel" Property="Template" Value="{DynamicResource PopupScrollableTopSidePanelTemplate}" />
                            <Setter TargetName="PART_RightPanel" Property="Template" Value="{DynamicResource PopupScrollableLeftSidePanelTemplate}" />
                            <Setter TargetName="PART_TopPanel" Property="Template" Value="{DynamicResource PopupScrollableTopSidePanelTemplate}" />
                            <Setter TargetName="PART_LeftPanel" Property="Template" Value="{DynamicResource PopupScrollableLeftSidePanelTemplate}" />
                        </MultiDataTrigger>
                        <Trigger SourceName="PART_TopPanel" Property="Visibility" Value="Collapsed">
                            <Setter TargetName="LeftTopSquare" Property="Visibility" Value="Collapsed" />
                            <Setter TargetName="RightTopSquare" Property="Visibility" Value="Collapsed" />
                        </Trigger>
                        <Trigger SourceName="PART_LeftPanel" Property="Visibility" Value="Collapsed">
                            <Setter TargetName="LeftTopSquare" Property="Visibility" Value="Collapsed" />
                            <Setter TargetName="LeftBottomSquare" Property="Visibility" Value="Collapsed" />
                        </Trigger>
                        <Trigger SourceName="PART_BottomPanel" Property="Visibility" Value="Collapsed">
                            <Setter TargetName="LeftBottomSquare" Property="Visibility" Value="Collapsed" />
                            <Setter TargetName="RigthBottomSquare" Property="Visibility" Value="Collapsed" />
                        </Trigger>
                        <Trigger SourceName="PART_RightPanel" Property="Visibility" Value="Collapsed">
                            <Setter TargetName="RightTopSquare" Property="Visibility" Value="Collapsed" />
                            <Setter TargetName="RigthBottomSquare" Property="Visibility" Value="Collapsed" />
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition SourceName="LeftTopSquare" Property="Visibility" Value="Collapsed" />
                                <Condition SourceName="RightTopSquare" Property="Visibility" Value="Collapsed" />
                                <Condition SourceName="PART_TopPanel" Property="Visibility" Value="Collapsed" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="RowFirst" Property="Height" Value="0" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition SourceName="LeftTopSquare" Property="Visibility" Value="Collapsed" />
                                <Condition SourceName="LeftBottomSquare" Property="Visibility" Value="Collapsed" />
                                <Condition SourceName="PART_LeftPanel" Property="Visibility" Value="Collapsed" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="ColumnFirst" Property="Width" Value="0" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition SourceName="RigthBottomSquare" Property="Visibility" Value="Collapsed" />
                                <Condition SourceName="LeftBottomSquare" Property="Visibility" Value="Collapsed" />
                                <Condition SourceName="PART_BottomPanel" Property="Visibility" Value="Collapsed" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="RowLast" Property="Height" Value="0" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition SourceName="RightTopSquare" Property="Visibility" Value="Collapsed" />
                                <Condition SourceName="RigthBottomSquare" Property="Visibility" Value="Collapsed" />
                                <Condition SourceName="PART_RightPanel" Property="Visibility" Value="Collapsed" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="ColumnLast" Property="Width" Value="0" />
                        </MultiTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <DataTrigger Binding="{Binding Path=AutoHideAnimationMode, RelativeSource={RelativeSource AncestorType={x:Type tools_controls:DockingManager}}}" Value="Scale">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type tools_controls:MainHost}">
                            <Grid Name="Sieve" ShowGridLines="False">
                                <Grid.RowDefinitions>
                                    <RowDefinition Name="RowFirst" Style="{StaticResource SidePanelRowDefinitionStyle}" />
                                    <RowDefinition />
                                    <RowDefinition Name="RowLast" Style="{StaticResource SidePanelRowDefinitionStyle}" />
                                </Grid.RowDefinitions>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Name="ColumnFirst" Style="{StaticResource SidePanelColumnDefinitionStyle}" />
                                    <ColumnDefinition />
                                    <ColumnDefinition Name="ColumnLast" Style="{StaticResource SidePanelColumnDefinitionStyle}" />
                                </Grid.ColumnDefinitions>
                                <ContentPresenter
                                    Name="PART_ExpandSite"
                                    Grid.Row="1"
                                    Grid.Column="1"
                                    Content="{TemplateBinding ContentControl.Content}"
                                    ContentTemplate="{TemplateBinding ContentTemplate}"
                                    Focusable="False" />
                                <StackPanel
                                    Name="LeftTopSquare"
                                    Grid.Row="0"
                                    Grid.Column="0" />
                                <tools_controls:SidePanel
                                    Name="PART_TopPanel"
                                    Grid.Row="0"
                                    Grid.Column="1"
                                    ContentScaleY="0"
                                    PanelSide="Top"
                                    TabStripPlacement="Top">
                                    <tools_controls:SidePanel.Triggers>
                                        <EventTrigger RoutedEvent="tools_controls:SidePanel.ShowEvent">
                                            <EventTrigger.Actions>
                                                <BeginStoryboard>
                                                    <Storyboard>
                                                        <DoubleAnimation
                                                            x:Name="PART_TopShowAnimation"
                                                            Storyboard.TargetProperty="ContentScaleY"
                                                            To="1"
                                                            Duration="{Binding Path=(TabControl.SelectedItem).(tools_controls:DockingManager.AnimationDelay), RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type tools_controls:SidePanel}}}" />
                                                    </Storyboard>
                                                </BeginStoryboard>
                                            </EventTrigger.Actions>
                                        </EventTrigger>
                                        <EventTrigger RoutedEvent="tools_controls:SidePanel.HideEvent">
                                            <EventTrigger.Actions>
                                                <BeginStoryboard>
                                                    <Storyboard>
                                                        <DoubleAnimation
                                                            x:Name="PART_TopHideAnimation"
                                                            Storyboard.TargetProperty="ContentScaleY"
                                                            To="0"
                                                            Duration="{Binding Path=(TabControl.SelectedItem).(tools_controls:DockingManager.AnimationDelay), RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type tools_controls:SidePanel}}}" />
                                                    </Storyboard>
                                                </BeginStoryboard>
                                            </EventTrigger.Actions>
                                        </EventTrigger>
                                    </tools_controls:SidePanel.Triggers>
                                </tools_controls:SidePanel>
                                <StackPanel
                                    Name="RightTopSquare"
                                    Grid.Row="0"
                                    Grid.Column="2" />
                                <tools_controls:SidePanel
                                    Name="PART_LeftPanel"
                                    Grid.Row="1"
                                    Grid.Column="0"
                                    ContentScaleX="0"
                                    PanelSide="Left"
                                    TabStripPlacement="Left">
                                    <tools_controls:SidePanel.Triggers>
                                        <EventTrigger RoutedEvent="tools_controls:SidePanel.ShowEvent">
                                            <EventTrigger.Actions>
                                                <BeginStoryboard>
                                                    <Storyboard>
                                                        <DoubleAnimation
                                                            x:Name="PART_LeftShowAnimation"
                                                            Storyboard.TargetProperty="ContentScaleX"
                                                            To="1"
                                                            Duration="{Binding Path=(TabControl.SelectedItem).(tools_controls:DockingManager.AnimationDelay), RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type tools_controls:SidePanel}}}" />
                                                    </Storyboard>
                                                </BeginStoryboard>
                                            </EventTrigger.Actions>
                                        </EventTrigger>
                                        <EventTrigger RoutedEvent="tools_controls:SidePanel.HideEvent">
                                            <EventTrigger.Actions>
                                                <BeginStoryboard>
                                                    <Storyboard>
                                                        <DoubleAnimation
                                                            x:Name="PART_LeftHideAnimation"
                                                            Storyboard.TargetProperty="ContentScaleX"
                                                            To="0"
                                                            Duration="{Binding Path=(TabControl.SelectedItem).(tools_controls:DockingManager.AnimationDelay), RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type tools_controls:SidePanel}}}" />
                                                    </Storyboard>
                                                </BeginStoryboard>
                                            </EventTrigger.Actions>
                                        </EventTrigger>
                                    </tools_controls:SidePanel.Triggers>
                                </tools_controls:SidePanel>
                                <tools_controls:SidePanel
                                    Name="PART_RightPanel"
                                    Grid.Row="1"
                                    Grid.Column="2"
                                    ContentScaleX="0"
                                    PanelSide="Right"
                                    TabStripPlacement="Right">
                                    <tools_controls:SidePanel.Triggers>
                                        <EventTrigger RoutedEvent="tools_controls:SidePanel.ShowEvent">
                                            <EventTrigger.Actions>
                                                <BeginStoryboard>
                                                    <Storyboard>
                                                        <DoubleAnimation
                                                            x:Name="PART_RightShowAnimation"
                                                            Storyboard.TargetProperty="ContentScaleX"
                                                            To="1"
                                                            Duration="{Binding Path=(TabControl.SelectedItem).(tools_controls:DockingManager.AnimationDelay), RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type tools_controls:SidePanel}}}" />
                                                    </Storyboard>
                                                </BeginStoryboard>
                                            </EventTrigger.Actions>
                                        </EventTrigger>
                                        <EventTrigger RoutedEvent="tools_controls:SidePanel.HideEvent">
                                            <EventTrigger.Actions>
                                                <BeginStoryboard>
                                                    <Storyboard>
                                                        <DoubleAnimation
                                                            x:Name="PART_RightHideAnimation"
                                                            Storyboard.TargetProperty="ContentScaleX"
                                                            To="0"
                                                            Duration="{Binding Path=(TabControl.SelectedItem).(tools_controls:DockingManager.AnimationDelay), RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type tools_controls:SidePanel}}}" />
                                                    </Storyboard>
                                                </BeginStoryboard>
                                            </EventTrigger.Actions>
                                        </EventTrigger>
                                    </tools_controls:SidePanel.Triggers>
                                </tools_controls:SidePanel>
                                <StackPanel
                                    Name="LeftBottomSquare"
                                    Grid.Row="2"
                                    Grid.Column="0" />
                                <tools_controls:SidePanel
                                    Name="PART_BottomPanel"
                                    Grid.Row="2"
                                    Grid.Column="1"
                                    ContentScaleY="0"
                                    PanelSide="Bottom"
                                    TabStripPlacement="Bottom">
                                    <tools_controls:SidePanel.Triggers>
                                        <EventTrigger RoutedEvent="tools_controls:SidePanel.ShowEvent">
                                            <EventTrigger.Actions>
                                                <BeginStoryboard>
                                                    <Storyboard>
                                                        <DoubleAnimation
                                                            x:Name="PART_BottomShowAnimation"
                                                            Storyboard.TargetProperty="ContentScaleY"
                                                            To="1"
                                                            Duration="{Binding Path=(TabControl.SelectedItem).(tools_controls:DockingManager.AnimationDelay), RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type tools_controls:SidePanel}}}" />
                                                    </Storyboard>
                                                </BeginStoryboard>
                                            </EventTrigger.Actions>
                                        </EventTrigger>
                                        <EventTrigger RoutedEvent="tools_controls:SidePanel.HideEvent">
                                            <EventTrigger.Actions>
                                                <BeginStoryboard>
                                                    <Storyboard>
                                                        <DoubleAnimation
                                                            x:Name="PART_BottomHideAnimation"
                                                            Storyboard.TargetProperty="ContentScaleY"
                                                            To="0"
                                                            Duration="{Binding Path=(TabControl.SelectedItem).(tools_controls:DockingManager.AnimationDelay), RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type tools_controls:SidePanel}}}" />
                                                    </Storyboard>
                                                </BeginStoryboard>
                                            </EventTrigger.Actions>
                                        </EventTrigger>
                                    </tools_controls:SidePanel.Triggers>
                                </tools_controls:SidePanel>
                                <StackPanel
                                    Name="RigthBottomSquare"
                                    Grid.Row="2"
                                    Grid.Column="2" />
                            </Grid>
                            <ControlTemplate.Triggers>
                                <DataTrigger Binding="{Binding Path=EnableScrollableSidePanel, RelativeSource={RelativeSource AncestorType={x:Type tools_controls:DockingManager}}}" Value="True">
                                    <Setter TargetName="PART_BottomPanel" Property="Template" Value="{DynamicResource ScrollableTopSidePanelTemplate}" />
                                    <Setter TargetName="PART_RightPanel" Property="Template" Value="{DynamicResource ScrollableLeftSidePanelTemplate}" />
                                    <Setter TargetName="PART_TopPanel" Property="Template" Value="{DynamicResource ScrollableTopSidePanelTemplate}" />
                                    <Setter TargetName="PART_LeftPanel" Property="Template" Value="{DynamicResource ScrollableLeftSidePanelTemplate}" />
                                </DataTrigger>
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding Path=EnableScrollableSidePanel, RelativeSource={RelativeSource AncestorType={x:Type tools_controls:DockingManager}}}" Value="True" />
                                        <Condition Binding="{Binding Path=(tools_controls:DockingManager.InternalDataContext).(tools_controls:DockingManager.UsePopupAutoHidePreview), RelativeSource={RelativeSource AncestorType={x:Type tools_controls:DockingManager}}}" Value="True" />
                                    </MultiDataTrigger.Conditions>
                                    <Setter TargetName="PART_BottomPanel" Property="Template" Value="{DynamicResource PopupScrollableTopSidePanelTemplate}" />
                                    <Setter TargetName="PART_RightPanel" Property="Template" Value="{DynamicResource PopupScrollableLeftSidePanelTemplate}" />
                                    <Setter TargetName="PART_TopPanel" Property="Template" Value="{DynamicResource PopupScrollableTopSidePanelTemplate}" />
                                    <Setter TargetName="PART_LeftPanel" Property="Template" Value="{DynamicResource PopupScrollableLeftSidePanelTemplate}" />
                                </MultiDataTrigger>
                                <Trigger SourceName="PART_TopPanel" Property="Visibility" Value="Collapsed">
                                    <Setter TargetName="LeftTopSquare" Property="Visibility" Value="Collapsed" />
                                    <Setter TargetName="RightTopSquare" Property="Visibility" Value="Collapsed" />
                                </Trigger>
                                <Trigger SourceName="PART_LeftPanel" Property="Visibility" Value="Collapsed">
                                    <Setter TargetName="LeftTopSquare" Property="Visibility" Value="Collapsed" />
                                    <Setter TargetName="LeftBottomSquare" Property="Visibility" Value="Collapsed" />
                                </Trigger>
                                <Trigger SourceName="PART_BottomPanel" Property="Visibility" Value="Collapsed">
                                    <Setter TargetName="LeftBottomSquare" Property="Visibility" Value="Collapsed" />
                                    <Setter TargetName="RigthBottomSquare" Property="Visibility" Value="Collapsed" />
                                </Trigger>
                                <Trigger SourceName="PART_RightPanel" Property="Visibility" Value="Collapsed">
                                    <Setter TargetName="RightTopSquare" Property="Visibility" Value="Collapsed" />
                                    <Setter TargetName="RigthBottomSquare" Property="Visibility" Value="Collapsed" />
                                </Trigger>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition SourceName="LeftTopSquare" Property="Visibility" Value="Collapsed" />
                                        <Condition SourceName="RightTopSquare" Property="Visibility" Value="Collapsed" />
                                        <Condition SourceName="PART_TopPanel" Property="Visibility" Value="Collapsed" />
                                    </MultiTrigger.Conditions>
                                    <Setter TargetName="RowFirst" Property="Height" Value="0" />
                                </MultiTrigger>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition SourceName="LeftTopSquare" Property="Visibility" Value="Collapsed" />
                                        <Condition SourceName="LeftBottomSquare" Property="Visibility" Value="Collapsed" />
                                        <Condition SourceName="PART_LeftPanel" Property="Visibility" Value="Collapsed" />
                                    </MultiTrigger.Conditions>
                                    <Setter TargetName="ColumnFirst" Property="Width" Value="0" />
                                </MultiTrigger>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition SourceName="RigthBottomSquare" Property="Visibility" Value="Collapsed" />
                                        <Condition SourceName="LeftBottomSquare" Property="Visibility" Value="Collapsed" />
                                        <Condition SourceName="PART_BottomPanel" Property="Visibility" Value="Collapsed" />
                                    </MultiTrigger.Conditions>
                                    <Setter TargetName="RowLast" Property="Height" Value="0" />
                                </MultiTrigger>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition SourceName="RightTopSquare" Property="Visibility" Value="Collapsed" />
                                        <Condition SourceName="RigthBottomSquare" Property="Visibility" Value="Collapsed" />
                                        <Condition SourceName="PART_RightPanel" Property="Visibility" Value="Collapsed" />
                                    </MultiTrigger.Conditions>
                                    <Setter TargetName="ColumnLast" Property="Width" Value="0" />
                                </MultiTrigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </DataTrigger>
            <DataTrigger Binding="{Binding Path=AutoHideAnimationMode, RelativeSource={RelativeSource AncestorType={x:Type tools_controls:DockingManager}}}" Value="Fade">
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type tools_controls:MainHost}">
                            <Grid Name="Sieve" ShowGridLines="False">
                                <Grid.RowDefinitions>
                                    <RowDefinition Name="RowFirst" Style="{StaticResource SidePanelRowDefinitionStyle}" />
                                    <RowDefinition />
                                    <RowDefinition Name="RowLast" Style="{StaticResource SidePanelRowDefinitionStyle}" />
                                </Grid.RowDefinitions>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Name="ColumnFirst" Style="{StaticResource SidePanelColumnDefinitionStyle}" />
                                    <ColumnDefinition />
                                    <ColumnDefinition Name="ColumnLast" Style="{StaticResource SidePanelColumnDefinitionStyle}" />
                                </Grid.ColumnDefinitions>
                                <ContentPresenter
                                    Name="PART_ExpandSite"
                                    Grid.Row="1"
                                    Grid.Column="1"
                                    Content="{TemplateBinding ContentControl.Content}"
                                    ContentTemplate="{TemplateBinding ContentControl.ContentTemplate}"
                                    Focusable="False" />
                                <StackPanel
                                    Name="LeftTopSquare"
                                    Grid.Row="0"
                                    Grid.Column="0" />
                                <tools_controls:SidePanel
                                    Name="PART_TopPanel"
                                    Grid.Row="0"
                                    Grid.Column="1"
                                    ContentOpacity="0"
                                    PanelSide="Top"
                                    TabStripPlacement="Top">
                                    <tools_controls:SidePanel.Triggers>
                                        <EventTrigger RoutedEvent="tools_controls:SidePanel.ShowEvent">
                                            <EventTrigger.Actions>
                                                <BeginStoryboard>
                                                    <Storyboard>
                                                        <DoubleAnimation
                                                            x:Name="PART_TopShowAnimation"
                                                            Storyboard.TargetProperty="ContentOpacity"
                                                            To="1"
                                                            Duration="{Binding Path=(TabControl.SelectedItem).(tools_controls:DockingManager.AnimationDelay), RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type tools_controls:SidePanel}}}" />
                                                    </Storyboard>
                                                </BeginStoryboard>
                                            </EventTrigger.Actions>
                                        </EventTrigger>
                                        <EventTrigger RoutedEvent="tools_controls:SidePanel.HideEvent">
                                            <EventTrigger.Actions>
                                                <BeginStoryboard>
                                                    <Storyboard>
                                                        <DoubleAnimation
                                                            x:Name="PART_TopHideAnimation"
                                                            Storyboard.TargetProperty="ContentOpacity"
                                                            To="0"
                                                            Duration="{Binding Path=(TabControl.SelectedItem).(tools_controls:DockingManager.AnimationDelay), RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type tools_controls:SidePanel}}}" />
                                                    </Storyboard>
                                                </BeginStoryboard>
                                            </EventTrigger.Actions>
                                        </EventTrigger>
                                    </tools_controls:SidePanel.Triggers>
                                </tools_controls:SidePanel>
                                <StackPanel
                                    Name="RightTopSquare"
                                    Grid.Row="0"
                                    Grid.Column="2" />
                                <tools_controls:SidePanel
                                    Name="PART_LeftPanel"
                                    Grid.Row="1"
                                    Grid.Column="0"
                                    ContentOpacity="0"
                                    PanelSide="Left"
                                    TabStripPlacement="Left">
                                    <tools_controls:SidePanel.Triggers>
                                        <EventTrigger RoutedEvent="tools_controls:SidePanel.ShowEvent">
                                            <EventTrigger.Actions>
                                                <BeginStoryboard>
                                                    <Storyboard>
                                                        <DoubleAnimation
                                                            x:Name="PART_LeftShowAnimation"
                                                            Storyboard.TargetProperty="ContentOpacity"
                                                            To="1"
                                                            Duration="{Binding Path=(TabControl.SelectedItem).(tools_controls:DockingManager.AnimationDelay), RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type tools_controls:SidePanel}}}" />
                                                    </Storyboard>
                                                </BeginStoryboard>
                                            </EventTrigger.Actions>
                                        </EventTrigger>
                                        <EventTrigger RoutedEvent="tools_controls:SidePanel.HideEvent">
                                            <EventTrigger.Actions>
                                                <BeginStoryboard>
                                                    <Storyboard>
                                                        <DoubleAnimation
                                                            x:Name="PART_LeftHideAnimation"
                                                            Storyboard.TargetProperty="ContentOpacity"
                                                            To="0"
                                                            Duration="{Binding Path=(TabControl.SelectedItem).(tools_controls:DockingManager.AnimationDelay), RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type tools_controls:SidePanel}}}" />
                                                    </Storyboard>
                                                </BeginStoryboard>
                                            </EventTrigger.Actions>
                                        </EventTrigger>
                                    </tools_controls:SidePanel.Triggers>
                                </tools_controls:SidePanel>
                                <tools_controls:SidePanel
                                    Name="PART_RightPanel"
                                    Grid.Row="1"
                                    Grid.Column="2"
                                    ContentOpacity="0"
                                    PanelSide="Right"
                                    TabStripPlacement="Right">
                                    <tools_controls:SidePanel.Triggers>
                                        <EventTrigger RoutedEvent="tools_controls:SidePanel.ShowEvent">
                                            <EventTrigger.Actions>
                                                <BeginStoryboard>
                                                    <Storyboard>
                                                        <DoubleAnimation
                                                            x:Name="PART_RightShowAnimation"
                                                            Storyboard.TargetProperty="ContentOpacity"
                                                            To="1"
                                                            Duration="{Binding Path=(TabControl.SelectedItem).(tools_controls:DockingManager.AnimationDelay), RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type tools_controls:SidePanel}}}" />
                                                    </Storyboard>
                                                </BeginStoryboard>
                                            </EventTrigger.Actions>
                                        </EventTrigger>
                                        <EventTrigger RoutedEvent="tools_controls:SidePanel.HideEvent">
                                            <EventTrigger.Actions>
                                                <BeginStoryboard>
                                                    <Storyboard>
                                                        <DoubleAnimation
                                                            x:Name="PART_RightHideAnimation"
                                                            Storyboard.TargetProperty="ContentOpacity"
                                                            To="0"
                                                            Duration="{Binding Path=(TabControl.SelectedItem).(tools_controls:DockingManager.AnimationDelay), RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type tools_controls:SidePanel}}}" />
                                                    </Storyboard>
                                                </BeginStoryboard>
                                            </EventTrigger.Actions>
                                        </EventTrigger>
                                    </tools_controls:SidePanel.Triggers>
                                </tools_controls:SidePanel>
                                <StackPanel
                                    Name="LeftBottomSquare"
                                    Grid.Row="2"
                                    Grid.Column="0" />
                                <tools_controls:SidePanel
                                    Name="PART_BottomPanel"
                                    Grid.Row="2"
                                    Grid.Column="1"
                                    ContentOpacity="0"
                                    PanelSide="Bottom"
                                    TabStripPlacement="Bottom">
                                    <tools_controls:SidePanel.Triggers>
                                        <EventTrigger RoutedEvent="tools_controls:SidePanel.ShowEvent">
                                            <EventTrigger.Actions>
                                                <BeginStoryboard>
                                                    <Storyboard>
                                                        <DoubleAnimation
                                                            x:Name="PART_BottomShowAnimation"
                                                            Storyboard.TargetProperty="ContentOpacity"
                                                            To="1"
                                                            Duration="{Binding Path=(TabControl.SelectedItem).(tools_controls:DockingManager.AnimationDelay), RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type tools_controls:SidePanel}}}" />
                                                    </Storyboard>
                                                </BeginStoryboard>
                                            </EventTrigger.Actions>
                                        </EventTrigger>
                                        <EventTrigger RoutedEvent="tools_controls:SidePanel.HideEvent">
                                            <EventTrigger.Actions>
                                                <BeginStoryboard>
                                                    <Storyboard>
                                                        <DoubleAnimation
                                                            x:Name="PART_BottomHideAnimation"
                                                            Storyboard.TargetProperty="ContentOpacity"
                                                            To="0"
                                                            Duration="{Binding Path=(TabControl.SelectedItem).(tools_controls:DockingManager.AnimationDelay), RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type tools_controls:SidePanel}}}" />
                                                    </Storyboard>
                                                </BeginStoryboard>
                                            </EventTrigger.Actions>
                                        </EventTrigger>
                                    </tools_controls:SidePanel.Triggers>
                                </tools_controls:SidePanel>
                                <StackPanel
                                    Name="RigthBottomSquare"
                                    Grid.Row="2"
                                    Grid.Column="2" />
                            </Grid>
                            <ControlTemplate.Triggers>
                                <DataTrigger Binding="{Binding Path=EnableScrollableSidePanel, RelativeSource={RelativeSource AncestorType={x:Type tools_controls:DockingManager}}}" Value="True">
                                    <Setter TargetName="PART_BottomPanel" Property="Template" Value="{DynamicResource ScrollableTopSidePanelTemplate}" />
                                    <Setter TargetName="PART_RightPanel" Property="Template" Value="{DynamicResource ScrollableLeftSidePanelTemplate}" />
                                    <Setter TargetName="PART_TopPanel" Property="Template" Value="{DynamicResource ScrollableTopSidePanelTemplate}" />
                                    <Setter TargetName="PART_LeftPanel" Property="Template" Value="{DynamicResource ScrollableLeftSidePanelTemplate}" />
                                </DataTrigger>
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding Path=EnableScrollableSidePanel, RelativeSource={RelativeSource AncestorType={x:Type tools_controls:DockingManager}}}" Value="True" />
                                        <Condition Binding="{Binding Path=(tools_controls:DockingManager.InternalDataContext).(tools_controls:DockingManager.UsePopupAutoHidePreview), RelativeSource={RelativeSource AncestorType={x:Type tools_controls:DockingManager}}}" Value="True" />
                                    </MultiDataTrigger.Conditions>
                                    <Setter TargetName="PART_BottomPanel" Property="Template" Value="{DynamicResource PopupScrollableTopSidePanelTemplate}" />
                                    <Setter TargetName="PART_RightPanel" Property="Template" Value="{DynamicResource PopupScrollableLeftSidePanelTemplate}" />
                                    <Setter TargetName="PART_TopPanel" Property="Template" Value="{DynamicResource PopupScrollableTopSidePanelTemplate}" />
                                    <Setter TargetName="PART_LeftPanel" Property="Template" Value="{DynamicResource PopupScrollableLeftSidePanelTemplate}" />
                                </MultiDataTrigger>
                                <Trigger SourceName="PART_TopPanel" Property="Visibility" Value="Collapsed">
                                    <Setter TargetName="LeftTopSquare" Property="Visibility" Value="Collapsed" />
                                    <Setter TargetName="RightTopSquare" Property="Visibility" Value="Collapsed" />
                                </Trigger>
                                <Trigger SourceName="PART_LeftPanel" Property="Visibility" Value="Collapsed">
                                    <Setter TargetName="LeftTopSquare" Property="Visibility" Value="Collapsed" />
                                    <Setter TargetName="LeftBottomSquare" Property="Visibility" Value="Collapsed" />
                                </Trigger>
                                <Trigger SourceName="PART_BottomPanel" Property="Visibility" Value="Collapsed">
                                    <Setter TargetName="LeftBottomSquare" Property="Visibility" Value="Collapsed" />
                                    <Setter TargetName="RigthBottomSquare" Property="Visibility" Value="Collapsed" />
                                </Trigger>
                                <Trigger SourceName="PART_RightPanel" Property="Visibility" Value="Collapsed">
                                    <Setter TargetName="RightTopSquare" Property="Visibility" Value="Collapsed" />
                                    <Setter TargetName="RigthBottomSquare" Property="Visibility" Value="Collapsed" />
                                </Trigger>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition SourceName="LeftTopSquare" Property="Visibility" Value="Collapsed" />
                                        <Condition SourceName="RightTopSquare" Property="Visibility" Value="Collapsed" />
                                        <Condition SourceName="PART_TopPanel" Property="Visibility" Value="Collapsed" />
                                    </MultiTrigger.Conditions>
                                    <Setter TargetName="RowFirst" Property="Height" Value="0" />
                                </MultiTrigger>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition SourceName="LeftTopSquare" Property="Visibility" Value="Collapsed" />
                                        <Condition SourceName="LeftBottomSquare" Property="Visibility" Value="Collapsed" />
                                        <Condition SourceName="PART_LeftPanel" Property="Visibility" Value="Collapsed" />
                                    </MultiTrigger.Conditions>
                                    <Setter TargetName="ColumnFirst" Property="Width" Value="0" />
                                </MultiTrigger>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition SourceName="RigthBottomSquare" Property="Visibility" Value="Collapsed" />
                                        <Condition SourceName="LeftBottomSquare" Property="Visibility" Value="Collapsed" />
                                        <Condition SourceName="PART_BottomPanel" Property="Visibility" Value="Collapsed" />
                                    </MultiTrigger.Conditions>
                                    <Setter TargetName="RowLast" Property="Height" Value="0" />
                                </MultiTrigger>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition SourceName="RightTopSquare" Property="Visibility" Value="Collapsed" />
                                        <Condition SourceName="RigthBottomSquare" Property="Visibility" Value="Collapsed" />
                                        <Condition SourceName="PART_RightPanel" Property="Visibility" Value="Collapsed" />
                                    </MultiTrigger.Conditions>
                                    <Setter TargetName="ColumnLast" Property="Width" Value="0" />
                                </MultiTrigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Geometry x:Key="N_MaximizeButtonPath">M5,0L5,7</Geometry>
    <Style x:Key="N_MaximizeButton" TargetType="{x:Type ToggleButton}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <StackPanel>
                        <Border
                            x:Name="brdBack"
                            Width="15"
                            Height="15"
                            BorderBrush="{DynamicResource BorderBrush}"
                            BorderThickness="1">
                            <Grid HorizontalAlignment="Center" VerticalAlignment="Center">
                                <Path
                                    Name="pathButton"
                                    Width="9"
                                    Height="8"
                                    HorizontalAlignment="Center"
                                    VerticalAlignment="Center"
                                    Data="{StaticResource N_MaximizeButtonPath}"
                                    SnapsToDevicePixels="False"
                                    Stretch="Fill"
                                    Stroke="{TemplateBinding ToggleButton.Foreground}"
                                    StrokeThickness="1" />
                            </Grid>
                        </Border>
                    </StackPanel>
                    <ControlTemplate.Triggers>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding Path=(tools_controls:NativeFloatWindow.DockingManager).(tools_controls:DockingManager.IsTouchEnabled), RelativeSource={RelativeSource AncestorType=tools_controls:NativeFloatWindow}}" Value="True" />
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="brdBack" Property="Width" Value="35" />
                            <Setter TargetName="brdBack" Property="Height" Value="35" />
                            <Setter TargetName="pathButton" Property="Width" Value="13" />
                            <Setter TargetName="pathButton" Property="Height" Value="13" />
                            <Setter TargetName="pathButton" Property="Data" Value="F1M377.597,302.937L363.046,302.937L363.046,292.232L377.597,292.232z M360.821,305.162L379.821,305.162L379.821,287.783L360.821,287.783z" />
                            <Setter TargetName="pathButton" Property="StrokeThickness" Value="0" />
                            <Setter TargetName="pathButton" Property="Fill" Value="{Binding Path=Foreground, RelativeSource={RelativeSource AncestorType={x:Type ToggleButton}}}" />
                        </MultiDataTrigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="brdBack" Property="Background" Value="{DynamicResource HoverBackgroundBrush}" />
                            <Setter TargetName="brdBack" Property="BorderBrush" Value="{DynamicResource HoverBorderBrush}" />
                            <Setter TargetName="brdBack" Property="BorderThickness" Value="1" />
                            <Setter TargetName="pathButton" Property="Stroke" Value="{DynamicResource HoverGlyphBrush}" />
                        </Trigger>
                        <DataTrigger Binding="{Binding Path=IsKeyboardFocusWithin, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type tools_controls:NativeFloatWindow}}}" Value="True">
                            <Setter TargetName="pathButton" Property="Stroke" Value="{DynamicResource ActiveGlyphBrush}" />
                        </DataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding Path=IsMouseOver, RelativeSource={RelativeSource Self}}" Value="True" />
                                <Condition Binding="{Binding Path=IsKeyboardFocusWithin, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type tools_controls:NativeFloatWindow}}}" Value="True" />
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="brdBack" Property="Background" Value="{DynamicResource ActiveBackgroundBrush}" />
                            <Setter TargetName="brdBack" Property="BorderBrush" Value="{DynamicResource ActiveBorderBrush}" />
                            <Setter TargetName="brdBack" Property="BorderThickness" Value="1" />
                            <Setter TargetName="pathButton" Property="Stroke" Value="{DynamicResource ActiveGlyphBrush}" />
                        </MultiDataTrigger>

                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="pathButton" Property="Opacity" Value="0.5" />
                        </Trigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding Path=IsKeyboardFocusWithin, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type tools_controls:NativeFloatWindow}}}" Value="True" />
                                <Condition Binding="{Binding Path=IsEnabled, RelativeSource={RelativeSource Self}}" Value="False" />
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="pathButton" Property="Opacity" Value="0.5" />
                        </MultiDataTrigger>

                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
  
    <Style x:Key="N_MinimizeButton" TargetType="{x:Type ToggleButton}">
        <Setter Property="Template" >
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <StackPanel>
                        <Border 
                          x:Name="brdBack" 
                          Width="15" 
                          Height="15" 
                          BorderThickness="0" 
                          Background="Transparent"
                          BorderBrush="Transparent" >
                        <Rectangle 
                          Name="pathButton" 
                          SnapsToDevicePixels="True"  
                          Stretch="Fill" 
                          StrokeThickness="1.5" 
                          Margin="0,0,0,4.5" 
                          RadiusY="1" 
                          RadiusX="1" 
                          Stroke="{TemplateBinding ToggleButton.Foreground}"
                          HorizontalAlignment="Center"
                          VerticalAlignment="Bottom"  
                          Width="9" 
                          Height="2">
                       </Rectangle>
                      </Border>
                    </StackPanel>
                    <ControlTemplate.Triggers>
                        <DataTrigger Binding="{Binding Path=(tools_controls:NativeFloatWindow.DockingManager).(tools_controls:DockingManager.IsTouchEnabled),RelativeSource={RelativeSource AncestorType=tools_controls:NativeFloatWindow}}" Value="True">
                            <Setter TargetName="brdBack" Property="Width" Value="35"/>
                            <Setter TargetName="brdBack" Property="Height" Value="35"/>
                            <Setter TargetName="pathButton" Property="Width" Value="14"/>
                            <Setter TargetName="pathButton" Property="Height" Value="4"/>
                            <Setter TargetName="pathButton" Property="VerticalAlignment" Value="Center"/>
                            <Setter TargetName="pathButton" Property="Margin" Value="0"/>
                        </DataTrigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="brdBack" Property="Background" Value="{DynamicResource HoverBackgroundBrush}" />
                            <Setter TargetName="brdBack" Property="BorderBrush" Value="{DynamicResource HoverBorderBrush}" />
                            <Setter TargetName="brdBack" Property="BorderThickness" Value="1" />
                            <Setter TargetName="pathButton" Property="Stroke" Value="{DynamicResource HoverGlyphBrush}"/>
                        </Trigger>

                        <DataTrigger Binding="{Binding Path=IsKeyboardFocusWithin
								, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type tools_controls:NativeFloatWindow}}}"
							  Value="True" >
                            <Setter TargetName="pathButton" Property="Stroke" Value="{DynamicResource ActiveGlyphBrush}"/>
                        </DataTrigger>

                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding Path=IsMouseOver, RelativeSource={RelativeSource Self}}"
								Value="True"/>
                                <Condition Binding="{Binding Path=IsKeyboardFocusWithin
									, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type tools_controls:NativeFloatWindow}}}"
								Value="True" />
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="pathButton" Property="Stroke" Value="{DynamicResource MetroHighlightedForegroundBrush}"/>
                        </MultiDataTrigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="brdBack" Property="Background" Value="{DynamicResource ActiveForegroundBrush}"/>
                            <Setter TargetName="brdBack" Property="BorderBrush" Value="{DynamicResource ActiveForegroundBrush}"/>
                            <Setter TargetName="pathButton" Property="Stroke" Value="{DynamicResource ActiveBackgroundBrush}"/>
                        </Trigger>
                        
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="pathButton" Property="Opacity" Value="0.5"/>
                        </Trigger>

                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding Path=IsKeyboardFocusWithin
									, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type tools_controls:NativeFloatWindow}}}"
								Value="True" />
                                <Condition Binding="{Binding Path=IsEnabled, RelativeSource={RelativeSource Self}}" Value="False" />
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="pathButton" Property="Opacity" Value="0.5"/>
                        </MultiDataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="N_RestoreButton" TargetType="{x:Type ToggleButton}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <StackPanel>
                        <Border
                            x:Name="brdBack"
                            Width="15"
                            Height="15"
                            BorderBrush="Transparent"
                            BorderThickness="1">
                            <Grid>
                                <Path
                                    Name="pathButton"
                                    Width="8.714"
                                    Height="9.517"
                                    HorizontalAlignment="Center"
                                    VerticalAlignment="Center"
                                    Data="M0.99999994,4.6419678 L0.99999994,8.3919678 L6,8.3294678 L6,4.6419678 z M2.7139893,2.000144 L2.7139893,2.5169678 L7,2.5169678 L7,5.6879282 L7.7139893,5.6879282 L7.7139893,2.000144 z M1.7139893,0 L8.7139893,0 L8.7139893,6.6880002 L7,6.6880002 L7,9.5169678 L0,9.5169678 L0,2.5169678 L1.7139893,2.5169678 z"
                                    Fill="{TemplateBinding ToggleButton.Foreground}"
                                    SnapsToDevicePixels="False"
                                    Stretch="Fill"
                                    StrokeThickness="1" />
                            </Grid>
                        </Border>
                    </StackPanel>
                    <ControlTemplate.Triggers>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding Path=(tools_controls:NativeFloatWindow.DockingManager).(tools_controls:DockingManager.IsTouchEnabled), RelativeSource={RelativeSource AncestorType=tools_controls:NativeFloatWindow}}" Value="True" />
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="brdBack" Property="Width" Value="35" />
                            <Setter TargetName="brdBack" Property="Height" Value="35" />
                            <Setter TargetName="pathButton" Property="Width" Value="13" />
                            <Setter TargetName="pathButton" Property="Height" Value="13" />
                            <Setter TargetName="pathButton" Property="Data" Value="F1 M 202.351,150.334L 183.571,150.334L 183.571,158.489L 177.649,158.489L 177.649,175.666L 196.429,175.666L 196.429,167.511L 202.351,167.511L 202.351,150.334 Z M 194.23,173.468L 179.848,173.468L 179.848,162.886L 183.571,162.886L 185.77,162.886L 194.23,162.886L 194.23,165.312L 194.23,167.511L 194.23,173.468 Z M 200.152,165.312L 196.429,165.312L 196.429,158.489L 185.77,158.489L 185.77,154.731L 200.152,154.731L 200.152,165.312 Z " />
                            <Setter TargetName="pathButton" Property="Fill" Value="{Binding Path=Foreground, RelativeSource={RelativeSource AncestorType={x:Type ToggleButton}}}" />
                        </MultiDataTrigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="brdBack" Property="Background" Value="{DynamicResource HoverBackgroundBrush}" />
                            <Setter TargetName="brdBack" Property="BorderBrush" Value="{DynamicResource HoverBorderBrush}" />
                            <Setter TargetName="brdBack" Property="BorderThickness" Value="1" />
                            <Setter TargetName="pathButton" Property="Fill" Value="{DynamicResource HoverGlyphBrush}" />
                        </Trigger>
                        <DataTrigger Binding="{Binding Path=IsKeyboardFocusWithin, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type tools_controls:NativeFloatWindow}}}" Value="True">
                            <Setter TargetName="pathButton" Property="Fill" Value="{DynamicResource ActiveGlyphBrush}" />
                        </DataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding Path=IsMouseOver, RelativeSource={RelativeSource Self}}" Value="True" />
                                <Condition Binding="{Binding Path=IsKeyboardFocusWithin, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type tools_controls:NativeFloatWindow}}}" Value="True" />
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="brdBack" Property="Background" Value="{DynamicResource HoverBackgroundBrush}" />
                            <Setter TargetName="brdBack" Property="BorderBrush" Value="{DynamicResource HoverBorderBrush}" />
                            <Setter TargetName="brdBack" Property="BorderThickness" Value="1" />
                            <Setter TargetName="pathButton" Property="Fill" Value="{DynamicResource HoverGlyphBrush}" />
                        </MultiDataTrigger>

                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="pathButton" Property="Opacity" Value="0.5" />
                        </Trigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding Path=IsKeyboardFocusWithin, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type tools_controls:NativeFloatWindow}}}" Value="True" />
                                <Condition Binding="{Binding Path=IsEnabled, RelativeSource={RelativeSource Self}}" Value="False" />
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="pathButton" Property="Opacity" Value="0.5" />
                        </MultiDataTrigger>

                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="Header" TargetType="{x:Type ContentControl}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ContentControl}">
                    <Border Name="borderTop" BorderBrush="{DynamicResource BorderBrush}">
                        <Border Name="borderWrap" BorderBrush="{DynamicResource BorderBrush}">
                            <Border.ContextMenu>
                                <tools_controls:CustomContextMenu Name="PART_ContextMenu" Focusable="false" />
                            </Border.ContextMenu>
                            <DockPanel
                                Name="MiddleHdrImg"
                                Background="{StaticResource ContentBackgroundBrush}"
                                LastChildFill="True">
                                <StackPanel DockPanel.Dock="Right" Orientation="Horizontal">
                                    <ToggleButton 
                                        x:Name="MinimizeButton" 
                                        Focusable="False" 
                                        syncfusion:WindowChrome.IsHitTestVisibleInChrome="True" 
                                        Margin="0,4,2,0"
                                        Padding="0"
                                        Style="{StaticResource N_MinimizeButton}" 
                                        Command="tools_controls:NativeFloatWindow.MinimizeCommand"/>
                                    <ToggleButton
                                        x:Name="Restorebutton"
                                        Margin="0,4,2,0"
                                        Padding="0"
                                        syncfusion:WindowChrome.IsHitTestVisibleInChrome="True"
                                        Command="tools_controls:NativeFloatWindow.RestoreCommand"
                                        Focusable="False"
                                        Style="{StaticResource N_RestoreButton}" />
                                    <ToggleButton
                                        x:Name="m_button"
                                        Margin="0,4,2,0"
                                        Padding="0"
                                        syncfusion:WindowChrome.IsHitTestVisibleInChrome="True"
                                        Command="tools_controls:NativeFloatWindow.MaximizeCommand"
                                        Focusable="False"
                                        Style="{StaticResource N_MaximizeButton}" />
                                    <ToggleButton
                                        Name="button"
                                        Margin="3,4,0,0"
                                        Padding="0"
                                        syncfusion:WindowChrome.IsHitTestVisibleInChrome="True"
                                        Command="tools_controls:NativeFloatWindow.CloseCommand"
                                        Focusable="False"
                                        Foreground="{StaticResource GlyphBrush}" Background="Transparent" BorderBrush="Transparent"
                                        Template="{Binding Path=(tools_controls:NativeFloatWindow.DockingManager).(tools_controls:DockingManager.CloseButtonTemplate), RelativeSource={RelativeSource AncestorType=tools_controls:NativeFloatWindow}}">
                                        <ToggleButton.ToolTip>
                                            <ToolTip Name="tooltip">
                                                <TextBlock Name="tooltipText" Text="{Binding Source={StaticResource ToolsResourceWrapperKey}, Path=CloseButtonTooltipText}" />
                                            </ToolTip>
                                        </ToggleButton.ToolTip>
                                    </ToggleButton>
                                </StackPanel>
                                <Border
                                    Name="Icon"
                                    Width="16"
                                    Margin="6,3,2,3"
                                    Background="{Binding Path=(tools_controls:DockingManager.InternalDataContext).(tools_controls:DockingManager.InternalDataContext).(tools_controls:DockingManager.Icon), RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type tools_controls:NativeFloatWindow}}}"
                                    DockPanel.Dock="Left" />
                                <ContentPresenter
                                    Name="contentWraper"
                                    HorizontalAlignment="Left"
                                    VerticalAlignment="Center"
                                    Content="{Binding Path=(tools_controls:DockingManager.InternalDataContext).(tools_controls:DockedElementTabbedHost.HostedElement).(tools_controls:DockingManager.Header), RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type tools_controls:NativeFloatWindow}}}"
                                    DockPanel.Dock="Left"
                                    IsHitTestVisible="True"
                                    TextBlock.Foreground="{StaticResource ContentForegroundBrush}" />
                            </DockPanel>
                        </Border>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger SourceName="Icon" Property="Background" Value="{x:Null}">
                            <Setter TargetName="Icon" Property="Visibility" Value="Collapsed" />
                        </Trigger>
                        <DataTrigger Binding="{Binding Path=(tools_controls:NativeFloatWindow.DockingManager).(tools_controls:DockingManager.IsTouchEnabled), RelativeSource={RelativeSource AncestorType=tools_controls:NativeFloatWindow}}" Value="True">
                            <Setter Property="FontSize" Value="18" />
                        </DataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding Path=(tools_controls:NativeFloatWindow.MaximizeButtonEnabled), RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type tools_controls:NativeFloatWindow}}}" Value="True" />
                                <Condition Binding="{Binding Path=(tools_controls:NativeFloatWindow.WindowState), RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type tools_controls:NativeFloatWindow}}}" Value="Maximized" />
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="m_button" Property="Visibility" Value="Collapsed" />
                            <Setter TargetName="Restorebutton" Property="Visibility" Value="Visible" />
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding Path=(tools_controls:NativeFloatWindow.MaximizeButtonEnabled), RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type tools_controls:NativeFloatWindow}}}" Value="True" />
                                <Condition Binding="{Binding Path=(tools_controls:NativeFloatWindow.WindowState), RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type tools_controls:NativeFloatWindow}}}" Value="Normal" />
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="m_button" Property="Visibility" Value="Visible" />
                            <Setter TargetName="Restorebutton" Property="Visibility" Value="Collapsed" />
                        </MultiDataTrigger>
                        <DataTrigger Binding="{Binding Path=(tools_controls:NativeFloatWindow.MaximizeButtonEnabled), RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type tools_controls:NativeFloatWindow}}}" Value="False">
                            <Setter TargetName="m_button" Property="Visibility" Value="Collapsed" />
                            <Setter TargetName="Restorebutton" Property="Visibility" Value="Collapsed" />
                        </DataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding Path=(tools_controls:NativeFloatWindow.MinimizeButtonVisibility),RelativeSource={RelativeSource FindAncestor,AncestorType={x:Type tools_controls:NativeFloatWindow}}}" Value="True" />
                                <Condition Binding="{Binding Path=(tools_controls:NativeFloatWindow.WindowState),RelativeSource={RelativeSource FindAncestor,AncestorType={x:Type tools_controls:NativeFloatWindow}}}" Value="Minimized" />
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="MinimizeButton" Property="Visibility" Value="Collapsed"/>
                            <Setter TargetName="Restorebutton" Property="Visibility" Value="Visible" />
                        </MultiDataTrigger>
                        <DataTrigger Binding="{Binding Path=(tools_controls:NativeFloatWindow.MinimizeButtonVisibility),RelativeSource={RelativeSource FindAncestor,AncestorType={x:Type tools_controls:NativeFloatWindow}}}" Value="False" >
                            <Setter TargetName="MinimizeButton" Property="Visibility" Value="Collapsed"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Path=(tools_controls:DockingManager.InternalDataContext).(tools_controls:DockedElementTabbedHost.HostedElement).(tools_controls:DockingManager.CanDocument), RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type tools_controls:NativeFloatWindow}}}" Value="False">
                            <Setter TargetName="PART_ContextMenu" Property="IsEnabledTabbedMenuItem" Value="False" />
                        </DataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding Path=(tools_controls:DockingManager.InternalDataContext).(tools_controls:DockedElementTabbedHost.HostedElement).(tools_controls:DockingManager.CanClose), RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type tools_controls:NativeFloatWindow}}}" Value="False" />
                                <Condition Binding="{Binding Path=(tools_controls:DockingManager.InternalDataContext).(tools_controls:DockedElementTabbedHost.ShowTabs), RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type tools_controls:NativeFloatWindow}}}" Value="False" />
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="PART_ContextMenu" Property="IsEnabledHiddenMenuItem" Value="False" />
                            <Setter TargetName="button" Property="IsEnabled" Value="False" />
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding Path=(tools_controls:NativeFloatWindow.DockingManager).(tools_controls:DockingManager.CloseTabs), RelativeSource={RelativeSource AncestorType={x:Type tools_controls:NativeFloatWindow}}}" Value="CloseActive" />
                                <Condition Binding="{Binding Path=(tools_controls:DockingManager.InternalDataContext).(tools_controls:DockingManager.InternalDataContext).(tools_controls:DockingManager.CanClose), RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type tools_controls:NativeFloatWindow}}}" Value="False" />
                                <Condition Binding="{Binding Path=(tools_controls:DockingManager.InternalDataContext).(tools_controls:DockedElementTabbedHost.ShowTabs), RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type tools_controls:NativeFloatWindow}}}" Value="True" />
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="PART_ContextMenu" Property="IsEnabledHiddenMenuItem" Value="False" />
                            <Setter TargetName="button" Property="IsEnabled" Value="False" />
                        </MultiDataTrigger>
                        <DataTrigger Binding="{Binding Path=(PrimaryElement).(tools_controls:DockingManager.NoHeader), RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type tools_controls:NativeFloatWindow}}}" Value="True">
                            <Setter TargetName="PART_ContextMenu" Property="Visibility" Value="Visible" />
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Path=IsMultiHostsContainer, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type tools_controls:NativeFloatWindow}}}" Value="True">
                            <Setter TargetName="contentWraper" Property="Visibility" Value="Hidden" />
                        </DataTrigger>
                        <DataTrigger Binding="{Binding Path=IsKeyboardFocusWithin, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type tools_controls:NativeFloatWindow}}}" Value="False">
                            <Setter TargetName="MiddleHdrImg" Property="Background" Value="{DynamicResource BackgroundBrush}" />
                        </DataTrigger>

                        <Trigger SourceName="MiddleHdrImg" Property="Visibility" Value="Visible">
                            <Setter TargetName="MiddleHdrImg" Property="Background" Value="{Binding Path=(tools_controls:NativeFloatWindow.DockingManager).(tools_controls:DockingManager.FloatWindowHeaderBackground), RelativeSource={RelativeSource AncestorType={x:Type tools_controls:NativeFloatWindow}}}" />
                            <Setter TargetName="contentWraper" Property="TextBlock.Foreground" Value="{Binding Path=(tools_controls:NativeFloatWindow.DockingManager).(tools_controls:DockingManager.FloatWindowHeaderForeground), RelativeSource={RelativeSource AncestorType={x:Type tools_controls:NativeFloatWindow}}}" />
                        </Trigger>
                        <DataTrigger Binding="{Binding Path=IsKeyboardFocusWithin, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type tools_controls:NativeFloatWindow}}}" Value="True">
                            <Setter TargetName="MiddleHdrImg" Property="Background" Value="{Binding Path=(tools_controls:NativeFloatWindow.DockingManager).(tools_controls:DockingManager.FloatWindowSelectedHeaderBackground), RelativeSource={RelativeSource AncestorType={x:Type tools_controls:NativeFloatWindow}}}" />
                            <Setter TargetName="contentWraper" Property="TextBlock.Foreground" Value="{Binding Path=(tools_controls:NativeFloatWindow.DockingManager).(tools_controls:DockingManager.FloatWindowSelectedHeaderForeground), RelativeSource={RelativeSource AncestorType={x:Type tools_controls:NativeFloatWindow}}}" />
                        </DataTrigger>

                        <!--<DataTrigger Binding="{Binding Path=IsMouseOver
						, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type tools_controls:NativeFloatWindow}}}"
							Value="True" >
                                                <Setter TargetName="MiddleHdrImg" Property="Background"
						Value="{Binding Path=(tools_controls:NativeFloatWindow.DockingManager).(tools_controls:DockingManager.FloatWindowMouseOverHeaderBackground), RelativeSource={RelativeSource AncestorType={x:Type tools_controls:NativeFloatWindow}}}" />
                                                <Setter TargetName="contentWraper" Property="TextBlock.Foreground"
						Value="{Binding Path=(tools_controls:NativeFloatWindow.DockingManager).(tools_controls:DockingManager.FloatWindowMouseOverHeaderForeground), RelativeSource={RelativeSource AncestorType={x:Type tools_controls:NativeFloatWindow}}}" />
                                            </DataTrigger>-->
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding Path=(tools_controls:NativeFloatWindow.DockingManager).(tools_controls:DockingManager.IsEnableHotTracking), RelativeSource={RelativeSource AncestorType={x:Type tools_controls:NativeFloatWindow}}}" Value="True" />
                                <Condition Binding="{Binding Path=IsMouseOver, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type tools_controls:NativeFloatWindow}}}" Value="True" />
                                <!--<Condition Binding="{Binding  Path=IsKeyboardFocusWithin
											, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type tools_controls:NativeFloatWindow}}}"
							Value="True" />-->

                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="MiddleHdrImg" Property="Background" Value="{Binding Path=(tools_controls:NativeFloatWindow.DockingManager).(tools_controls:DockingManager.FloatWindowMouseOverHeaderBackground), RelativeSource={RelativeSource AncestorType={x:Type tools_controls:NativeFloatWindow}}}" />
                            <Setter TargetName="contentWraper" Property="TextBlock.Foreground" Value="{Binding Path=(tools_controls:NativeFloatWindow.DockingManager).(tools_controls:DockingManager.FloatWindowMouseOverHeaderForeground), RelativeSource={RelativeSource AncestorType={x:Type tools_controls:NativeFloatWindow}}}" />
                        </MultiDataTrigger>

                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding Path=(tools_controls:NativeFloatWindow.DockingManager).(tools_controls:DockingManager.IsEnableHotTracking), RelativeSource={RelativeSource AncestorType={x:Type tools_controls:NativeFloatWindow}}}" Value="True" />
                                <Condition Binding="{Binding Path=IsMouseOver, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type tools_controls:NativeFloatWindow}}}" Value="True" />
                                <Condition Binding="{Binding Path=IsKeyboardFocusWithin, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type tools_controls:NativeFloatWindow}}}" Value="False" />

                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="MiddleHdrImg" Property="Background" Value="{Binding Path=(tools_controls:NativeFloatWindow.DockingManager).(tools_controls:DockingManager.FloatWindowMouseOverHeaderBackground), RelativeSource={RelativeSource AncestorType={x:Type tools_controls:NativeFloatWindow}}}" />
                            <Setter TargetName="contentWraper" Property="TextBlock.Foreground" Value="{Binding Path=(tools_controls:NativeFloatWindow.DockingManager).(tools_controls:DockingManager.FloatWindowMouseOverHeaderForeground), RelativeSource={RelativeSource AncestorType={x:Type tools_controls:NativeFloatWindow}}}" />
                        </MultiDataTrigger>
                        <!--<MultiDataTrigger>
                                                <MultiDataTrigger.Conditions>

                                                    <Condition Binding="{Binding Path=IsMouseOver
						, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type tools_controls:NativeFloatWindow}}}"
							Value="True" />
                                                    <Condition Binding="{Binding  Path=IsKeyboardFocusWithin
											, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type tools_controls:NativeFloatWindow}}}"
							Value="False" />

                                                </MultiDataTrigger.Conditions>
                                                <Setter TargetName="MiddleHdrImg" Property="Background"
						Value="{Binding Path=(tools_controls:NativeFloatWindow.DockingManager).(tools_controls:DockingManager.FloatWindowMouseOverHeaderBackground), RelativeSource={RelativeSource AncestorType={x:Type tools_controls:NativeFloatWindow}}}" />
                                                <Setter TargetName="contentWraper" Property="TextBlock.Foreground"
						Value="{Binding Path=(tools_controls:NativeFloatWindow.DockingManager).(tools_controls:DockingManager.FloatWindowMouseOverHeaderForeground), RelativeSource={RelativeSource AncestorType={x:Type tools_controls:NativeFloatWindow}}}" />
                                            </MultiDataTrigger>-->
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding Path=IsMouseOver, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type tools_controls:NativeFloatWindow}}}" Value="True" />
                                <Condition Binding="{Binding Path=IsKeyboardFocusWithin, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type tools_controls:NativeFloatWindow}}}" Value="False" />

                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="MiddleHdrImg" Property="Background" Value="{Binding Path=(tools_controls:NativeFloatWindow.DockingManager).(tools_controls:DockingManager.FloatWindowMouseOverHeaderBackground), RelativeSource={RelativeSource AncestorType={x:Type tools_controls:NativeFloatWindow}}}" />
                            <Setter TargetName="contentWraper" Property="TextBlock.Foreground" Value="{Binding Path=(tools_controls:NativeFloatWindow.DockingManager).(tools_controls:DockingManager.FloatWindowMouseOverHeaderForeground), RelativeSource={RelativeSource AncestorType={x:Type tools_controls:NativeFloatWindow}}}" />
                        </MultiDataTrigger>
                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding Path=IsMouseOver, ElementName=button}" Value="True" />
                                <Condition Binding="{Binding Path=IsKeyboardFocusWithin, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type tools_controls:NativeFloatWindow}}}" Value="False" />
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="button" Property="Background" Value="{DynamicResource HoverBackgroundBrush}" />
                            <Setter TargetName="button" Property="BorderBrush" Value="{DynamicResource HoverBorderBrush}" />
                            <Setter TargetName="button" Property="Foreground" Value="{DynamicResource HoverGlyphBrush}" />
                        </MultiDataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="LeftTop" TargetType="{x:Type ContentControl}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ContentControl}">
                    <Border
                        Name="border"
                        Margin="0"
                        Background="{StaticResource ContentBackgroundBrush}"
                        BorderBrush="{StaticResource ContentBorderBrush}"
                        BorderThickness="0" />



                    <ControlTemplate.Triggers>
                        <DataTrigger Binding="{Binding Path=IsKeyboardFocusWithin, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type tools_controls:NativeFloatWindow}}}" Value="False">
                            <Setter TargetName="border" Property="Background" Value="{DynamicResource ActiveBackgroundBrush}" />
                            <Setter TargetName="border" Property="BorderBrush" Value="{DynamicResource ActiveBorderBrush}" />
                        </DataTrigger>

                        <Trigger SourceName="border" Property="Visibility" Value="Visible">
                            <Setter TargetName="border" Property="Background" Value="{Binding Path=(tools_controls:NativeFloatWindow.DockingManager).(tools_controls:DockingManager.LeftFloatWindowTopBorderBrush), RelativeSource={RelativeSource AncestorType={x:Type tools_controls:NativeFloatWindow}}}" />
                        </Trigger>

                        <DataTrigger Binding="{Binding Path=IsKeyboardFocusWithin, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type tools_controls:NativeFloatWindow}}}" Value="True">
                            <Setter TargetName="border" Property="Background" Value="{Binding Path=(tools_controls:NativeFloatWindow.DockingManager).(tools_controls:DockingManager.LeftFloatWindowSelectedTopBorderBrush), RelativeSource={RelativeSource AncestorType={x:Type tools_controls:NativeFloatWindow}}}" />

                        </DataTrigger>
                        <DataTrigger Binding="{Binding Path=IsMouseOver, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type tools_controls:NativeFloatWindow}}}" Value="True">
                            <Setter TargetName="border" Property="Background" Value="{Binding Path=(tools_controls:NativeFloatWindow.DockingManager).(tools_controls:DockingManager.LeftFloatMouseOverTopBorderBrush), RelativeSource={RelativeSource AncestorType={x:Type tools_controls:NativeFloatWindow}}}" />

                        </DataTrigger>
                        <!--<MultiDataTrigger>
				<MultiDataTrigger.Conditions>
					<Condition  Binding="{Binding Path=(windows_shared:SkinStorage.VisualStyle), RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type tools_controls:DockingManager}}}"
						  Value="Default" />
					<Condition Binding="{Binding Path=IsKeyboardFocusWithin, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type tools_controls:NativeFloatWindow}}}"
						  Value="True" />
				</MultiDataTrigger.Conditions>
				<Setter TargetName="border" Property="Background"
						Value="{Binding Path=(tools_controls:NativeFloatWindow.DockingManager).(tools_controls:DockingManager.FloatWindowSelectedHeaderForeground), RelativeSource={RelativeSource AncestorType={x:Type tools_controls:NativeFloatWindow}}}" />
			</MultiDataTrigger>-->

                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding Path=(tools_controls:NativeFloatWindow.DockingManager).(tools_controls:DockingManager.IsEnableHotTracking), RelativeSource={RelativeSource AncestorType={x:Type tools_controls:NativeFloatWindow}}}" Value="True" />
                                <Condition Binding="{Binding Path=IsMouseOver, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type tools_controls:NativeFloatWindow}}}" Value="True" />
                                <Condition Binding="{Binding Path=IsKeyboardFocusWithin, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type tools_controls:NativeFloatWindow}}}" Value="False" />
                                <!--<Condition  Binding="{Binding Path=(windows_shared:SkinStorage.VisualStyle)
					, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type tools_controls:DockingManager}}}"
						Value="Default" />-->
                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="border" Property="Background" Value="{Binding Path=(tools_controls:NativeFloatWindow.DockingManager).(tools_controls:DockingManager.LeftFloatMouseOverTopBorderBrush), RelativeSource={RelativeSource AncestorType={x:Type tools_controls:NativeFloatWindow}}}" />
                        </MultiDataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="RightTop" TargetType="{x:Type ContentControl}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ContentControl}">
                    <Border
                        Name="border"
                        Margin="0"
                        Background="{StaticResource ContentBackgroundBrush}"
                        BorderBrush="{StaticResource ContentBorderBrush}"
                        BorderThickness="0" />


                    <ControlTemplate.Triggers>
                        <DataTrigger Binding="{Binding Path=IsKeyboardFocusWithin, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type tools_controls:NativeFloatWindow}}}" Value="False">
                            <Setter TargetName="border" Property="Background" Value="{DynamicResource ActiveBackgroundBrush}" />
                            <Setter TargetName="border" Property="BorderBrush" Value="{DynamicResource ActiveBorderBrush}" />
                        </DataTrigger>

                        <Trigger SourceName="border" Property="Visibility" Value="Visible">
                            <Setter TargetName="border" Property="Background" Value="{Binding Path=(tools_controls:NativeFloatWindow.DockingManager).(tools_controls:DockingManager.RightFloatWindowTopBorderBrush), RelativeSource={RelativeSource AncestorType={x:Type tools_controls:NativeFloatWindow}}}" />
                        </Trigger>

                        <DataTrigger Binding="{Binding Path=IsKeyboardFocusWithin, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type tools_controls:NativeFloatWindow}}}" Value="True">
                            <Setter TargetName="border" Property="Background" Value="{Binding Path=(tools_controls:NativeFloatWindow.DockingManager).(tools_controls:DockingManager.RightFloatWindowSelectedTopBorderBrush), RelativeSource={RelativeSource AncestorType={x:Type tools_controls:NativeFloatWindow}}}" />

                        </DataTrigger>
                        <DataTrigger Binding="{Binding Path=IsMouseOver, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type tools_controls:NativeFloatWindow}}}" Value="True">
                            <Setter TargetName="border" Property="Background" Value="{Binding Path=(tools_controls:NativeFloatWindow.DockingManager).(tools_controls:DockingManager.RightFloatMouseOverTopBorderBrush), RelativeSource={RelativeSource AncestorType={x:Type tools_controls:NativeFloatWindow}}}" />

                        </DataTrigger>


                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding Path=(tools_controls:NativeFloatWindow.DockingManager).(tools_controls:DockingManager.IsEnableHotTracking), RelativeSource={RelativeSource AncestorType={x:Type tools_controls:NativeFloatWindow}}}" Value="True" />
                                <Condition Binding="{Binding Path=IsMouseOver, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type tools_controls:NativeFloatWindow}}}" Value="True" />
                                <Condition Binding="{Binding Path=IsKeyboardFocusWithin, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type tools_controls:NativeFloatWindow}}}" Value="False" />

                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="border" Property="Background" Value="{Binding Path=(tools_controls:NativeFloatWindow.DockingManager).(tools_controls:DockingManager.RightFloatMouseOverTopBorderBrush), RelativeSource={RelativeSource AncestorType={x:Type tools_controls:NativeFloatWindow}}}" />
                        </MultiDataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="Left" TargetType="{x:Type ContentControl}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ContentControl}">
                    <Border
                        Name="border"
                        Margin="0"
                        Background="{DynamicResource BackgroundBrush}"
                        BorderBrush="{DynamicResource BorderBrush}"
                        BorderThickness="0" />
                    <ControlTemplate.Triggers>
                        <DataTrigger Binding="{Binding Path=IsKeyboardFocusWithin, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type tools_controls:NativeFloatWindow}}}" Value="False">
                            <Setter TargetName="border" Property="Background" Value="{DynamicResource ActiveBackgroundBrush}" />
                            <Setter TargetName="border" Property="BorderBrush" Value="{DynamicResource ActiveBorderBrush}" />
                        </DataTrigger>

                        <Trigger SourceName="border" Property="Visibility" Value="Visible">
                            <Setter TargetName="border" Property="Background" Value="{Binding Path=(tools_controls:NativeFloatWindow.DockingManager).(tools_controls:DockingManager.LeftFloatWindowBorderBrush), RelativeSource={RelativeSource AncestorType={x:Type tools_controls:NativeFloatWindow}}}" />
                        </Trigger>

                        <DataTrigger Binding="{Binding Path=IsKeyboardFocusWithin, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type tools_controls:NativeFloatWindow}}}" Value="True">
                            <Setter TargetName="border" Property="Background" Value="{Binding Path=(tools_controls:NativeFloatWindow.DockingManager).(tools_controls:DockingManager.LeftFloatWindowSelectedBorderBrush), RelativeSource={RelativeSource AncestorType={x:Type tools_controls:NativeFloatWindow}}}" />

                        </DataTrigger>

                        <DataTrigger Binding="{Binding Path=IsMouseOver, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type tools_controls:NativeFloatWindow}}}" Value="True">
                            <Setter TargetName="border" Property="Background" Value="{Binding Path=(tools_controls:NativeFloatWindow.DockingManager).(tools_controls:DockingManager.LeftFloatMouseOverBorderBrush), RelativeSource={RelativeSource AncestorType={x:Type tools_controls:NativeFloatWindow}}}" />

                        </DataTrigger>


                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding Path=(tools_controls:NativeFloatWindow.DockingManager).(tools_controls:DockingManager.IsEnableHotTracking), RelativeSource={RelativeSource AncestorType={x:Type tools_controls:NativeFloatWindow}}}" Value="True" />
                                <Condition Binding="{Binding Path=IsMouseOver, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type tools_controls:NativeFloatWindow}}}" Value="True" />
                                <Condition Binding="{Binding Path=IsKeyboardFocusWithin, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type tools_controls:NativeFloatWindow}}}" Value="False" />

                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="border" Property="Background" Value="{Binding Path=(tools_controls:NativeFloatWindow.DockingManager).(tools_controls:DockingManager.LeftFloatMouseOverBorderBrush), RelativeSource={RelativeSource AncestorType={x:Type tools_controls:NativeFloatWindow}}}" />
                        </MultiDataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="Right" TargetType="{x:Type ContentControl}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ContentControl}">
                    <Border
                        Name="border"
                        Margin="0"
                        Background="{DynamicResource BackgroundBrush}"
                        BorderBrush="{DynamicResource BorderBrush}"
                        BorderThickness="0" />
                    <ControlTemplate.Triggers>
                        <DataTrigger Binding="{Binding Path=IsKeyboardFocusWithin, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type tools_controls:NativeFloatWindow}}}" Value="False">
                            <Setter TargetName="border" Property="Background" Value="{DynamicResource ActiveBackgroundBrush}" />
                            <Setter TargetName="border" Property="BorderBrush" Value="{DynamicResource ActiveBorderBrush}" />
                        </DataTrigger>

                        <Trigger SourceName="border" Property="Visibility" Value="Visible">
                            <Setter TargetName="border" Property="Background" Value="{Binding Path=(tools_controls:NativeFloatWindow.DockingManager).(tools_controls:DockingManager.RightFloatWindowBorderBrush), RelativeSource={RelativeSource AncestorType={x:Type tools_controls:NativeFloatWindow}}}" />
                        </Trigger>
                        <DataTrigger Binding="{Binding Path=IsKeyboardFocusWithin, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type tools_controls:NativeFloatWindow}}}" Value="True">
                            <Setter TargetName="border" Property="Background" Value="{Binding Path=(tools_controls:NativeFloatWindow.DockingManager).(tools_controls:DockingManager.RightFloatWindowSelectedBorderBrush), RelativeSource={RelativeSource AncestorType={x:Type tools_controls:NativeFloatWindow}}}" />

                        </DataTrigger>
                        <DataTrigger Binding="{Binding Path=IsMouseOver, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type tools_controls:NativeFloatWindow}}}" Value="True">
                            <Setter TargetName="border" Property="Background" Value="{Binding Path=(tools_controls:NativeFloatWindow.DockingManager).(tools_controls:DockingManager.RightFloatMouseOverBorderBrush), RelativeSource={RelativeSource AncestorType={x:Type tools_controls:NativeFloatWindow}}}" />

                        </DataTrigger>


                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding Path=(tools_controls:NativeFloatWindow.DockingManager).(tools_controls:DockingManager.IsEnableHotTracking), RelativeSource={RelativeSource AncestorType={x:Type tools_controls:NativeFloatWindow}}}" Value="True" />
                                <Condition Binding="{Binding Path=IsMouseOver, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type tools_controls:NativeFloatWindow}}}" Value="True" />
                                <Condition Binding="{Binding Path=IsKeyboardFocusWithin, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type tools_controls:NativeFloatWindow}}}" Value="False" />

                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="border" Property="Background" Value="{Binding Path=(tools_controls:NativeFloatWindow.DockingManager).(tools_controls:DockingManager.RightFloatMouseOverBorderBrush), RelativeSource={RelativeSource AncestorType={x:Type tools_controls:NativeFloatWindow}}}" />
                        </MultiDataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="LeftBottom" TargetType="{x:Type ContentControl}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ContentControl}">
                    <Border
                        Name="border"
                        Margin="0"
                        Background="{DynamicResource BackgroundBrush}"
                        BorderBrush="{DynamicResource BorderBrush}"
                        BorderThickness="0" />
                    <ControlTemplate.Triggers>
                        <DataTrigger Binding="{Binding Path=IsKeyboardFocusWithin, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type tools_controls:NativeFloatWindow}}}" Value="False">
                            <Setter TargetName="border" Property="Background" Value="{DynamicResource ActiveBackgroundBrush}" />
                            <Setter TargetName="border" Property="BorderBrush" Value="{DynamicResource ActiveBorderBrush}" />
                        </DataTrigger>

                        <Trigger SourceName="border" Property="Visibility" Value="Visible">
                            <Setter TargetName="border" Property="Background" Value="{Binding Path=(tools_controls:NativeFloatWindow.DockingManager).(tools_controls:DockingManager.LeftFloatWindowBottomBorderBrush), RelativeSource={RelativeSource AncestorType={x:Type tools_controls:NativeFloatWindow}}}" />
                        </Trigger>
                        <DataTrigger Binding="{Binding Path=IsKeyboardFocusWithin, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type tools_controls:NativeFloatWindow}}}" Value="True">
                            <Setter TargetName="border" Property="Background" Value="{Binding Path=(tools_controls:NativeFloatWindow.DockingManager).(tools_controls:DockingManager.LeftFloatWindowSelectedBottomBorderBrush), RelativeSource={RelativeSource AncestorType={x:Type tools_controls:NativeFloatWindow}}}" />

                        </DataTrigger>
                        <DataTrigger Binding="{Binding Path=IsMouseOver, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type tools_controls:NativeFloatWindow}}}" Value="True">
                            <Setter TargetName="border" Property="Background" Value="{Binding Path=(tools_controls:NativeFloatWindow.DockingManager).(tools_controls:DockingManager.LeftFloatMouseOverBottomBorderBrush), RelativeSource={RelativeSource AncestorType={x:Type tools_controls:NativeFloatWindow}}}" />

                        </DataTrigger>


                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding Path=(tools_controls:NativeFloatWindow.DockingManager).(tools_controls:DockingManager.IsEnableHotTracking), RelativeSource={RelativeSource AncestorType={x:Type tools_controls:NativeFloatWindow}}}" Value="True" />
                                <Condition Binding="{Binding Path=IsMouseOver, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type tools_controls:NativeFloatWindow}}}" Value="True" />
                                <Condition Binding="{Binding Path=IsKeyboardFocusWithin, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type tools_controls:NativeFloatWindow}}}" Value="False" />

                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="border" Property="Background" Value="{Binding Path=(tools_controls:NativeFloatWindow.DockingManager).(tools_controls:DockingManager.LeftFloatMouseOverBottomBorderBrush), RelativeSource={RelativeSource AncestorType={x:Type tools_controls:NativeFloatWindow}}}" />
                        </MultiDataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="Bottom" TargetType="{x:Type ContentControl}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ContentControl}">
                    <Border
                        Name="border"
                        Margin="0"
                        Background="{DynamicResource BackgroundBrush}"
                        BorderBrush="{DynamicResource BorderBrush}"
                        BorderThickness="0" />
                    <ControlTemplate.Triggers>
                        <DataTrigger Binding="{Binding Path=IsKeyboardFocusWithin, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type tools_controls:NativeFloatWindow}}}" Value="False">
                            <Setter TargetName="border" Property="Background" Value="{DynamicResource ActiveBackgroundBrush}" />
                            <Setter TargetName="border" Property="BorderBrush" Value="{DynamicResource ActiveBorderBrush}" />
                        </DataTrigger>

                        <Trigger SourceName="border" Property="Visibility" Value="Visible">
                            <Setter TargetName="border" Property="Background" Value="{Binding Path=(tools_controls:NativeFloatWindow.DockingManager).(tools_controls:DockingManager.LeftFloatWindowBottomBorderBrush), RelativeSource={RelativeSource AncestorType={x:Type tools_controls:NativeFloatWindow}}}" />
                        </Trigger>
                        <DataTrigger Binding="{Binding Path=IsKeyboardFocusWithin, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type tools_controls:NativeFloatWindow}}}" Value="True">
                            <Setter TargetName="border" Property="Background" Value="{Binding Path=(tools_controls:NativeFloatWindow.DockingManager).(tools_controls:DockingManager.LeftFloatWindowSelectedBottomBorderBrush), RelativeSource={RelativeSource AncestorType={x:Type tools_controls:NativeFloatWindow}}}" />

                        </DataTrigger>
                        <DataTrigger Binding="{Binding Path=IsMouseOver, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type tools_controls:NativeFloatWindow}}}" Value="True">
                            <Setter TargetName="border" Property="Background" Value="{Binding Path=(tools_controls:NativeFloatWindow.DockingManager).(tools_controls:DockingManager.LeftFloatMouseOverBorderBrush), RelativeSource={RelativeSource AncestorType={x:Type tools_controls:NativeFloatWindow}}}" />

                        </DataTrigger>


                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding Path=(tools_controls:NativeFloatWindow.DockingManager).(tools_controls:DockingManager.IsEnableHotTracking), RelativeSource={RelativeSource AncestorType={x:Type tools_controls:NativeFloatWindow}}}" Value="True" />
                                <Condition Binding="{Binding Path=IsMouseOver, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type tools_controls:NativeFloatWindow}}}" Value="True" />
                                <Condition Binding="{Binding Path=IsKeyboardFocusWithin, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type tools_controls:NativeFloatWindow}}}" Value="False" />

                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="border" Property="Background" Value="{Binding Path=(tools_controls:NativeFloatWindow.DockingManager).(tools_controls:DockingManager.BottomFloatMouseOverBorderBrush), RelativeSource={RelativeSource AncestorType={x:Type tools_controls:NativeFloatWindow}}}" />
                        </MultiDataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="RightBottom" TargetType="{x:Type ContentControl}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ContentControl}">
                    <Border
                        Name="border"
                        Margin="0"
                        Background="{DynamicResource BackgroundBrush}"
                        BorderBrush="{DynamicResource BorderBrush}"
                        BorderThickness="0" />
                    <ControlTemplate.Triggers>
                        <DataTrigger Binding="{Binding Path=IsKeyboardFocusWithin, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type tools_controls:NativeFloatWindow}}}" Value="False">
                            <Setter TargetName="border" Property="Background" Value="{DynamicResource ActiveBackgroundBrush}" />
                            <Setter TargetName="border" Property="BorderBrush" Value="{DynamicResource ActiveBorderBrush}" />
                        </DataTrigger>

                        <Trigger SourceName="border" Property="Visibility" Value="Visible">
                            <Setter TargetName="border" Property="Background" Value="{Binding Path=(tools_controls:NativeFloatWindow.DockingManager).(tools_controls:DockingManager.RightFloatWindowBottomBorderBrush), RelativeSource={RelativeSource AncestorType={x:Type tools_controls:NativeFloatWindow}}}" />
                        </Trigger>
                        <DataTrigger Binding="{Binding Path=IsKeyboardFocusWithin, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type tools_controls:NativeFloatWindow}}}" Value="True">
                            <Setter TargetName="border" Property="Background" Value="{Binding Path=(tools_controls:NativeFloatWindow.DockingManager).(tools_controls:DockingManager.RightFloatWindowSelectedBottomBorderBrush), RelativeSource={RelativeSource AncestorType={x:Type tools_controls:NativeFloatWindow}}}" />

                        </DataTrigger>
                        <DataTrigger Binding="{Binding Path=IsMouseOver, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type tools_controls:NativeFloatWindow}}}" Value="True">
                            <Setter TargetName="border" Property="Background" Value="{Binding Path=(tools_controls:NativeFloatWindow.DockingManager).(tools_controls:DockingManager.RightFloatMouseOverBottomBorderBrush), RelativeSource={RelativeSource AncestorType={x:Type tools_controls:NativeFloatWindow}}}" />

                        </DataTrigger>


                        <MultiDataTrigger>
                            <MultiDataTrigger.Conditions>
                                <Condition Binding="{Binding Path=(tools_controls:NativeFloatWindow.DockingManager).(tools_controls:DockingManager.IsEnableHotTracking), RelativeSource={RelativeSource AncestorType={x:Type tools_controls:NativeFloatWindow}}}" Value="True" />
                                <Condition Binding="{Binding Path=IsMouseOver, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type tools_controls:NativeFloatWindow}}}" Value="True" />
                                <Condition Binding="{Binding Path=IsKeyboardFocusWithin, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type tools_controls:NativeFloatWindow}}}" Value="False" />

                            </MultiDataTrigger.Conditions>
                            <Setter TargetName="border" Property="Background" Value="{Binding Path=(tools_controls:NativeFloatWindow.DockingManager).(tools_controls:DockingManager.RightFloatMouseOverBottomBorderBrush), RelativeSource={RelativeSource AncestorType={x:Type tools_controls:NativeFloatWindow}}}" />
                        </MultiDataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="DockingNativeWindowStyle" TargetType="{x:Type tools_controls:NativeFloatWindow}">
        <Setter Property="WindowStyle" Value="None" />
        <Setter Property="syncfusion:WindowChrome.WindowChrome">
            <Setter.Value>
                <syncfusion:WindowChrome
                    CaptionHeight="20"
                    CornerRadius="0"
                    GlassFrameThickness="0"
                    ResizeBorderThickness="7" />
            </Setter.Value>
        </Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ContentControl}">
                    <AdornerDecorator>
                        <DockPanel Focusable="False" LastChildFill="True">
                            <Border
                                Name="FloatWindowOutBorder"
                                Background="{StaticResource ContentBackgroundBrush}"
                                BorderBrush="{DynamicResource BorderBrush}"
                                BorderThickness="1"
                                Focusable="False">
                                <Grid Focusable="False">
                                    <Grid.RowDefinitions>
                                        <RowDefinition Name="TopRow" Style="{StaticResource RowDefinitionStyle}" />
                                        <RowDefinition Height="*" />
                                        <RowDefinition Name="BottomRow" Height="4" />
                                    </Grid.RowDefinitions>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Name="LeftCol" Width="4" />
                                        <ColumnDefinition Width="*" />
                                        <ColumnDefinition Name="RightCol" Width="4" />
                                    </Grid.ColumnDefinitions>
                                    <ContentControl
                                        Name="BorderLeftTop"
                                        Grid.Row="0"
                                        Grid.Column="0"
                                        Focusable="False"
                                        Style="{StaticResource LeftTop}" />
                                    <Border
                                        x:Name="Part_BorderMenu"
                                        Grid.Row="0"
                                        Grid.Column="1">
                                        <Border.ContextMenu>
                                            <tools_controls:CustomContextMenu
                                                x:Name="Part_CustomContextMenu"
                                                Focusable="false"
                                                ItemContainerStyle="{StaticResource VistaCustomMenuItemStyle}" />
                                        </Border.ContextMenu>
                                    </Border>
                                    <ContentControl
                                        Name="BorderHeader"
                                        Grid.Row="0"
                                        Grid.Column="1"
                                        Content="{Binding Path=Title, RelativeSource={RelativeSource TemplatedParent}}"
                                        Focusable="False"
                                        Style="{StaticResource Header}" />
                                    <ContentControl
                                        Name="BorderRightTop"
                                        Grid.Row="0"
                                        Grid.Column="2"
                                        Focusable="False"
                                        Style="{StaticResource RightTop}" />
                                    <ContentControl
                                        Name="BorderLeft"
                                        Grid.Row="1"
                                        Grid.Column="0"
                                        Focusable="False"
                                        Style="{StaticResource Left}" />
                                    <ContentPresenter
                                        Name="ContentPresenter"
                                        Grid.Row="1"
                                        Grid.Column="1"
                                        Content="{TemplateBinding ContentControl.Content}"
                                        ContentTemplate="{TemplateBinding ContentControl.ContentTemplate}" />
                                    <ContentControl
                                        Name="BorderRight"
                                        Grid.Row="1"
                                        Grid.Column="2"
                                        Focusable="False"
                                        Style="{StaticResource Right}" />
                                    <ContentControl
                                        Name="BorderLeftBottom"
                                        Grid.Row="2"
                                        Grid.Column="0"
                                        Focusable="False"
                                        Style="{StaticResource LeftBottom}" />
                                    <ContentControl
                                        Name="BorderBottom"
                                        Grid.Row="2"
                                        Grid.Column="1"
                                        Focusable="False"
                                        Style="{StaticResource Bottom}" />
                                    <ContentControl
                                        Name="BorderRightBottom"
                                        Grid.Row="2"
                                        Grid.Column="2"
                                        Focusable="False"
                                        Style="{StaticResource RightBottom}" />
                                </Grid>
                            </Border>
                        </DockPanel>
                    </AdornerDecorator>

                </ControlTemplate>

            </Setter.Value>
        </Setter>
    </Style>

    <Style BasedOn="{StaticResource DockingNativeWindowStyle}" TargetType="{x:Type tools_controls:NativeFloatWindow}" />



    <Style TargetType="{x:Type tools_controls:DockingManager}">
        <!--<Setter Property="ContainerStyle" Value="{DynamicResource DocumentContainerKey}" />-->
        <Setter Property="ClipToBounds" Value="True" />
        <Setter Property="Background" Value="{DynamicResource ContentBackgroundBrush}" />
        <Setter Property="MainHostStyle" Value="{DynamicResource DefaultMainHostStyle}" />
        <Setter Property="DockWindowContextMenuItemStyle" Value="{DynamicResource VistaCustomMenuItemStyle}" />
        <Setter Property="tools_controls:DockingManager.NativeWindowStyle" Value="{DynamicResource DockingNativeWindowStyle}" />
        <Setter Property="tools_controls:DockingManager.DocumentTabControlStyle" Value="{DynamicResource AeroTabControlExtStyle}" />
        <Setter Property="tools_controls:DockingManager.DocumentTabItemStyle" Value="{DynamicResource AeroTabItemExtStyle}" />
        <Setter Property="TabControlStyle" Value="{DynamicResource DockTabControlStyle}" />
        <Setter Property="TabItemStyle" Value="{DynamicResource TabItemStyle}" />
        <Setter Property="CenterDragProvider" Value="{DynamicResource DockingDockPreviewCenterButtonVS2008Template}" />
        <Setter Property="LeftDragProvider" Value="{DynamicResource DockingDockPreviewLeftButtonVS2008Template}" />
        <Setter Property="TopDragProvider" Value="{DynamicResource DockingDockPreviewTopButtonVS2008Template}" />
        <Setter Property="RightDragProvider" Value="{DynamicResource DockingDockPreviewRightButtonVS2008Template}" />
        <Setter Property="BottomDragProvider" Value="{DynamicResource DockingDockPreviewBottomButtonVS2008Template}" />
        <Setter Property="CloseButtonTemplate" Value="{DynamicResource FlatKeyClose}" />
        <Setter Property="MaximizeButtonTemplate" Value="{DynamicResource FlatKeyMaximize}" />
        <Setter Property="MinimizeButtonTemplate" Value="{DynamicResource FlatKeyMinimize}" />
        <Setter Property="RestoreButtonTemplate" Value="{DynamicResource FlatKeyRestore}" />
        <Setter Property="MenuButtonTemplate" Value="{DynamicResource FlatKeyMenu}" />
        <Setter Property="AwlButtonTemplate" Value="{DynamicResource AwlKey}" />
        <Setter Property="FloatWindowTemplate" Value="{DynamicResource FloatWindowTemplate}" />
        <Setter Property="SideTabItemTemplate" Value="{DynamicResource SideTabItemTemplate}" />
        <Setter Property="SidePanelTemplate" Value="{DynamicResource SidePanelTemplate}" />
        <Setter Property="TabItemTemplate" Value="{DynamicResource TabItemTemplate}" />
        <Setter Property="DockedElementTabbedHostStyle" Value="{DynamicResource DockedElementTabbedHostStyle}" />
        <Setter Property="SidePanelStyle" Value="{DynamicResource SidePanelStyle}" />
        <Setter Property="SideItemStyle" Value="{DynamicResource SideTabItemStyle}" />
        <Setter Property="ScrollButtonsBarStyle" Value="{DynamicResource DefaultScrollButtonsBarStyle}" />
        <Setter Property="HeaderBorderBrush" Value="Transparent" />
        <Setter Property="HeaderBorderThickness" Value="1" />
        <Setter Property="ElementBorderThickness" Value="1" />
        <Setter Property="SideItemsBorderBrush" Value="{DynamicResource BorderBrush}" />
        <Setter Property="SidePanelItemsBorderThickness" Value="1" />
        <Setter Property="SideItemsBackground" Value="Transparent" />
        <Setter Property="TabItemBackgroundSelected" Value="{DynamicResource ActiveBackgroundBrush}" />
        <Setter Property="TabItemsBorderBrush" Value="{DynamicResource BorderBrush}" />
        <Setter Property="HeaderForeground" Value="{DynamicResource HeaderForegroundBrush}" />
        <Setter Property="HeaderBackground" Value="{DynamicResource HeaderBackgroundBrush}" />
        <Setter Property="HeaderMouseOverBackground" Value="{DynamicResource HoverBackgroundBrush}" />
        <Setter Property="SelectedHeaderBackground" Value="{DynamicResource ActiveBackgroundBrush}" />
        <Setter Property="HeaderForegroundSelected" Value="{DynamicResource ActiveForegroundBrush}" />
        <Setter Property="SidePanelBackground" Value="{DynamicResource BackgroundBrush}" />
        <Setter Property="TabPanelBackground" Value="{DynamicResource BackgroundBrush}" />
        <Setter Property="TabItemsCornerRadius" Value="0,0,2,2" />
        <Setter Property="TabItemBorderThickness" Value="1" />
        <Setter Property="TabItemsBorderThicknessSelected" Value="1,0,1,1" />

        <Setter Property="TabItemsBackground" Value="{DynamicResource BackgroundBrush}" />
        <Setter Property="tools_controls:DockingManager.SidePanelBorderBrush" Value="{DynamicResource BorderBrush}" />
        <Setter Property="tools_controls:DockingManager.TabPanelBorderBrush" Value="{DynamicResource BorderBrush}" />
        <Setter Property="tools_controls:DockingManager.HeaderBorderBrush" Value="{DynamicResource HeaderBorderBrush}" />

        <Setter Property="tools_controls:DockingManager.FloatWindowHeaderBackground" Value="{DynamicResource HeaderBackgroundBrush}" />
        <Setter Property="tools_controls:DockingManager.FloatWindowSelectedHeaderBackground" Value="{DynamicResource ActiveBackgroundBrush}" />
        <Setter Property="tools_controls:DockingManager.FloatWindowMouseOverHeaderBackground" Value="{DynamicResource HoverBackgroundBrush}" />
        <Setter Property="tools_controls:DockingManager.FloatWindowHeaderForeground" Value="{DynamicResource HeaderForegroundBrush}" />
        <Setter Property="tools_controls:DockingManager.FloatWindowSelectedHeaderForeground" Value="{DynamicResource ActiveForegroundBrush}" />
        <Setter Property="tools_controls:DockingManager.FloatWindowMouseOverHeaderForeground" Value="{DynamicResource HoverForegroundBrush}" />

        <Setter Property="tools_controls:DockingManager.LeftFloatWindowBorderBrush" Value="{DynamicResource BorderBrush}" />
        <Setter Property="tools_controls:DockingManager.LeftFloatWindowSelectedBorderBrush" Value="{DynamicResource ActiveBorderBrush}" />
        <Setter Property="tools_controls:DockingManager.LeftFloatMouseOverBorderBrush" Value="{DynamicResource HoverBorderBrush}" />
        <Setter Property="tools_controls:DockingManager.LeftFloatWindowTopBorderBrush" Value="{DynamicResource BorderBrush}" />
        <Setter Property="tools_controls:DockingManager.LeftFloatWindowSelectedTopBorderBrush" Value="{DynamicResource ActiveBorderBrush}" />
        <Setter Property="tools_controls:DockingManager.LeftFloatMouseOverTopBorderBrush" Value="{DynamicResource HoverBorderBrush}" />
        <Setter Property="tools_controls:DockingManager.LeftFloatWindowBottomBorderBrush" Value="{DynamicResource BorderBrush}" />
        <Setter Property="tools_controls:DockingManager.LeftFloatWindowSelectedBottomBorderBrush" Value="{DynamicResource ActiveBorderBrush}" />
        <Setter Property="tools_controls:DockingManager.LeftFloatMouseOverBottomBorderBrush" Value="{DynamicResource HoverBorderBrush}" />
        <Setter Property="tools_controls:DockingManager.RightFloatWindowBorderBrush" Value="{DynamicResource BorderBrush}" />
        <Setter Property="tools_controls:DockingManager.RightFloatWindowSelectedBorderBrush" Value="{DynamicResource ActiveBorderBrush}" />
        <Setter Property="tools_controls:DockingManager.RightFloatMouseOverBorderBrush" Value="{DynamicResource HoverBorderBrush}" />
        <Setter Property="tools_controls:DockingManager.RightFloatWindowTopBorderBrush" Value="{DynamicResource BorderBrush}" />
        <Setter Property="tools_controls:DockingManager.RightFloatWindowSelectedTopBorderBrush" Value="{DynamicResource ActiveBorderBrush}" />
        <Setter Property="tools_controls:DockingManager.RightFloatMouseOverTopBorderBrush" Value="{DynamicResource HoverBorderBrush}" />
        <Setter Property="tools_controls:DockingManager.RightFloatWindowBottomBorderBrush" Value="{DynamicResource BorderBrush}" />
        <Setter Property="tools_controls:DockingManager.RightFloatWindowSelectedBottomBorderBrush" Value="{DynamicResource ActiveBorderBrush}" />
        <Setter Property="tools_controls:DockingManager.RightFloatMouseOverBottomBorderBrush" Value="{DynamicResource HoverBorderBrush}" />
        <Setter Property="tools_controls:DockingManager.BottomFloatMouseOverBorderBrush" Value="{DynamicResource HoverBorderBrush}" />
        <Setter Property="FloatWindowLeftBorderWidth" Value="7" />
        <Setter Property="FloatWindowRightBorderWidth" Value="7" />
        <Setter Property="FloatWindowBottomBorderHeight" Value="7" />
        <Setter Property="DockHeaderStyle" Value="{DynamicResource DockHeaderStyle}"/>
        <Setter Property="tools_controls:DockingManager.TabItemsForeground" Value="{DynamicResource ForegroundBrush}" />
        <Setter Property="tools_controls:DockingManager.TabItemForegroundSelected" Value="{DynamicResource ActiveForegroundBrush}" />
        <Setter Property="PreviewPanelBackground" Value="{DynamicResource BackgroundBrush}" />
        <Setter Property="tools_controls:DockingManager.HeaderStyle" Value="{Binding DockHeaderStyle, RelativeSource={RelativeSource Mode=Self}}"/>
        <Style.Triggers>
            <Trigger Property="UseNativeFloatWindow" Value="True">
                <Setter Property="CloseButtonTemplate" Value="{DynamicResource NativeFlatKeyClose}" />
            </Trigger>
            <Trigger Property="IsTouchEnabled" Value="True">
                <Setter Property="AwlButtonTemplate" Value="{DynamicResource TouchAwlKey}" />
            <Setter Property="SidePanelSize" Value="35"></Setter>
            </Trigger>
            <Trigger Property="IsTouchEnabled" Value="False">
                <Setter Property="SidePanelSize" Value="21"></Setter>
            </Trigger>
        </Style.Triggers>
        <!--  Need testing. NOT REMOVE!  -->
        <!--<Style.Triggers>
			<Trigger Property="windows_shared:SkinStorage.VisualStyle" Value="Blend">
				<Setter Property="AutoHideVisibility" Value="False" />
			</Trigger>
		</Style.Triggers>-->
    </Style>

</ResourceDictionary>
